/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, Input, NgZone, Output, Renderer2, ViewChild } from '@angular/core';
import { BoxContentDirective, BoxFooterDirective, BoxHeaderDirective, BoxToolsDirective } from './box.directive';
import { removeListeners } from '../helpers';
var BoxComponent = /** @class */ (function () {
    /**
     * @method constructor
     * @param changeDetectorRef [description]
     * @param ngZone            [description]
     * @param renderer2         [description]
     */
    function BoxComponent(changeDetectorRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.remove = false;
        this.listeners = [];
        this.boxColor = 'default';
        this.buttonsStyleClass = 'btn btn-box-tool';
        this.contentStyleClass = 'box-content-wrapper';
        this.footerStyleClass = 'box-footer';
        this.headerBorder = true;
        this.headerStyleClass = 'box-header';
        this.isCollapsable = true;
        this.isCollapsed = false;
        this.isRemovable = true;
        this.isSolid = false;
        this.loadingStyleClass = 'fa fa-refresh fa-spin';
        this.styleClass = 'box';
        this.onCollapseDone = new EventEmitter();
        this.onCollapseStart = new EventEmitter();
    }
    /**
     * @method ngAfterViewInit
     */
    /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    BoxComponent.prototype.ngAfterViewInit = /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular(function () {
            if (_this.toggleButtonElement) {
                _this.listeners.push(_this.renderer2.listen(_this.toggleButtonElement.nativeElement, 'click', function () {
                    _this.isCollapsed = !_this.isCollapsed;
                    _this.changeDetectorRef.detectChanges();
                }));
            }
            if (_this.removeButtonElement) {
                _this.listeners.push(_this.renderer2.listen(_this.removeButtonElement.nativeElement, 'click', function () {
                    _this.remove = true;
                    _this.changeDetectorRef.detectChanges();
                }));
            }
        });
    };
    /**
     * @method ngOnDestroy
     */
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    BoxComponent.prototype.ngOnDestroy = /**
     * \@method ngOnDestroy
     * @return {?}
     */
    function () {
        removeListeners(this.listeners);
    };
    /**
     * [removedDone description]
     * \@method removedDone
     * @param {?} event [description]
     * @return {?}
     */
    BoxComponent.prototype.removedDone = /**
     * [removedDone description]
     * \@method removedDone
     * @param {?} event [description]
     * @return {?}
     */
    function (event) {
        if (event.toState === '1') {
            this.removed = true;
        }
    };
    /**
     * [collapseStart description]
     * \@method collapseStart
     * @param {?} event [description]
     * @return {?}
     */
    BoxComponent.prototype.collapseStart = /**
     * [collapseStart description]
     * \@method collapseStart
     * @param {?} event [description]
     * @return {?}
     */
    function (event) {
        if (event.fromState !== 'void') {
            this.isCollaping = true;
            this.onCollapseStart.emit(event);
        }
    };
    /**
     * [collapseDone description]
     * \@method collapseDone
     * @param {?} event [description]
     * @return {?}
     */
    BoxComponent.prototype.collapseDone = /**
     * [collapseDone description]
     * \@method collapseDone
     * @param {?} event [description]
     * @return {?}
     */
    function (event) {
        if (event.fromState !== 'void') {
            this.isCollaping = false;
            this.onCollapseDone.emit(event);
        }
    };
    BoxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-box',
                    template: "<div *ngIf=\"!removed\" [mkColor]=\"boxColor\" mkColorProperty=\"border-color\" mkColorPrefix=\"box\" [ngClass]=\"styleClass\" [class.collapsed-box]=\"isCollapsed && !isCollaping\" [class.box-solid]=\"isSolid\" [collapseAnimation]=\"remove\" (collapseAnimation.done)=\"removedDone($event)\">\n  <div *ngIf=\"header || boxHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkColor]=\"boxColor\" [mkColorCondition]=\"isSolid\" mkColorProperty=\"background-color\" [class.with-border]=\"headerBorder\">\n    <h3 class=\"box-title\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-header\"></ng-content>\n    </h3>\n    <div class=\"box-tools pull-right\">\n      <ng-content select=\"mk-box-tools\"></ng-content>\n      <button *ngIf=\"isCollapsable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #toggleButtonElement>\n        <i class=\"fa\" [ngClass]=\"{'fa-plus': isCollapsed, 'fa-minus': !isCollapsed}\"></i>\n      </button>\n      <button *ngIf=\"isRemovable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #removeButtonElement>\n        <i class=\"fa fa-times\"></i>\n      </button>\n    </div>\n  </div>\n  <div [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\" [collapseAnimation]=\"isCollapsed\" (collapseAnimation.start)=\"collapseStart($event)\" (collapseAnimation.done)=\"collapseDone($event)\">\n    <div class=\"box-body\">\n      <ng-container *ngIf=\"boxHeaderDirective || boxContentDirective || boxFooterDirective || boxToolsDirective; else noDirective\">\n        <ng-content select=\"mk-box-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </div>\n    <div *ngIf=\"footer || boxFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n      {{footer}}\n      <ng-content select=\"mk-box-footer\"></ng-content>\n    </div>\n  </div>\n  <div *ngIf=\"isLoading\" class=\"overlay\">\n    <i [ngClass]=\"loadingStyleClass\" [mkFontColor]=\"loadingColor\"></i>\n  </div>\n</div>\n",
                    styles: [".box.collapsed-box .box-body,.box.collapsed-box .box-footer{display:inherit}.box-solid{border:1px solid}.box-body{background-color:#fff}.box.box-solid.bg-color>.box-header{color:#fff}"],
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    /** @nocollapse */
    BoxComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: NgZone },
        { type: Renderer2 }
    ]; };
    BoxComponent.propDecorators = {
        boxColor: [{ type: Input }],
        buttonsStyleClass: [{ type: Input }],
        contentStyleClass: [{ type: Input }],
        contentColor: [{ type: Input }],
        footer: [{ type: Input }],
        footerColor: [{ type: Input }],
        footerStyleClass: [{ type: Input }],
        header: [{ type: Input }],
        headerBorder: [{ type: Input }],
        headerColor: [{ type: Input }],
        headerStyleClass: [{ type: Input }],
        isCollapsable: [{ type: Input }],
        isCollapsed: [{ type: Input }],
        isLoading: [{ type: Input }],
        isRemovable: [{ type: Input }],
        isSolid: [{ type: Input }],
        loadingColor: [{ type: Input }],
        loadingStyleClass: [{ type: Input }],
        styleClass: [{ type: Input }],
        onCollapseDone: [{ type: Output }],
        onCollapseStart: [{ type: Output }],
        boxHeaderDirective: [{ type: ContentChild, args: [BoxHeaderDirective,] }],
        boxFooterDirective: [{ type: ContentChild, args: [BoxFooterDirective,] }],
        boxContentDirective: [{ type: ContentChild, args: [BoxContentDirective,] }],
        boxToolsDirective: [{ type: ContentChild, args: [BoxToolsDirective,] }],
        toggleButtonElement: [{ type: ViewChild, args: ['toggleButtonElement',] }],
        removeButtonElement: [{ type: ViewChild, args: ['removeButtonElement',] }]
    };
    return BoxComponent;
}());
export { BoxComponent };
if (false) {
    /** @type {?} */
    BoxComponent.prototype.isCollaping;
    /** @type {?} */
    BoxComponent.prototype.remove;
    /** @type {?} */
    BoxComponent.prototype.removed;
    /** @type {?} */
    BoxComponent.prototype.listeners;
    /** @type {?} */
    BoxComponent.prototype.boxColor;
    /** @type {?} */
    BoxComponent.prototype.buttonsStyleClass;
    /** @type {?} */
    BoxComponent.prototype.contentStyleClass;
    /** @type {?} */
    BoxComponent.prototype.contentColor;
    /** @type {?} */
    BoxComponent.prototype.footer;
    /** @type {?} */
    BoxComponent.prototype.footerColor;
    /** @type {?} */
    BoxComponent.prototype.footerStyleClass;
    /** @type {?} */
    BoxComponent.prototype.header;
    /** @type {?} */
    BoxComponent.prototype.headerBorder;
    /** @type {?} */
    BoxComponent.prototype.headerColor;
    /** @type {?} */
    BoxComponent.prototype.headerStyleClass;
    /** @type {?} */
    BoxComponent.prototype.isCollapsable;
    /** @type {?} */
    BoxComponent.prototype.isCollapsed;
    /** @type {?} */
    BoxComponent.prototype.isLoading;
    /** @type {?} */
    BoxComponent.prototype.isRemovable;
    /** @type {?} */
    BoxComponent.prototype.isSolid;
    /** @type {?} */
    BoxComponent.prototype.loadingColor;
    /** @type {?} */
    BoxComponent.prototype.loadingStyleClass;
    /** @type {?} */
    BoxComponent.prototype.styleClass;
    /** @type {?} */
    BoxComponent.prototype.onCollapseDone;
    /** @type {?} */
    BoxComponent.prototype.onCollapseStart;
    /** @type {?} */
    BoxComponent.prototype.boxHeaderDirective;
    /** @type {?} */
    BoxComponent.prototype.boxFooterDirective;
    /** @type {?} */
    BoxComponent.prototype.boxContentDirective;
    /** @type {?} */
    BoxComponent.prototype.boxToolsDirective;
    /** @type {?} */
    BoxComponent.prototype.toggleButtonElement;
    /** @type {?} */
    BoxComponent.prototype.removeButtonElement;
    /** @type {?} */
    BoxComponent.prototype.changeDetectorRef;
    /** @type {?} */
    BoxComponent.prototype.ngZone;
    /** @type {?} */
    BoxComponent.prototype.renderer2;
}

//# sourceMappingURL=data:application/json;base64,