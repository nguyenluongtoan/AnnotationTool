/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * [throttle description]
 * \@method throttle
 * @param {?} callback [description]
 * @param {?} delay    [description]
 * @return {?} [description]
 */
export function throttle(callback, delay) {
    var _this = this;
    /** @type {?} */
    var timeout = null;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!timeout) {
            timeout = setTimeout(function () {
                callback.call.apply(callback, tslib_1.__spread([_this], args));
                timeout = null;
            }, delay);
        }
    };
}
/**
 * [removeSubscriptions description]
 * \@method removeSubscriptions
 * @param {?} subscriptions
 * @return {?}
 */
export function removeSubscriptions(subscriptions) {
    if (subscriptions) {
        subscriptions.forEach(function (subscription) {
            subscription.unsubscribe();
        });
    }
    return [];
}
/**
 * [removeListeners description]
 * \@method removeListeners
 * @param {?} listeners
 * @return {?}
 */
export function removeListeners(listeners) {
    if (listeners) {
        listeners.forEach(function (listener) {
            listener();
        });
    }
    return [];
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYWRtaW4tbHRlLyIsInNvdXJjZXMiOlsibGliL2hlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBVUEsTUFBTSxtQkFBbUIsUUFBa0IsRUFBRSxLQUFhO0lBQTFELGlCQVVDOztJQVRDLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQztJQUNuQixNQUFNLENBQUM7UUFBQyxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOztRQUNiLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNiLE9BQU8sR0FBRyxVQUFVLENBQUM7Z0JBQ25CLFFBQVEsQ0FBQyxJQUFJLE9BQWIsUUFBUSxvQkFBTSxLQUFJLEdBQUssSUFBSSxHQUFFO2dCQUM3QixPQUFPLEdBQUcsSUFBSSxDQUFDO2FBQ2hCLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDWDtLQUNGLENBQUM7Q0FDSDs7Ozs7OztBQU9ELE1BQU0sOEJBQThCLGFBQWE7SUFDL0MsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztRQUNsQixhQUFhLENBQUMsT0FBTyxDQUFDLFVBQUMsWUFBMEI7WUFDL0MsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzVCLENBQUMsQ0FBQztLQUNKO0lBQ0QsTUFBTSxDQUFDLEVBQUUsQ0FBQztDQUNYOzs7Ozs7O0FBTUQsTUFBTSwwQkFBMEIsU0FBUztJQUN2QyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1FBQ2QsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFDLFFBQWtCO1lBQ25DLFFBQVEsRUFBRSxDQUFDO1NBQ1osQ0FBQyxDQUFDO0tBQ0o7SUFDRCxNQUFNLENBQUMsRUFBRSxDQUFDO0NBQ1giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuXG4vKipcbiAqIFt0aHJvdHRsZSBkZXNjcmlwdGlvbl1cbiAqIEBtZXRob2QgdGhyb3R0bGVcbiAqIEBwYXJhbSBjYWxsYmFjayBbZGVzY3JpcHRpb25dXG4gKiBAcGFyYW0gZGVsYXkgICAgW2Rlc2NyaXB0aW9uXVxuICogQHJldHVybiBbZGVzY3JpcHRpb25dXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsZShjYWxsYmFjazogRnVuY3Rpb24sIGRlbGF5OiBudW1iZXIpOiAoYXJnczogQXJyYXk8YW55PikgPT4gdm9pZCB7XG4gIGxldCB0aW1lb3V0ID0gbnVsbDtcbiAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgaWYgKCF0aW1lb3V0KSB7XG4gICAgICB0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrLmNhbGwodGhpcywgLi4uYXJncyk7XG4gICAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgICAgfSwgZGVsYXkpO1xuICAgIH1cbiAgfTtcbn1cblxuXG4vKipcbiAqIFtyZW1vdmVTdWJzY3JpcHRpb25zIGRlc2NyaXB0aW9uXVxuICogQG1ldGhvZCByZW1vdmVTdWJzY3JpcHRpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVTdWJzY3JpcHRpb25zKHN1YnNjcmlwdGlvbnMpOiBBcnJheTxTdWJzY3JpcHRpb24+IHtcbiAgaWYgKHN1YnNjcmlwdGlvbnMpIHtcbiAgICBzdWJzY3JpcHRpb25zLmZvckVhY2goKHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uKSA9PiB7XG4gICAgICBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gW107XG59XG5cbi8qKlxuICogW3JlbW92ZUxpc3RlbmVycyBkZXNjcmlwdGlvbl1cbiAqIEBtZXRob2QgcmVtb3ZlTGlzdGVuZXJzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVMaXN0ZW5lcnMobGlzdGVuZXJzKTogQXJyYXk8RnVuY3Rpb24+IHtcbiAgaWYgKGxpc3RlbmVycykge1xuICAgIGxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcjogRnVuY3Rpb24pID0+IHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIFtdO1xufVxuIl19