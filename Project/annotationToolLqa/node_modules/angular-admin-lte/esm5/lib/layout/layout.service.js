/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { RoutingService } from '../services/routing.service';
var LayoutService = /** @class */ (function () {
    /**
     * @method constructor
     * @param routingService [description]
     */
    function LayoutService(routingService) {
        this.routingService = routingService;
        this.isCustomLayout = new BehaviorSubject(true);
        this.init();
    }
    /**
     * [init description]
     * \@method init
     * @return {?} [description]
     */
    LayoutService.prototype.init = /**
     * [init description]
     * \@method init
     * @return {?} [description]
     */
    function () {
        var _this = this;
        this.routingService.onChange.subscribe(function (value) {
            if (value && value[value.length - 1]) {
                if (_this.customLayout === undefined || _this.customLayout !== value[value.length - 1].data['disableLayout']) {
                    _this.isCustomLayout.next(!!value[value.length - 1].data['customLayout']);
                }
                _this.customLayout = value[value.length - 1].data['customLayout'];
            }
        });
    };
    LayoutService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    LayoutService.ctorParameters = function () { return [
        { type: RoutingService }
    ]; };
    return LayoutService;
}());
export { LayoutService };
if (false) {
    /** @type {?} */
    LayoutService.prototype.isCustomLayout;
    /** @type {?} */
    LayoutService.prototype.customLayout;
    /** @type {?} */
    LayoutService.prototype.routingService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWFkbWluLWx0ZS8iLCJzb3VyY2VzIjpbImxpYi9sYXlvdXQvbGF5b3V0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV2QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0lBUzNEOzs7T0FHRztJQUNILHVCQUNVO1FBQUEsbUJBQWMsR0FBZCxjQUFjOzhCQVYwQixJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUM7UUFZekUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0tBQ2I7Ozs7OztJQU9PLDRCQUFJOzs7Ozs7O1FBQ1YsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFVBQUMsS0FBSztZQUMzQyxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNyQyxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsWUFBWSxLQUFLLFNBQVMsSUFBSSxLQUFJLENBQUMsWUFBWSxLQUFLLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzNHLEtBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztpQkFDMUU7Z0JBQ0QsS0FBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7YUFDbEU7U0FDRixDQUFDLENBQUM7OztnQkE5Qk4sVUFBVTs7OztnQkFGRixjQUFjOzt3QkFIdkI7O1NBTWEsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBSb3V0aW5nU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3JvdXRpbmcuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMYXlvdXRTZXJ2aWNlIHtcbiAgcHVibGljIGlzQ3VzdG9tTGF5b3V0OiBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0KHRydWUpO1xuXG4gIHByaXZhdGUgY3VzdG9tTGF5b3V0OiBib29sZWFuO1xuXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgY29uc3RydWN0b3JcbiAgICogQHBhcmFtIHJvdXRpbmdTZXJ2aWNlIFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcm91dGluZ1NlcnZpY2U6IFJvdXRpbmdTZXJ2aWNlXG4gICkge1xuICAgIHRoaXMuaW5pdCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFtpbml0IGRlc2NyaXB0aW9uXVxuICAgKiBAbWV0aG9kIGluaXRcbiAgICogQHJldHVybiBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBwcml2YXRlIGluaXQoKSB7XG4gICAgdGhpcy5yb3V0aW5nU2VydmljZS5vbkNoYW5nZS5zdWJzY3JpYmUoKHZhbHVlKSA9PiB7XG4gICAgICBpZiAodmFsdWUgJiYgdmFsdWVbdmFsdWUubGVuZ3RoIC0gMV0pIHtcbiAgICAgICAgaWYgKHRoaXMuY3VzdG9tTGF5b3V0ID09PSB1bmRlZmluZWQgfHwgdGhpcy5jdXN0b21MYXlvdXQgIT09IHZhbHVlW3ZhbHVlLmxlbmd0aCAtIDFdLmRhdGFbJ2Rpc2FibGVMYXlvdXQnXSkge1xuICAgICAgICAgIHRoaXMuaXNDdXN0b21MYXlvdXQubmV4dCghIXZhbHVlW3ZhbHVlLmxlbmd0aCAtIDFdLmRhdGFbJ2N1c3RvbUxheW91dCddKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmN1c3RvbUxheW91dCA9IHZhbHVlW3ZhbHVlLmxlbmd0aCAtIDFdLmRhdGFbJ2N1c3RvbUxheW91dCddO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=