/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ContentChild, ElementRef, Input, NgZone, Renderer2, TemplateRef, ViewChild } from '@angular/core';
import { LayoutStore } from '../layout.store';
import { HeaderService } from './header.service';
import { removeListeners, removeSubscriptions } from '../../helpers';
/**
 * Header Logo
 */
var HeaderLogoComponent = /** @class */ (function () {
    function HeaderLogoComponent() {
    }
    HeaderLogoComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-layout-header-logo',
                    template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
                },] },
    ];
    HeaderLogoComponent.propDecorators = {
        templateRef: [{ type: ViewChild, args: ['templateRef',] }]
    };
    return HeaderLogoComponent;
}());
export { HeaderLogoComponent };
if (false) {
    /** @type {?} */
    HeaderLogoComponent.prototype.templateRef;
}
/**
 * Header Logo Mini
 */
var HeaderLogoMiniComponent = /** @class */ (function () {
    function HeaderLogoMiniComponent() {
    }
    HeaderLogoMiniComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-layout-header-logo-mini',
                    template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
                },] },
    ];
    HeaderLogoMiniComponent.propDecorators = {
        templateRef: [{ type: ViewChild, args: ['templateRef',] }]
    };
    return HeaderLogoMiniComponent;
}());
export { HeaderLogoMiniComponent };
if (false) {
    /** @type {?} */
    HeaderLogoMiniComponent.prototype.templateRef;
}
/**
 * Header
 */
var HeaderComponent = /** @class */ (function () {
    /**
     * @method constructor
     * @param layoutStore [description]
     * @param ngZone      [description]
     * @param renderer2   [description]
     * @param elementRef   [description]
     * @param headerService   [description]
     */
    function HeaderComponent(layoutStore, ngZone, renderer2, elementRef, headerService) {
        this.layoutStore = layoutStore;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.elementRef = elementRef;
        this.headerService = headerService;
        this.listeners = [];
        this.subscriptions = [];
        this.isSidebarLeftToggle = true;
        this.isSidebarRightToggle = true;
    }
    /**
     * @method ngAfterViewInit
     */
    /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    HeaderComponent.prototype.ngAfterViewInit = /**
     * \@method ngAfterViewInit
     * @return {?}
     */
    function () {
        var _this = this;
        this.headerService.elementRef = this.headerElement;
        if (this.sidebarLeftToggleElement) {
            this.subscriptions.push(this.layoutStore.isSidebarLeftCollapsed.subscribe(function (value) {
                _this.isSidebarLeftCollapsed = value;
            }));
            this.ngZone.runOutsideAngular(function () {
                _this.listeners.push(_this.renderer2.listen(_this.sidebarLeftToggleElement.nativeElement, 'click', function (event) {
                    event.preventDefault();
                    _this.layoutStore.sidebarLeftCollapsed(!_this.isSidebarLeftCollapsed);
                }));
            });
        }
        if (this.sidebarRightToggleElement) {
            this.subscriptions.push(this.layoutStore.isSidebarRightCollapsed.subscribe(function (value) {
                _this.isSidebarRightCollapsed = value;
            }));
            this.ngZone.runOutsideAngular(function () {
                _this.listeners.push(_this.renderer2.listen(_this.sidebarRightToggleElement.nativeElement, 'click', function (event) {
                    event.preventDefault();
                    _this.layoutStore.sidebarRightCollapsed(!_this.isSidebarRightCollapsed);
                }));
            });
        }
    };
    /**
     * @method ngOnDestroy
     */
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    HeaderComponent.prototype.ngOnDestroy = /**
     * \@method ngOnDestroy
     * @return {?}
     */
    function () {
        this.listeners = removeListeners(this.listeners);
        this.subscriptions = removeSubscriptions(this.subscriptions);
    };
    HeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-layout-header',
                    template: "<header #headerElement class=\"main-header\">\n  <a href=\"/\" class=\"logo\">\n    <span class=\"logo-mini\"><ng-template [ngTemplateOutlet]=\"headerLogoMiniComponent?.templateRef\"></ng-template></span>\n    <span class=\"logo-lg\"><ng-template [ngTemplateOutlet]=\"headerLogoComponent?.templateRef\"></ng-template></span>\n  </a>\n  <nav class=\"navbar navbar-static-top\">\n    <a *ngIf=\"isSidebarLeftToggle\" #sidebarLeftToggleElement href=\"#\" class=\"sidebar-toggle\">\n      <span class=\"sr-only\">Toggle navigation</span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n    </a>\n    <div *ngIf=\"isSidebarRightToggle\" class=\"sidebar-right-toggle\">\n      <a #sidebarRightToggleElement href=\"#\"><i class=\"fa fa-gears\"></i></a>\n    </div>\n    <ng-content></ng-content>\n  </nav>\n</header>\n",
                    styles: [":host{display:block}.sidebar-right-toggle{float:right}.sidebar-right-toggle a{padding:15px;display:block;line-height:20px;cursor:pointer}"]
                },] },
    ];
    /** @nocollapse */
    HeaderComponent.ctorParameters = function () { return [
        { type: LayoutStore },
        { type: NgZone },
        { type: Renderer2 },
        { type: ElementRef },
        { type: HeaderService }
    ]; };
    HeaderComponent.propDecorators = {
        isSidebarLeftToggle: [{ type: Input }],
        isSidebarRightToggle: [{ type: Input }],
        headerLogoComponent: [{ type: ContentChild, args: [HeaderLogoComponent,] }],
        headerLogoMiniComponent: [{ type: ContentChild, args: [HeaderLogoMiniComponent,] }],
        headerElement: [{ type: ViewChild, args: ['headerElement',] }],
        sidebarLeftToggleElement: [{ type: ViewChild, args: ['sidebarLeftToggleElement',] }],
        sidebarRightToggleElement: [{ type: ViewChild, args: ['sidebarRightToggleElement',] }]
    };
    return HeaderComponent;
}());
export { HeaderComponent };
if (false) {
    /** @type {?} */
    HeaderComponent.prototype.isSidebarLeftCollapsed;
    /** @type {?} */
    HeaderComponent.prototype.isSidebarRightCollapsed;
    /** @type {?} */
    HeaderComponent.prototype.listeners;
    /** @type {?} */
    HeaderComponent.prototype.subscriptions;
    /** @type {?} */
    HeaderComponent.prototype.isSidebarLeftToggle;
    /** @type {?} */
    HeaderComponent.prototype.isSidebarRightToggle;
    /** @type {?} */
    HeaderComponent.prototype.headerLogoComponent;
    /** @type {?} */
    HeaderComponent.prototype.headerLogoMiniComponent;
    /** @type {?} */
    HeaderComponent.prototype.headerElement;
    /** @type {?} */
    HeaderComponent.prototype.sidebarLeftToggleElement;
    /** @type {?} */
    HeaderComponent.prototype.sidebarRightToggleElement;
    /** @type {?} */
    HeaderComponent.prototype.layoutStore;
    /** @type {?} */
    HeaderComponent.prototype.ngZone;
    /** @type {?} */
    HeaderComponent.prototype.renderer2;
    /** @type {?} */
    HeaderComponent.prototype.elementRef;
    /** @type {?} */
    HeaderComponent.prototype.headerService;
}

//# sourceMappingURL=data:application/json;base64,