/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectorRef } from '@angular/core';
import { RoutingService } from '../services/routing.service';
var BreadcrumbsComponent = /** @class */ (function () {
    /**
     * @method constructor
     * @param routingService [description]
     * @param changeDetectorRef [description]
     */
    function BreadcrumbsComponent(routingService, changeDetectorRef) {
        this.routingService = routingService;
        this.changeDetectorRef = changeDetectorRef;
        this.homeIcon = 'fa fa-home';
    }
    /**
     * @method ngOnInit
     */
    /**
     * \@method ngOnInit
     * @return {?}
     */
    BreadcrumbsComponent.prototype.ngOnInit = /**
     * \@method ngOnInit
     * @return {?}
     */
    function () {
        var _this = this;
        this.subscription = this.routingService.onChange.subscribe(function (value) {
            _this.breadcrumbs = value;
        });
    };
    /**
     * @method ngOnDestroy
     */
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    BreadcrumbsComponent.prototype.ngOnDestroy = /**
     * \@method ngOnDestroy
     * @return {?}
     */
    function () {
        this.subscription.unsubscribe();
    };
    BreadcrumbsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-breadcrumbs',
                    template: "<ol class=\"breadcrumb\">\n  <li *ngFor=\"let breadcrumb of breadcrumbs; let first = first; let last = last\" [class.active]=\"last || !breadcrumb.url\">\n    <a *ngIf=\"breadcrumb.url\" [routerLink]=\"breadcrumb.url\">\n      <i *ngIf=\"first\" ngClass=\"{{homeIcon}}\"></i>\n      <ng-template [ngIf]=\"breadcrumb.data.breadcrumbs\">{{breadcrumb.data.breadcrumbs}}</ng-template>\n      <ng-template [ngIf]=\"!breadcrumb.data.breadcrumbs\">{{breadcrumb.data.title}}</ng-template>\n    </a>\n    <ng-template [ngIf]=\"!breadcrumb.url\">\n      <i *ngIf=\"first\" ngClass=\"{{homeIcon}}\"></i>\n      <ng-template [ngIf]=\"breadcrumb.data.breadcrumbs\">{{breadcrumb.data.breadcrumbs}}</ng-template>\n      <ng-template [ngIf]=\"!breadcrumb.data.breadcrumbs\">{{breadcrumb.data.title}}</ng-template>\n    </ng-template>\n  </li>\n</ol>\n",
                    styles: [".breadcrumb{float:right;background:0 0;margin-top:0;margin-bottom:0;font-size:12px;padding:7px 5px;position:absolute;top:15px;right:10px;border-radius:2px}.breadcrumb>li>a{color:#444;text-decoration:none;display:inline-block}.breadcrumb>li>a>.fa,.breadcrumb>li>a>.glyphicon,.breadcrumb>li>a>.ion{margin-right:5px}"]
                },] },
    ];
    /** @nocollapse */
    BreadcrumbsComponent.ctorParameters = function () { return [
        { type: RoutingService },
        { type: ChangeDetectorRef }
    ]; };
    BreadcrumbsComponent.propDecorators = {
        homeIcon: [{ type: Input }]
    };
    return BreadcrumbsComponent;
}());
export { BreadcrumbsComponent };
if (false) {
    /** @type {?} */
    BreadcrumbsComponent.prototype.breadcrumbs;
    /** @type {?} */
    BreadcrumbsComponent.prototype.subscription;
    /** @type {?} */
    BreadcrumbsComponent.prototype.homeIcon;
    /** @type {?} */
    BreadcrumbsComponent.prototype.routingService;
    /** @type {?} */
    BreadcrumbsComponent.prototype.changeDetectorRef;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1hZG1pbi1sdGUvIiwic291cmNlcyI6WyJsaWIvYnJlYWRjcnVtYnMvYnJlYWRjcnVtYnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBYSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUd2RixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0lBK0IzRDs7OztPQUlHO0lBQ0gsOEJBQ1UsZ0JBQ0E7UUFEQSxtQkFBYyxHQUFkLGNBQWM7UUFDZCxzQkFBaUIsR0FBakIsaUJBQWlCO3dCQVRBLFlBQVk7S0FVbkM7SUFFSjs7T0FFRzs7Ozs7SUFDSCx1Q0FBUTs7OztJQUFSO1FBQUEsaUJBSUM7UUFIQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxVQUFBLEtBQUs7WUFDOUQsS0FBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDMUIsQ0FBQyxDQUFDO0tBQ0o7SUFFRDs7T0FFRzs7Ozs7SUFDSCwwQ0FBVzs7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztLQUNqQzs7Z0JBbERGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixRQUFRLEVBQUUscTBCQWNYO29CQUNDLE1BQU0sRUFBRSxDQUFDLDJUQUEyVCxDQUFDO2lCQUN0VTs7OztnQkF2QlEsY0FBYztnQkFIdUIsaUJBQWlCOzs7MkJBZ0M1RCxLQUFLOzsrQkFoQ1I7O1NBMkJhLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT25EZXN0cm95LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFJvdXRpbmdTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvcm91dGluZy5zZXJ2aWNlJztcblxuLypcbiAqXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21rLWJyZWFkY3J1bWJzJyxcbiAgdGVtcGxhdGU6IGA8b2wgY2xhc3M9XCJicmVhZGNydW1iXCI+XG4gIDxsaSAqbmdGb3I9XCJsZXQgYnJlYWRjcnVtYiBvZiBicmVhZGNydW1iczsgbGV0IGZpcnN0ID0gZmlyc3Q7IGxldCBsYXN0ID0gbGFzdFwiIFtjbGFzcy5hY3RpdmVdPVwibGFzdCB8fCAhYnJlYWRjcnVtYi51cmxcIj5cbiAgICA8YSAqbmdJZj1cImJyZWFkY3J1bWIudXJsXCIgW3JvdXRlckxpbmtdPVwiYnJlYWRjcnVtYi51cmxcIj5cbiAgICAgIDxpICpuZ0lmPVwiZmlyc3RcIiBuZ0NsYXNzPVwie3tob21lSWNvbn19XCI+PC9pPlxuICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cImJyZWFkY3J1bWIuZGF0YS5icmVhZGNydW1ic1wiPnt7YnJlYWRjcnVtYi5kYXRhLmJyZWFkY3J1bWJzfX08L25nLXRlbXBsYXRlPlxuICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cIiFicmVhZGNydW1iLmRhdGEuYnJlYWRjcnVtYnNcIj57e2JyZWFkY3J1bWIuZGF0YS50aXRsZX19PC9uZy10ZW1wbGF0ZT5cbiAgICA8L2E+XG4gICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cIiFicmVhZGNydW1iLnVybFwiPlxuICAgICAgPGkgKm5nSWY9XCJmaXJzdFwiIG5nQ2xhc3M9XCJ7e2hvbWVJY29ufX1cIj48L2k+XG4gICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiYnJlYWRjcnVtYi5kYXRhLmJyZWFkY3J1bWJzXCI+e3ticmVhZGNydW1iLmRhdGEuYnJlYWRjcnVtYnN9fTwvbmctdGVtcGxhdGU+XG4gICAgICA8bmctdGVtcGxhdGUgW25nSWZdPVwiIWJyZWFkY3J1bWIuZGF0YS5icmVhZGNydW1ic1wiPnt7YnJlYWRjcnVtYi5kYXRhLnRpdGxlfX08L25nLXRlbXBsYXRlPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gIDwvbGk+XG48L29sPlxuYCxcbiAgc3R5bGVzOiBbYC5icmVhZGNydW1ie2Zsb2F0OnJpZ2h0O2JhY2tncm91bmQ6MCAwO21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjA7Zm9udC1zaXplOjEycHg7cGFkZGluZzo3cHggNXB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxNXB4O3JpZ2h0OjEwcHg7Ym9yZGVyLXJhZGl1czoycHh9LmJyZWFkY3J1bWI+bGk+YXtjb2xvcjojNDQ0O3RleHQtZGVjb3JhdGlvbjpub25lO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5icmVhZGNydW1iPmxpPmE+LmZhLC5icmVhZGNydW1iPmxpPmE+LmdseXBoaWNvbiwuYnJlYWRjcnVtYj5saT5hPi5pb257bWFyZ2luLXJpZ2h0OjVweH1gXVxufSlcbmV4cG9ydCBjbGFzcyBCcmVhZGNydW1ic0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgcHVibGljIGJyZWFkY3J1bWJzO1xuXG4gIHByaXZhdGUgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgQElucHV0KCkgcHVibGljIGhvbWVJY29uID0gJ2ZhIGZhLWhvbWUnO1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSByb3V0aW5nU2VydmljZSBbZGVzY3JpcHRpb25dXG4gICAqIEBwYXJhbSBjaGFuZ2VEZXRlY3RvclJlZiBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZSxcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZlxuICApIHt9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgbmdPbkluaXRcbiAgICovXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uID0gdGhpcy5yb3V0aW5nU2VydmljZS5vbkNoYW5nZS5zdWJzY3JpYmUodmFsdWUgPT4ge1xuICAgICAgdGhpcy5icmVhZGNydW1icyA9IHZhbHVlO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgbmdPbkRlc3Ryb3lcbiAgICovXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cbiJdfQ==