{"version":3,"sources":["null","ng://angular-admin-lte/lib/services/routing.service.ts","ng://angular-admin-lte/lib/breadcrumbs/breadcrumbs.component.ts","ng://angular-admin-lte/lib/breadcrumbs/breadcrumbs.module.ts","ng://angular-admin-lte/lib/layout/layout.store.ts","ng://angular-admin-lte/lib/layout/sidebar-right/sidebar-right.service.ts","ng://angular-admin-lte/lib/layout/header/header.service.ts","ng://angular-admin-lte/lib/layout/footer/footer.service.ts","ng://angular-admin-lte/lib/helpers.ts","ng://angular-admin-lte/lib/layout/content/content.component.ts","ng://angular-admin-lte/lib/layout/content/content.module.ts","ng://angular-admin-lte/lib/layout/footer/footer.component.ts","ng://angular-admin-lte/lib/layout/footer/footer.module.ts","ng://angular-admin-lte/lib/layout/header/header.component.ts","ng://angular-admin-lte/lib/layout/header/header.module.ts","ng://angular-admin-lte/lib/animations/animations.directive.ts","ng://angular-admin-lte/lib/animations/animations.module.ts","ng://angular-admin-lte/lib/layout/sidebar-left/sidebar-left.directive.ts","ng://angular-admin-lte/lib/layout/wrapper/wrapper.service.ts","ng://angular-admin-lte/lib/layout/sidebar-left/sidebar-left.component.ts","ng://angular-admin-lte/lib/layout/sidebar-left/sidebar-left.module.ts","ng://angular-admin-lte/lib/layout/sidebar-right/sidebar-right.component.ts","ng://angular-admin-lte/lib/layout/sidebar-right/sidebar-right.module.ts","ng://angular-admin-lte/lib/layout/wrapper/wrapper.component.ts","ng://angular-admin-lte/lib/layout/wrapper/wrapper.module.ts","ng://angular-admin-lte/lib/layout/layout.service.ts","ng://angular-admin-lte/lib/layout/layout.provider.ts","ng://angular-admin-lte/lib/layout/layout.module.ts","ng://angular-admin-lte/lib/color/color.definition.ts","ng://angular-admin-lte/lib/color/color.service.ts","ng://angular-admin-lte/lib/color/color.directive.ts","ng://angular-admin-lte/lib/color/color.module.ts","ng://angular-admin-lte/lib/accordion/accordion.directive.ts","ng://angular-admin-lte/lib/accordion/accordion.component.ts","ng://angular-admin-lte/lib/accordion/accordion.module.ts","ng://angular-admin-lte/lib/alert/alert.component.ts","ng://angular-admin-lte/lib/alert/alert.module.ts","ng://angular-admin-lte/lib/box/box.directive.ts","ng://angular-admin-lte/lib/box/box.component.ts","ng://angular-admin-lte/lib/box/box.module.ts","ng://angular-admin-lte/lib/box-info/box-info.directive.ts","ng://angular-admin-lte/lib/box-info/box-info.component.ts","ng://angular-admin-lte/lib/box-info/box-info.module.ts","ng://angular-admin-lte/lib/box-small/box-small.directive.ts","ng://angular-admin-lte/lib/box-small/box-small.component.ts","ng://angular-admin-lte/lib/box-small/box-small.module.ts","ng://angular-admin-lte/lib/dropdown/dropdown.component.ts","ng://angular-admin-lte/lib/dropdown/dropdown.module.ts","ng://angular-admin-lte/lib/form/input-group/input-group.directive.ts","ng://angular-admin-lte/lib/services/class.service.ts","ng://angular-admin-lte/lib/form/input-text/input-text.directive.ts","ng://angular-admin-lte/lib/form/input-group/input-group.component.ts","ng://angular-admin-lte/lib/form/input-group/input-group.module.ts","ng://angular-admin-lte/lib/form/input-text/input-text.module.ts","ng://angular-admin-lte/lib/tabs/tabs.directive.ts","ng://angular-admin-lte/lib/tabs/tabs.component.ts","ng://angular-admin-lte/lib/tabs/tabs.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","RoutingService","router","this","BehaviorSubject","undefined","init","createUrl","route","url","map","urlSegment","toString","join","isChildrenSelfRoute","routeConfig","children","forEach","child","path","component","loadChildren","createBreadcrumb","isUrl","firstChild","data","params","prototype","events","subscribe","routeEvent","_this","NavigationEnd","routerState","root","snapshot","tmpUrl","rootRoot","paths","outlet","PRIMARY_OUTLET","key","replace","onChange","Injectable","Router","BreadcrumbsComponent","routingService","changeDetectorRef","ngOnInit","subscription","breadcrumbs","ngOnDestroy","unsubscribe","Component","args","selector","template","styles","ChangeDetectorRef","Input","BreadcrumbsModule","NgModule","imports","CommonModule","RouterModule","exports","declarations","LayoutStore","layoutConfig","isSidebarLeftCollapsed","isSidebarLeftExpandOnOver","isSidebarLeftMouseOver","isSidebarLeftMini","sidebarRightSkin","isSidebarRightCollapsed","isSidebarRightOverContent","layout","sidebarLeftMenu","sidebarLeftMenuActiveUrl","skin","initialLayoutState","Object","assign","_layoutState","layoutState","asObservable","defineProperty","pipe","pluck","distinctUntilChanged","sidebarLeftCollapsed","sidebarLeftExpandOnOver","setSidebarLeftElementHeight","sidebarLeftElementHeight","setSidebarRightSkin","sidebarLeftMouseOver","sidebarLeftMini","sidebarRightCollapsed","sidebarRightOverContent","setSidebarLeftMenu","setSidebarLeftMenuActiveUrl","setLayout","setSkin","setWrapperClasses","wrapperClasses","setWindowInnerHeight","windowInnerHeight","setWindowInnerWidth","windowInnerWidth","SidebarRightService","elementRef","nativeElement","scrollHeight","HeaderService","offsetHeight","FooterService","removeSubscriptions","subscriptions","removeListeners","listeners","listener","ContentComponent","layoutStore","titleService","sidebarRightService","headerService","footerService","titleTag","getTitle","setTitle","header","description","markForCheck","NavigationStart","navigationEnd","setContentMinHeight","sidebarLeftHeight","heightStyle","contentInnerElement","title","headerFooterOffsetHeight","sidebarRight","Math","max","detectChanges","changeDetection","ChangeDetectionStrategy","OnPush","Title","ElementRef","ViewChild","ContentModule","FooterComponent","ContentChild","FooterLeftComponent","FooterRightComponent","FooterModule","HeaderComponent","ngZone","renderer2","ngAfterViewInit","headerElement","sidebarLeftToggleElement","runOutsideAngular","listen","event","preventDefault","sidebarRightToggleElement","NgZone","Renderer2","HeaderLogoComponent","HeaderLogoMiniComponent","HeaderModule","CollapseAnimationDirective","EventEmitter","lastIsCollapsed","isCollapsed","firstStart","emit","collapse","unCollapse","collapseAnimationDuration","setStyle","collapseAnimationTiming","ngAfterContentInit","addClass","removeClass","requestAnimationFrame","removeStyle","transitioning","phaseName","element","fromState","toState","totalTime","triggerName","doneEventEmitter","startEventEmitter","Directive","Output","AnimationsModule","SidebarLeftToggleDirective","WrapperService","SidebarLeftComponent","wrapperService","menu","monkeyPatchMenu","initialized","setMenuListeners","activeUrl","setSidebarListeners","setMenuTogglesListeners","checkMenuWithoutChildren","toggleListeners","setSidebarHeight","sidebarElement","wrapperElementRef","activeItems","primaryOutlet","parseUrl","getIconClasses","item","iconClasses","visibilityStateStart","runningAnimations","setTimeout","uncollapseItemParents","isActive","activatedItems","collapsedItems","parentId","itemsByIds","findItemsByUrl","items","returnItems","index","id","Number","disableCollapse","sidebarLeftToggleDirectives","menuToggle","menuHaveChildren","height","sidebarHeight","sidebarOverflow","ViewChildren","SidebarLeftModule","SidebarRightComponent","sidebarContentElement","SidebarRightModule","WrapperComponent","window","innerHeight","innerWidth","classes","throttle","callback","delay","timeout","_i","apply","WrapperModule","LayoutService","customLayout","isCustomLayout","LayoutConfigToken","InjectionToken","layoutStoreFactory","layoutProvider","provide","useFactory","deps","useValue","LayoutModule","parentModule","Error","forRoot","ngModule","providers","decorators","type","Optional","SkipSelf","colorsAliases","colors","aqua","aqua-active","black","black-active","blue","blue-active","fuchsia","fuchsia-active","green","green-active","gray","gray-active","gray-light","light-blue","light-blue-active","lime","lime-active","maroon","maroon-active","navy","navy-active","olive","olive-active","orange","orange-active","purple","purple-active","red","red-active","teal","teal-active","yellow","yellow-active","ColorService","setBackgroundColor","color","condition","property","prefix","resetBackgroundColor","currentBackgroundStyle","indexOf","currentBackgroundClass","setFontColor","resetFontColor","startsWith","currentFontStyle","currentFontClass","BackgroundColorDirective","colorService","ColorDirective","ColorModule","AccordionToggleDirective","AccordionHeaderComponent","AccordionComponent","headerStyleColor","headerColor","accordionHeaderComponent","accordionContentComponent","contentTemplateRef","templateRef","AccordionContentComponent","AccordionGroupComponent","activeIndex","Array","headerMouseLeave","accordion","headerMouseEnter","headerColorHover","setAccordionsIndex","updateAccordionIsCollapsed","accordionComponents","changes","setAccordionsToggle","accordionToggleDirectives","ngOnChanges","firstChange","toggleAccordion","toggleIndex","isMultiple","splice","collapseStart","isCollapsing","onCollapseStart","animationEvent","collapseDone","onCollapseDone","accordionToggle","accordionComponent","ContentChildren","AccordionModule","AlertComponent","viewContainerRef","isDismissible","dismissibleClass","dismissOnTimeout","destroyed","remove","removeButtonElement","removed","clear","ViewContainerRef","read","AlertModule","BoxContentDirective","BoxComponent","toggleButtonElement","removedDone","isCollaping","BoxHeaderDirective","BoxFooterDirective","BoxToolsDirective","BoxModule","BoxInfoContentDirective","BoxInfoComponent","backgroundColor","progressBarBg","iconBackgroundColor","BoxInfoHeaderDirective","BoxInfoFooterDirective","BoxInfoModule","BoxSmallFooterDirective","BoxSmallComponent","BoxSmallHeaderDirective","BoxSmallContentDirective","BoxSmallModule","DropdownToggleComponent","DropdownComponent","toggleNativeElement","dropdownToggleComponent","toggleElement","defaultToggleElement","toggleDropdown","unBindDocumentClickListener","bindDocumentClickListener","documentClickListener","DropdownMenuComponent","DropdownModule","InputGroupLabelDirective","ClassService","applyClasses","cssClasses","split","currentClasses","filter","x","cssClasse","InputTextDirective","ngControl","classService","Subject","_onKeyUp","className","isSetClass","defaultClass","keyUpListener","NgControl","HostListener","InputGroupComponent","inputTextDirective","onKeyup","invalid","currentColor","inputErrorColor","currentFontColor","inputErrorFontColor","inputColor","inputFontColor","inputValidColor","inputValidFontColor","InputGroupAddonLeftDirective","InputGroupAddonRightDirective","InputGroupContentDirective","InputGroupModule","FormsModule","InputTextModule","TabToggleDirective","TabHeaderComponent","TabComponent","tabContentComponent","TabContentComponent","TabsComponent","activatedTabIndex","setTabIndex","tabs","openTabIndex","setTabsToggle","tabToggleDirectives","tab","onOpen","onClose","openTab","tabToOpen","tabToggle","tabComponent","TabsHeaderComponent","TabsModule"],"mappings":"onBAcA,SAAAA,EAuGuBC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAsB,EAANA,QAAcI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,EAGX,SAAAM,IACI,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,ECzIX,IAAAU,EAAA,WAgCE,SAAAA,EACUC,GAAAC,KAAAD,OAAAA,gBARgC,IAAIE,EAAAA,gBAAgBC,uBAChB,IAAID,EAAAA,gBAAgBC,WAShEF,KAAKG,cASQL,EAAAM,mBAAUC,GAEvB,OADYA,EAAMC,IAAIC,IAAI,SAAAC,GAAc,OAAAA,EAAWC,aAAYC,KAAK,MAUvDZ,EAAAa,6BAAoBN,GAOjC,OANAA,EAAMO,YAAYC,SAASC,QAAQ,SAAAC,GACjC,GAAmB,KAAfA,EAAMC,OAAgBD,EAAME,WAAaF,EAAMG,cACjD,OAAO,KAIJ,GAUMpB,EAAAqB,0BAAiBd,EAA+BC,GAC7D,IAAIc,GAAQ,EAQZ,OAN8B,IAA1Bf,EAAMQ,SAASjB,QAAgBS,EAAMgB,WAAWT,YAAYI,OAClD,MAARV,GAAgBD,EAAMO,YAAYM,cAAiBb,EAAMO,YAAYK,WAAcnB,EAAea,oBAAoBN,KACxHe,GAAQ,IAIL,CACLE,KAAMjB,EAAMiB,KACZC,OAASlB,EAAMkB,OACfjB,IAAKc,EAAQd,EAAM,OASfR,EAAA0B,UAAArB,2BACNH,KAAKD,OAAO0B,OAAOC,UAAU,SAAAC,GAG3B,GADAC,EAAKH,OAAOpC,KAAKsC,GACbA,aAAsBE,EAAAA,cAAe,CAQvC,IAPA,IAAIxB,EAAQuB,EAAK7B,OAAO+B,YAAYC,KAAKC,SACvCC,EAAS,GACT3B,EAAM,GACN4B,GAAW,EAEPC,EAAe,GAEd9B,EAAMQ,SAASjB,QAIpB,GAHAS,EAAQA,EAAMgB,WACdY,EAAS,IAAInC,EAAeM,UAAUC,GAElCA,EAAM+B,SAAWC,EAAAA,iBAAoBhC,EAAMO,YAAYI,MAASkB,GAApE,CAMA,GAFAA,GAAW,EAEP7B,EAAMkB,QAAUlB,EAAMiB,KACxB,IAAK,IAAMgB,KAAOjC,EAAMkB,OACjBe,IACDjC,EAAMiB,KAAY,QACpBjB,EAAMiB,KAAY,MAAIjB,EAAMiB,KAAY,MAAEiB,QAAQ,IAAID,EAAOjC,EAAMkB,OAAOe,IAC1EjC,EAAMiB,KAAY,MAAIjB,EAAMiB,KAAY,MAAEiB,QAAQ,IAAID,EAAOjC,EAAMkB,OAAOe,KAExEjC,EAAMiB,KAAkB,cAC1BjB,EAAMiB,KAAkB,YAAIjB,EAAMiB,KAAkB,YAAEiB,QAAQ,IAAID,EAAOjC,EAAMkB,OAAOe,KAEpFjC,EAAMiB,KAAkB,cAC1BjB,EAAMiB,KAAkB,YAAIjB,EAAMiB,KAAkB,YAAEiB,QAAQ,IAAID,EAAOjC,EAAMkB,OAAOe,MAK7E,MAAXL,EACFE,EAAM5C,KAAKO,EAAeqB,iBAAiBd,EAAO4B,KAElD3B,GAAO2B,EACPE,EAAM5C,KAAKO,EAAeqB,iBAAiBd,EAAOC,KAItDsB,EAAKY,SAASnD,KAAK8C,2BApH1BM,EAAAA,sDAtBqFC,EAAAA,YADtF,GCAAC,EAAA,WAuCE,SAAAA,EACUC,EACAC,GADA7C,KAAA4C,eAAAA,EACA5C,KAAA6C,kBAAAA,gBATiB,oBAe3BF,EAAAnB,UAAAsB,SAAA,WAAA,IAAAlB,EAAA5B,KACEA,KAAK+C,aAAe/C,KAAK4C,eAAeJ,SAASd,UAAU,SAAAlC,GACzDoC,EAAKoB,YAAcxD,KAOvBmD,EAAAnB,UAAAyB,YAAA,WACEjD,KAAK+C,aAAaG,mCAjDrBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,0yBAeVC,OAAQ,CAAC,0WAtBFzD,SAHqC0D,EAAAA,uDAgC3CC,EAAAA,WAhCH,GCAAC,EAAA,oDAMCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,QAAS,CAACC,EAAAA,aAAcC,EAAAA,cACxBC,QAAS,CAACpB,GACVqB,aAAc,CAACrB,SATjB,GCQAsB,EAAA,WAsBE,SAAAA,EAAYC,2BAlBuC,CACjDC,wBAAwB,EACxBC,2BAA2B,EAC3BC,wBAAwB,EACxBC,mBAAmB,EACnBC,iBAAkB,OAClBC,yBAAyB,EACzBC,2BAA2B,EAC3BC,OAAQ,SACRC,gBAAiB,GACjBC,yBAA0B,GAC1BC,KAAM,QAQFX,IACFlE,KAAK8E,mBAAqBC,OAAOC,OAAOhF,KAAK8E,mBAAoBZ,IAEnElE,KAAKiF,aAAe,IAAIhF,EAAAA,gBAAgBD,KAAK8E,oBAC7C9E,KAAKkF,YAAclF,KAAKiF,aAAaE,sBAQvCJ,OAAAK,eAAInB,EAAAzC,UAAA,oBAAiB,KAArB,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,qBAAsBC,EAAAA,yDAQ/ER,OAAAK,eAAInB,EAAAzC,UAAA,mBAAgB,KAApB,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,oBAAqBC,EAAAA,yDAO9ER,OAAAK,eAAInB,EAAAzC,UAAA,yBAAsB,KAA1B,WACE,OAA4BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,0BAA2BC,EAAAA,yDAQrFR,OAAAK,eAAInB,EAAAzC,UAAA,4BAAyB,KAA7B,WACE,OAA4BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,6BAA8BC,EAAAA,yDAQxFR,OAAAK,eAAInB,EAAAzC,UAAA,yBAAsB,KAA1B,WACE,OAA4BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,0BAA2BC,EAAAA,yDAQrFR,OAAAK,eAAInB,EAAAzC,UAAA,oBAAiB,KAArB,WACE,OAA4BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,qBAAsBC,EAAAA,yDAQhFR,OAAAK,eAAInB,EAAAzC,UAAA,mBAAgB,KAApB,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,oBAAqBC,EAAAA,yDAO9ER,OAAAK,eAAInB,EAAAzC,UAAA,0BAAuB,KAA3B,WACE,OAA4BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,2BAA4BC,EAAAA,yDAQtFR,OAAAK,eAAInB,EAAAzC,UAAA,4BAAyB,KAA7B,WACE,OAA4BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,6BAA8BC,EAAAA,yDAQxFR,OAAAK,eAAInB,EAAAzC,UAAA,kBAAe,KAAnB,WACE,OAA+BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,mBAAoBC,EAAAA,yDAQjFR,OAAAK,eAAInB,EAAAzC,UAAA,2BAAwB,KAA5B,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,4BAA6BC,EAAAA,yDAQtFR,OAAAK,eAAInB,EAAAzC,UAAA,2BAAwB,KAA5B,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,4BAA6BC,EAAAA,yDAQtFR,OAAAK,eAAInB,EAAAzC,UAAA,SAAM,KAAV,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,UAAWC,EAAAA,yDAQpER,OAAAK,eAAInB,EAAAzC,UAAA,OAAI,KAAR,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,QAASC,EAAAA,yDAQlER,OAAAK,eAAInB,EAAAzC,UAAA,iBAAc,KAAlB,WACE,OAA2BxB,KAAKkF,YAAYG,KAAKC,EAAAA,MAAM,kBAAmBC,EAAAA,yDAQrEtB,EAAAzC,UAAAgE,8BAAqBhG,GAC1BQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAAC2E,uBAAwB3E,MAS7DyE,EAAAzC,UAAAiE,iCAAwBjG,GAC7BQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAAC4E,0BAA2B5E,MAShEyE,EAAAzC,UAAAkE,qCAA4BlG,GACjCQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACmG,yBAA0BnG,MAS/DyE,EAAAzC,UAAAoE,6BAAoBpG,GACzBQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAAC+E,iBAAkB/E,MASvDyE,EAAAzC,UAAAqE,8BAAqBrG,GAC1BQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAAC6E,uBAAwB7E,MAS7DyE,EAAAzC,UAAAsE,yBAAgBtG,GACrBQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAAC8E,kBAAmB9E,MASxDyE,EAAAzC,UAAAuE,+BAAsBvG,GAC3BQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACgF,wBAAyBhF,MAS9DyE,EAAAzC,UAAAwE,iCAAwBxG,GAC7BQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACiF,0BAA2BjF,MAShEyE,EAAAzC,UAAAyE,4BAAmBzG,GACxBQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACmF,gBAAiBnF,MAStDyE,EAAAzC,UAAA0E,qCAA4B1G,GACjCQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACoF,yBAA0BpF,MAS/DyE,EAAAzC,UAAA2E,mBAAU3G,GACfQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACkF,OAAQlF,MAS7CyE,EAAAzC,UAAA4E,iBAAQ5G,GACbQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACqF,KAAMrF,MAS3CyE,EAAAzC,UAAA6E,2BAAkB7G,GACvBQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAAC8G,eAAgB9G,MASrDyE,EAAAzC,UAAA+E,8BAAqB/G,GAC1BQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACgH,kBAAmBhH,MASxDyE,EAAAzC,UAAAiF,6BAAoBjH,GACzBQ,KAAKiF,aAAa5F,KAChB0F,OAAOC,OAAOhF,KAAKiF,aAAazF,MAAO,CAACkH,iBAAkBlH,QApUhE,GCRAmH,EAAA,gCAWE5B,OAAAK,eAAIuB,EAAAnF,UAAA,eAAY,KAAhB,WACE,OAAOxB,KAAK4G,WAAa5G,KAAK4G,WAAWC,cAAcC,aAAe,0DAVzErE,EAAAA,eAFD,GCAAsE,EAAA,sDAWaA,EAAAvF,UAAA,eAAY,gBACrB,OAAOxB,KAAK4G,WAAWC,cAAcG,kEAVxCvE,EAAAA,eAFD,GCAAwE,EAAA,sDAWaA,EAAAzF,UAAA,eAAY,gBACrB,OAAOxB,KAAK4G,WAAWC,cAAcG,kEAVxCvE,EAAAA,eAFD,GC2BA,SAAAyE,EAAoCC,GAMlC,OALIA,GACFA,EAAcrG,QAAQ,SAACiC,GACrBA,EAAaG,gBAGV,GAOT,SAAAkE,EAAgCC,GAM9B,OALIA,GACFA,EAAUvG,QAAQ,SAACwG,GACjBA,MAGG,GC9CT,IAAAC,EAAA,WA6DE,SAAAA,EACUC,EACA5E,EACA6E,EACAb,EACA/D,EACA6E,EACAC,EACAC,EACA7H,GARAC,KAAAwH,YAAAA,EACAxH,KAAA4C,eAAAA,EACA5C,KAAAyH,aAAAA,EACAzH,KAAA4G,WAAAA,EACA5G,KAAA6C,kBAAAA,EACA7C,KAAA0H,oBAAAA,EACA1H,KAAA2H,cAAAA,EACA3H,KAAA4H,cAAAA,EACA5H,KAAAD,OAAAA,qBAzBc,UA+BxBwH,EAAA/F,UAAAsB,SAAA,WAAA,IAAAlB,EAAA5B,KACEA,KAAK6H,SAAW7H,KAAKyH,aAAaK,WAElC9H,KAAKmH,cAAc5H,KAAKS,KAAK4C,eAAeJ,SAASd,UAAU,SAAClC,GAC1DA,GAASA,EAAMA,EAAMI,OAAS,KAChCgC,EAAK6F,aAAaM,SAASnG,EAAKkG,SAAStI,EAAMA,EAAMI,OAAS,GAAG0B,KAAY,QAC7EM,EAAKoG,OAASxI,EAAMA,EAAMI,OAAS,GAAG0B,KAAY,MAClDM,EAAKqG,YAAczI,EAAMA,EAAMI,OAAS,GAAG0B,KAAkB,aAE/DM,EAAKiB,kBAAkBqF,kBAGzBlI,KAAKmH,cAAc5H,KAAKS,KAAKD,OAAO0B,OAAOC,UAAU,SAACC,GAChDA,aAAsBwG,EAAAA,kBACxBvG,EAAKwG,eAAgB,GAEnBzG,aAAsBE,EAAAA,gBACxBD,EAAKwG,eAAgB,EACrBxG,EAAKyG,0BAITrI,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY7B,yBAAyBjE,UAAU,SAAClC,GAC3EoC,EAAK0G,kBAAoB9I,EACzBoC,EAAKyG,yBAGPrI,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY9C,OAAOhD,UAAU,SAAClC,GACzDoC,EAAK8C,OAASlF,EACdoC,EAAKyG,yBAGPrI,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYhB,kBAAkB9E,UAAU,SAAClC,GACpEoC,EAAK4E,kBAAoBhH,EACzBoC,EAAKyG,yBAEPrI,KAAKuI,YAAcvI,KAAKwG,mBAM1Be,EAAA/F,UAAAyB,YAAA,WACEjD,KAAKmH,cAAgBD,EAAoBlH,KAAKmH,sCAQrCI,EAAA/F,UAAA,eAAY,gBACrB,OAAOxB,KAAKwI,oBAAoB3B,cAAcC,8CASxCS,EAAA/F,UAAAsG,kBAASW,GACf,OAAOA,EAAWA,EAAK,MAAMzI,KAAK6H,SAAa7H,KAAK6H,UAO9CN,EAAA/F,UAAA6G,+BACN,GAAIrI,KAAKoI,cAAe,CACtB,IAAIG,OAAW,EAETG,EAA2B1I,KAAK2H,cAAcX,aAAehH,KAAK4H,cAAcZ,aAEtF,GAAoB,UAAhBhH,KAAK0E,OACP6D,EAAcvI,KAAKwG,kBAAoBxG,KAAK4H,cAAcZ,iBACrD,CACL,IAAM2B,EACJ3I,KAAK0H,oBAAoBZ,aACvB9G,KAAK0H,oBAAoBZ,aAAe9G,KAAK2H,cAAcX,aAAe,EAE9EuB,EAAcK,KAAKC,IACjB7I,KAAKwG,kBAAoBkC,EACzB1I,KAAKsI,kBAAoBtI,KAAK2H,cAAcX,aAC5C2B,GAIAJ,GAAeA,IAAgBvI,KAAKuI,cAClCvI,KAAK8G,aAAeyB,IACtBA,EAAc,MAEhBvI,KAAKuI,YAAcA,EACnBvI,KAAK6C,kBAAkBiG,uCA7J9B3F,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAU,qlBAiBVC,OAAQ,CAAC,2DACTwF,gBAAiBC,EAAAA,wBAAwBC,oDA7BlChF,SAEAnE,SAJAoJ,EAAAA,aAF0EC,EAAAA,kBAA9B3F,EAAAA,yBAO5CmD,SACAI,SACAE,SARAvE,EAAAA,uDA8CN0G,EAAAA,UAAShG,KAAA,CAAC,4BA/Cb,GCAAiG,EAAA,oDAOC1F,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAcC,EAAAA,aAAcJ,GACtCK,QAAS,CAACwD,GACVvD,aAAc,CAACuD,SAVnB,yDCOCpE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAU,6GAGT8F,EAAAA,UAAShG,KAAA,CAAC,6EAMZD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,yBACVC,SAAU,6GAGT8F,EAAAA,UAAShG,KAAA,CAAC,oCAkBX,SAAAkG,EACU1C,EACAgB,GADA5H,KAAA4G,WAAAA,EACA5G,KAAA4H,cAAAA,SAGV0B,EAAA9H,UAAAsB,SAAA,WACE9C,KAAK4H,cAAchB,WAAa5G,KAAK4G,gCArBxCzD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,yQAOVC,OAAQ,CAAC,qEAnCuD4F,EAAAA,kBAEzDlC,kDAoCNsC,EAAAA,aAAYnG,KAAA,CAACoG,iCACbD,EAAAA,aAAYnG,KAAA,CAACqG,WCvChBC,EAAA,oDAKC/F,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,cACVE,QAAS,CAACuF,EAAiBE,EAAqBC,GAChDzF,aAAc,CAACsF,EAAiBE,EAAqBC,SARzD,yDCsBCtG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAU,6GAGT8F,EAAAA,UAAShG,KAAA,CAAC,6EAMZD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,6BACVC,SAAU,6GAGT8F,EAAAA,UAAShG,KAAA,CAAC,oCAqDX,SAAAuG,EACUnC,EACAoC,EACAC,EACAjD,EACAe,GAJA3H,KAAAwH,YAAAA,EACAxH,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,EACA7J,KAAA4G,WAAAA,EACA5G,KAAA2H,cAAAA,iBA1BU,sBACI,6BAEO,6BACC,SA4BhCgC,EAAAnI,UAAAsI,gBAAA,WAAA,IAAAlI,EAAA5B,KACEA,KAAK2H,cAAcf,WAAa5G,KAAK+J,cAEjC/J,KAAKgK,2BACPhK,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYrD,uBAAuBzC,UAAU,SAAClC,GACzEoC,EAAKuC,uBAAyB3E,KAEhCQ,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOtI,EAAKoI,yBAAyBnD,cAAe,QAAS,SAACsD,GAC/FA,EAAMC,iBACNxI,EAAK4F,YAAYhC,sBAAsB5D,EAAKuC,8BAI9CnE,KAAKqK,4BACPrK,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYhD,wBAAwB9C,UAAU,SAAClC,GAC1EoC,EAAK4C,wBAA0BhF,KAEjCQ,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOtI,EAAKyI,0BAA0BxD,cAAe,QAAS,SAACsD,GAChGA,EAAMC,iBACNxI,EAAK4F,YAAYzB,uBAAuBnE,EAAK4C,gCASrDmF,EAAAnI,UAAAyB,YAAA,WACEjD,KAAKqH,UAAYD,EAAgBpH,KAAKqH,WACtCrH,KAAKmH,cAAgBD,EAAoBlH,KAAKmH,oCA1FjDhE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,i1BAmBVC,OAAQ,CAAC,0LApDHU,SAPNqG,EAAAA,cAEAC,EAAAA,iBAJApB,EAAAA,kBAWMpC,kDA0DLtD,EAAAA,oCACAA,EAAAA,mCAEA8F,EAAAA,aAAYnG,KAAA,CAACoH,oCACbjB,EAAAA,aAAYnG,KAAA,CAACqH,0BAEbrB,EAAAA,UAAShG,KAAA,CAAC,mDACVgG,EAAAA,UAAShG,KAAA,CAAC,+DACVgG,EAAAA,UAAShG,KAAA,CAAC,qCCjFbsH,EAAA,oDAKC/G,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,cACVE,QAAS,CAAC4F,EAAiBa,EAAqBC,GAChDzG,aAAc,CAAC2F,EAAiBa,EAAqBC,SARzD,GCAAE,EAAA,WAwCE,SAAAA,EACU/D,EACAgD,EACAC,GAFA7J,KAAA4G,WAAAA,EACA5G,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,mBAlCW,iCAMuB,2BAekB,IAAIe,EAAAA,mCACN,IAAIA,EAAAA,oBAdhE7F,OAAAK,eAAuCuF,EAAAnJ,UAAA,eAAY,KAAnD,SAAoDhC,GAClDQ,KAAK6K,gBAAkB7K,KAAK8K,YAC5B9K,KAAK8K,YAActL,EACdQ,KAAK+K,aACR/K,KAAKgL,KAAK,SACNxL,EACFQ,KAAKiL,YACc,IAAVzL,GACTQ,KAAKkL,+CAwBXP,EAAAnJ,UAAAsB,SAAA,WACM9C,KAAKmL,2BAAgE,MAAnCnL,KAAKmL,2BACzCnL,KAAK6J,UAAUuB,SAASpL,KAAK4G,WAAWC,cAAe,sBAA0B7G,KAAKmL,0BAAyB,MAE7GnL,KAAKqL,yBACPrL,KAAK6J,UAAUuB,SAASpL,KAAK4G,WAAWC,cAAe,6BAA8B7G,KAAKqL,0BAO9FV,EAAAnJ,UAAA8J,mBAAA,WACEtL,KAAKgL,KAAK,SACNhL,KAAK8K,cACP9K,KAAK6J,UAAUuB,SAASpL,KAAK4G,WAAWC,cAAe,UAAW,QAClE7G,KAAK6J,UAAU0B,SAASvL,KAAK4G,WAAWC,cAAe,eAEzD7G,KAAKgL,KAAK,QACVhL,KAAK+K,YAAa,EAElB/K,KAAKmH,iBAQPwD,EAAAnJ,UAAAyB,YAAA,WACMjD,KAAKsH,UACPtH,KAAKsH,YAQDqD,EAAAnJ,UAAA2F,oCACNnH,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAK0F,SAAW1F,EAAKiI,UAAUK,OAAOtI,EAAKgF,WAAWC,cAAe,gBAAiB,WAC/EjF,EAAKkJ,YAIRlJ,EAAKiI,UAAUuB,SAASxJ,EAAKgF,WAAWC,cAAe,UAAW,SAHlEjF,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAe,eAC1DjF,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAe,eAI5D4E,sBAAsB,WACpB7J,EAAKiI,UAAU6B,YAAY9J,EAAKgF,WAAWC,cAAe,UAC1DjF,EAAKoJ,KAAK,QACVpJ,EAAK+J,eAAgB,SAWrBhB,EAAAnJ,UAAA0J,sBACNlL,KAAK2L,eAAgB,EACrB3L,KAAK6J,UAAU0B,SAASvL,KAAK4G,WAAWC,cAAe,eACvD7G,KAAK6J,UAAU6B,YAAY1L,KAAK4G,WAAWC,cAAe,WAC1D7G,KAAK6J,UAAUuB,SAASpL,KAAK4G,WAAWC,cAAe,SAAa7G,KAAK4G,WAAWC,cAAcC,aAAY,OAOxG6D,EAAAnJ,UAAAyJ,+BACNQ,sBAAsB,WACf7J,EAAK+J,gBACR/J,EAAKiI,UAAUuB,SAASxJ,EAAKgF,WAAWC,cAAe,SAAajF,EAAKgF,WAAWC,cAAcG,aAAY,MAC9GpF,EAAKiI,UAAU0B,SAAS3J,EAAKgF,WAAWC,cAAe,eAEzDjF,EAAK+J,eAAgB,EACrBF,sBAAsB,WACpB7J,EAAKiI,UAAUuB,SAASxJ,EAAKgF,WAAWC,cAAe,SAAU,YAK/D8D,EAAAnJ,UAAAwJ,cAAKY,GACX,IAAMzB,EAAwB,CAC5B0B,QAAS7L,KAAK4G,WAAWC,cACzBiF,UAAW9L,KAAK6K,kBAAoB3K,UAAY,OAASF,KAAK6K,gBAAkB,IAAM,IACtFe,UAAWA,EACXG,QAAS/L,KAAK8K,cAAgB5K,UAAY,OAASF,KAAK8K,YAAc,IAAM,IAC5EkB,UAAWhM,KAAKmL,0BAChBc,YAAa,qBAGG,SAAdL,EACF5L,KAAKkM,iBAAiBlB,KAAKb,GACJ,UAAdyB,GACT5L,KAAKmM,kBAAkBnB,KAAKb,wBA/IjCiC,EAAAA,UAAShJ,KAAA,CAAC,CACTC,SAAU,mEANuB8F,EAAAA,kBAAqCmB,EAAAA,cAAXC,EAAAA,gEAe1D9G,EAAAA,uCACAA,EAAAA,4BACAA,EAAAA,MAAKL,KAAA,CAAC,gDAaNiJ,EAAAA,OAAMjJ,KAAA,CAAC,qDACPiJ,EAAAA,OAAMjJ,KAAA,CAAC,+BA/BV,GCAAkJ,EAAA,oDAKC3I,EAAAA,SAAQP,KAAA,CAAC,CACNW,QAAS,CAAC4G,GACV3G,aAAc,CAAC2G,SAPnB,GCAA4B,EAAA,WAeE,SAAAA,EACS3F,GAAA5G,KAAA4G,WAAAA,6BAXVwF,EAAAA,UAAShJ,KAAA,CAAC,CACTC,SAAU,8DANe8F,EAAAA,4CASxB1F,EAAAA,MAAKL,KAAA,CAAC,qBATT,GCAAoJ,EAAA,oDAEC/J,EAAAA,eAFD,GCAAgK,EAAA,WAuHE,SAAAA,EACU5J,EACA2E,EACAoC,EACAC,EACA9J,EACA6C,EACA8J,EACA/E,GAPA3H,KAAA6C,kBAAAA,EACA7C,KAAAwH,YAAAA,EACAxH,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,EACA7J,KAAAD,OAAAA,EACAC,KAAA4C,eAAAA,EACA5C,KAAA0M,eAAAA,EACA1M,KAAA2H,cAAAA,sBAjCsB,uBACA,wBACW,kBACN,mBACW,0BACpB,qBACJ,UAiCxB8E,EAAAjL,UAAAsB,SAAA,WAAA,IAAAlB,EAAA5B,KACEA,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY7C,gBAAgBjD,UAAU,SAAAlC,GACjEoC,EAAK+K,KAAOnN,EACZoC,EAAKgL,gBAAgBhL,EAAK+K,MACtB/K,EAAKiL,cACPjL,EAAKkL,iBAAiBlL,EAAKmL,WAC3BnL,EAAKoL,sBACLpL,EAAKqL,2BAEPrL,EAAKiL,aAAc,KAErB7M,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY5C,yBAAyBlD,UAAU,SAAAlC,GAC1EoC,EAAKmL,UAAYvN,EACjBoC,EAAKkL,iBAAiBtN,MAExBQ,KAAKmH,cAAc5H,KAAKS,KAAK4C,eAAenB,OAAOC,UAAU,SAACyI,GACxDA,aAAiBtI,EAAAA,gBACnBD,EAAKmL,UAAY5C,EAAM7J,IACvBsB,EAAKkL,iBAAiB3C,EAAM7J,SAIhCN,KAAKgN,uBAMPP,EAAAjL,UAAAsI,gBAAA,WACE9J,KAAKiN,0BACLjN,KAAKkN,4BAMPT,EAAAjL,UAAAyB,YAAA,WACEjD,KAAKmH,cAAgBD,EAAoBlH,KAAKmH,eAC9CnH,KAAKqH,UAAYD,EAAgBpH,KAAKqH,WACtCrH,KAAKmN,gBAAkB/F,EAAgBpH,KAAKmN,kBAO9CV,EAAAjL,UAAAwL,oBAAA,WAAA,IAAApL,EAAA5B,KACEA,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY9C,OAAOhD,UAAU,SAAClC,GACzDoC,EAAK8C,OAASlF,EACdoC,EAAKwL,sBAGPpN,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYhB,kBAAkB9E,UAAU,SAAClC,GACpEoC,EAAK4E,kBAAoBhH,EACzBoC,EAAKwL,sBAGPpN,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY7C,gBAAgBjD,UAAU,WACjEE,EAAKiB,kBAAkBiG,mBAGzB9I,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOtI,EAAKyL,eAAexG,cAAe,aAAc,WACzFjF,EAAK4F,YAAY3B,sBAAqB,MAExCjE,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOtI,EAAKyL,eAAexG,cAAe,aAAc,WACzFjF,EAAK4F,YAAY3B,sBAAqB,QAI1C7F,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYd,iBAAiBhF,UAAU,SAAClC,GACnEoC,EAAK8E,iBAAmBlH,GACnBoC,EAAKuC,wBAA0BvC,EAAK8E,kBAAoB,IAC3D9E,EAAK4F,YAAYhC,sBAAqB,GACL,IAAxB5D,EAAK8E,kBAA0B9E,EAAKuC,yBAA2BvC,EAAKwC,2BAC7ExC,EAAK4F,YAAYhC,sBAAqB,MAI1CxF,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYnD,uBAAuB3C,UAAU,SAAClC,GACzEoC,EAAKyC,uBAAyB7E,EAC1BoC,EAAKwC,2BACPxC,EAAK4F,YAAYhC,sBAAsBhG,MAI3CQ,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYpD,0BAA0B1C,UAAU,SAAClC,GAC5EoC,EAAKwC,0BAA4B5E,EACL,IAAxBoC,EAAK8E,kBAA0B9E,EAAKuC,yBAA2BjE,WACjE0B,EAAK4F,YAAYhC,qBAAqBhG,MAI1CQ,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYrD,uBAAuBzC,UAAU,SAAClC,GACzEoC,EAAKuC,uBAAyB3E,EAC1BoC,EAAK8E,kBAAoB,IACvBlH,EACFoC,EAAKiI,UAAU2B,YAAY5J,EAAK8K,eAAeY,kBAAkBzG,cAAe,gBAEhFjF,EAAKiI,UAAU0B,SAAS3J,EAAK8K,eAAeY,kBAAkBzG,cAAe,kBAG3EjF,EAAKwC,2BAA8BxC,EAAKyC,wBAA2B7E,GACrEoC,EAAK4F,YAAY/B,yBAAwB,GAEvCjG,GACFoC,EAAKiI,UAAU0B,SAAS3J,EAAK8K,eAAeY,kBAAkBzG,cAAe,oBACzEjF,EAAKwC,2BACPxC,EAAKiI,UAAU2B,YAAY5J,EAAK8K,eAAeY,kBAAkBzG,cAAe,+BAGlFjF,EAAKiI,UAAU2B,YAAY5J,EAAK8K,eAAeY,kBAAkBzG,cAAe,oBAC5EjF,EAAKwC,2BACPxC,EAAKiI,UAAU0B,SAAS3J,EAAK8K,eAAeY,kBAAkBzG,cAAe,kCAMrF7G,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYlD,kBAAkB5C,UAAU,SAAClC,GAChEA,EACFoC,EAAKiI,UAAU0B,SAAS3J,EAAK8K,eAAeY,kBAAkBzG,cAAe,gBAE7EjF,EAAKiI,UAAU2B,YAAY5J,EAAK8K,eAAeY,kBAAkBzG,cAAe,oBAStF4F,EAAAjL,UAAAsL,iBAAA,SAAiBxM,GACf,GAAY,MAARA,EACFN,KAAKuN,YAAYjN,GACjBN,KAAK6C,kBAAkBiG,oBAClB,CACL,IAAM0E,EAAgBxN,KAAKD,OAAO0N,SAASnN,GAAKyB,KAAKlB,SAASwB,EAAAA,gBAC1DmL,IACFxN,KAAKuN,YAAYC,EAAc/M,YAC/BT,KAAK6C,kBAAkBiG,kBAGvB9I,KAAK0G,kBAAoB,KAAO1G,KAAKoE,4BACvCpE,KAAKwH,YAAYhC,sBAAqB,IAUnCiH,EAAAjL,UAAAkM,wBAAeC,GACpB,OAAIA,EAAKC,aAAoC,KAArBD,EAAKC,YACpBD,EAAKC,YAEL,kBASJnB,EAAAjL,UAAAqM,8BAAqB1D,cAC1BnK,KAAK8N,oBACL9N,KAAK4J,OAAOK,kBAAkB,WAC5B8D,WAAW,WACTnM,EAAKkM,oBACAlM,EAAKkM,mBACRlM,EAAK4F,YAAY9B,4BAA4B9D,EAAKyL,eAAexG,cAAcG,eAEhFmD,EAAM6B,cAULS,EAAAjL,UAAAwM,+BAAsBL,EAAYM,QAAA,IAAAA,IAAAA,GAAA,GACpCA,IACFN,EAAKM,UAAW,EAChBjO,KAAKkO,eAAe3O,KAAKoO,IAE3BA,EAAK7C,aAAc,EACnB9K,KAAKmO,eAAe5O,KAAKoO,GACrBA,EAAKS,UACPpO,KAAKgO,sBAAsBhO,KAAKqO,WAAWV,EAAKS,UAAWH,IAYvDxB,EAAAjL,UAAA8M,wBAAehO,EAAaiO,EAAcC,cAQhD,YARgD,IAAAA,IAAAA,EAAA,IAChDD,EAAMzN,QAAQ,SAAC6M,GACTA,EAAKtN,QAAUC,EACjBkO,EAAYjP,KAAKoO,GACRA,EAAK9M,UACde,EAAK0M,eAAehO,EAAKqN,EAAK9M,SAAU2N,KAGrCA,GAQD/B,EAAAjL,UAAA+L,qBAAYjN,cAClBN,KAAKkO,eAAepN,QAAQ,SAAC6M,GAC3BA,EAAKM,UAAW,IAElBjO,KAAKkO,eAAiB,GAEtBlO,KAAKmO,eAAerN,QAAQ,SAAC6M,GAC3BA,EAAKM,UAAW,EAChBN,EAAK7C,aAAc,IAErB9K,KAAKmO,eAAiB,GAERnO,KAAKsO,eAAehO,EAAKN,KAAK2M,MACtC7L,QAAQ,SAAA6M,GACZA,EAAKM,UAAW,EAChBrM,EAAKoM,sBAAsBL,GAAM,GACjC/L,EAAKsM,eAAe3O,KAAKoO,MAUrBlB,EAAAjL,UAAAoL,yBAAgB2B,EAAcH,cACpCG,EAAMzN,QAAQ,SAAC6M,EAAYc,GACzBd,EAAKe,GAAKN,EAAWO,OAAOP,EAAW,GAAKK,GAASA,EACjDL,IACFT,EAAKS,SAAWA,GAEbT,EAAKiB,kBACRjB,EAAK7C,aAAc,GAErB6C,EAAKM,UAAW,GACZG,GAAYT,EAAK9M,YACnBe,EAAKyM,WAAWV,EAAKe,IAAMf,GAEzBA,EAAK9M,UACPe,EAAKgL,gBAAgBe,EAAK9M,SAAU8M,EAAKe,OASvCjC,EAAAjL,UAAAyL,8CACNjN,KAAKmN,gBAAkB/F,EAAgBpH,KAAKmN,iBAC5CnN,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKiN,4BAA4B/N,QAAQ,SAACgO,GACxClN,EAAKuL,gBAAgB5N,KAAKqC,EAAKiI,UAAUK,OAAO4E,EAAWlI,WAAWC,cAAe,QAAS,SAACsD,GAC7FA,EAAMC,iBACF0E,EAAWnB,KAAK7C,aAClBlJ,EAAKuM,eAAerN,QAAQ,SAAC6M,GACtBA,EAAKiB,kBACRjB,EAAK7C,aAAc,KAGvBlJ,EAAKuM,eAAiB,GACtBvM,EAAKoM,sBAAsBc,EAAWnB,OAEtCmB,EAAWnB,KAAK7C,aAAegE,EAAWnB,KAAK7C,YAEjDlJ,EAAKiB,kBAAkBiG,wBAUvB2D,EAAAjL,UAAA0L,wCACF6B,SACJ/O,KAAK2M,KAAK7L,QAAQ,SAAC6M,GACjB,GAAIA,EAAK9M,SACP,OAAOkO,GAAmB,IAGzBA,GACH/O,KAAK4J,OAAOK,kBAAkB,WAC5B8D,WAAW,WACTnM,EAAK4F,YAAY9B,4BAA4B9D,EAAKyL,eAAexG,cAAcG,mBAU/EyF,EAAAjL,UAAA4L,4BACN,GAAoB,UAAhBpN,KAAK0E,OAAoB,CAC3B,IAAMsK,EAAShP,KAAKwG,kBAAoBxG,KAAK2H,cAAcX,aACvDgI,GAAUA,IAAWhP,KAAKiP,gBAC5BjP,KAAKiP,cAAgBD,EACrBhP,KAAKkP,gBAAkB,OACvBlP,KAAK6C,kBAAkBiG,sBAEhB9I,KAAKiP,gBACdjP,KAAKkP,gBAAkBlP,KAAKiP,cAAgB,KAC5CjP,KAAK6C,kBAAkBiG,sCAla5B3F,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,yBACVC,SAAU,+2DAoCVC,OAAQ,CAAC,iGACTwF,gBAAiBC,EAAAA,wBAAwBC,oDA9EzCzF,EAAAA,yBAkBMS,SAfNqG,EAAAA,cAIAC,EAAAA,iBAI2D7H,EAAAA,cAErD5C,SAEA0M,SACAzF,6CAqFLqC,EAAAA,UAAShG,KAAA,CAAC,uDAEV+L,EAAAA,aAAY/L,KAAA,CAACmJ,QA1GhB,GCAA6C,EAAA,oDASCzL,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAcC,EAAAA,aAAcwI,GACtCvI,QAAS,CAAC0I,GACVzI,aAAc,CAACuI,EAA4BE,SAZ/C,GCAA4C,EAAA,WA6BE,SAAAA,EACUzI,EACAiD,EACArC,EACAE,EACAgF,GAJA1M,KAAA4G,WAAAA,EACA5G,KAAA6J,UAAAA,EACA7J,KAAAwH,YAAAA,EACAxH,KAAA0H,oBAAAA,EACA1H,KAAA0M,eAAAA,iBAVU,sBACI,UAexB2C,EAAA7N,UAAAsB,SAAA,WAAA,IAAAlB,EAAA5B,KACEA,KAAK6J,UAAU0B,SAASvL,KAAK4G,WAAWC,cAAe,mBAEvD7G,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYhD,wBAAwB9C,UAAU,SAAAlC,IACzEoC,EAAK4C,wBAA0BhF,IAO7BoC,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAe,wBACrDjF,EAAK6C,2BACR7C,EAAKiI,UAAU2B,YAAY5J,EAAK8K,eAAeY,kBAAkBzG,cAAe,0BAPlFjF,EAAKiI,UAAU0B,SAAS3J,EAAKgF,WAAWC,cAAe,wBAClDjF,EAAK6C,2BACR7C,EAAKiI,UAAU0B,SAAS3J,EAAK8K,eAAeY,kBAAkBzG,cAAe,4BAUnF7G,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY/C,0BAA0B/C,UAAU,SAAClC,GAC5EoC,EAAK6C,0BAA4BjF,EAC5BoC,EAAK4C,0BACJhF,EACFoC,EAAKiI,UAAU2B,YAAY5J,EAAK8K,eAAeY,kBAAkBzG,cAAe,wBAEhFjF,EAAKiI,UAAU0B,SAAS3J,EAAK8K,eAAeY,kBAAkBzG,cAAe,4BAKnF7G,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYjD,iBAAiB7C,UAAU,SAAClC,GAC/DoC,EAAKiD,OAASrF,GAChBoC,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAe,mBAAmBjF,EAAKiD,MAEpFjD,EAAKiD,KAAOrF,EACZoC,EAAKiI,UAAU0B,SAAS3J,EAAKgF,WAAWC,cAAe,mBAAmBrH,OAO9E6P,EAAA7N,UAAAsI,gBAAA,WACE9J,KAAK0H,oBAAoBd,WAAa5G,KAAKsP,uBAM7CD,EAAA7N,UAAAyB,YAAA,WACEjD,KAAKqH,UAAYD,EAAgBpH,KAAKqH,WACtCrH,KAAKmH,cAAgBD,EAAoBlH,KAAKmH,oCAnFjDhE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,0BACVC,SAAU,8IAKVC,OAAQ,CAAC,yGACTwF,gBAAiBC,EAAAA,wBAAwBC,oDAfgBE,EAAAA,kBAA+BoB,EAAAA,iBAGlFtG,SACA0C,SAFA6F,oDAyBLpD,EAAAA,UAAShG,KAAA,CAAC,8BA3Bb,GCAAmM,EAAA,oDAKC5L,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,cACVE,QAAS,CAACsL,GACVrL,aAAc,CAACqL,SARnB,GCAAG,EAAA,WAqBE,SAAAA,EACU5I,EACAiD,EACArC,EACAkF,EACA9C,GAJA5J,KAAA4G,WAAAA,EACA5G,KAAA6J,UAAAA,EACA7J,KAAAwH,YAAAA,EACAxH,KAAA0M,eAAAA,EACA1M,KAAA4J,OAAAA,iBAVU,sBACI,UAgBxB4F,EAAAhO,UAAAsB,SAAA,WAAA,IAAAlB,EAAA5B,KACEA,KAAKwH,YAAYjB,qBAAqBkJ,OAAOC,aAC7C1P,KAAKwH,YAAYf,oBAAoBgJ,OAAOE,YAE5C3P,KAAK0M,eAAeY,kBAAoBtN,KAAK4G,WAE7C5G,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAYlB,eAAe5E,UAAU,SAAClC,GACjEoC,EAAKgO,QAAUpQ,GAAgB,QAGjCQ,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAO,SAAU,SflC1D,SAAA2F,EAAyBC,EAAoBC,GAA7C,IAAAnO,EAAA5B,KACMgQ,EAAU,KACd,OAAO,eAAC,IAAA5M,EAAA,GAAA6M,EAAA,EAAAA,EAAAtQ,UAAAC,OAAAqQ,IAAA7M,EAAA6M,GAAAtQ,UAAAsQ,GACDD,IACHA,EAAUjC,WAAW,WACnB+B,EAAS3Q,KAAI+Q,MAAbJ,EAAQpQ,EAAA,CAAMkC,GAASwB,IACvB4M,EAAU,MACTD,Ke2B2DF,CAAS,WACrEjO,EAAK4F,YAAYjB,qBAAqBkJ,OAAOC,aAC7C9N,EAAK4F,YAAYf,oBAAoBgJ,OAAOE,aAC3C,SAGL3P,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY9C,OAAOhD,UAAU,SAAClC,GAC/C,UAAVA,EAAoBoC,EAAKiI,UAAU0B,SAAS3J,EAAKgF,WAAWC,cAAe,SACzEjF,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAe,SAClD,UAAVrH,EAAoBoC,EAAKiI,UAAU0B,SAAS3J,EAAKgF,WAAWC,cAAe,gBACzEjF,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAe,mBAG9D7G,KAAKmH,cAAc5H,KAAKS,KAAKwH,YAAY3C,KAAKnD,UAAU,SAAClC,GACnDA,IACEoC,EAAKiD,MAAQjD,EAAKiD,OAASrF,GAC7BoC,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAe,QAAQjF,EAAKiD,MAEzEjD,EAAKiD,KAAOrF,EACZoC,EAAKiI,UAAU0B,SAAS3J,EAAKgF,WAAWC,cAAe,QAAQjF,EAAKiD,WAQ1E2K,EAAAhO,UAAAyB,YAAA,WACEjD,KAAKmH,cAAgBD,EAAoBlH,KAAKmH,eAC9CnH,KAAKqH,UAAYD,EAAgBpH,KAAKqH,gCAnEzClE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAU,mFAIVC,OAAQ,CAAC,6sBAZ4B4F,EAAAA,kBAAXoB,EAAAA,iBAGnBtG,SACAuI,SAJ0ClC,EAAAA,YAAnD,GCAA6F,EAAA,oDAKCxM,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,cACVE,QAAS,CAACyL,GACVxL,aAAc,CAACwL,SARnB,GCAAY,EAAA,WAgBE,SAAAA,EACUxN,GAAA5C,KAAA4C,eAAAA,sBAVwC,IAAI3C,EAAAA,iBAAgB,GAYpED,KAAKG,cAQCiQ,EAAA5O,UAAArB,2BACNH,KAAK4C,eAAeJ,SAASd,UAAU,SAAClC,GAClCA,GAASA,EAAMA,EAAMI,OAAS,KAC5BgC,EAAKyO,eAAiBnQ,WAAa0B,EAAKyO,eAAiB7Q,EAAMA,EAAMI,OAAS,GAAG0B,KAAoB,eACvGM,EAAK0O,eAAejR,OAAOG,EAAMA,EAAMI,OAAS,GAAG0B,KAAmB,cAExEM,EAAKyO,aAAe7Q,EAAMA,EAAMI,OAAS,GAAG0B,KAAmB,qCA5BtEmB,EAAAA,sDAFQ3C,OAHT,GCQayQ,EAAoB,IAAIC,EAAAA,eAAe,gBAKpD,SAAAC,EAAmCvM,GACjC,OAAO,IAAID,EAAYC,GAMzB,SAAAwM,EAA+BxM,GAC7B,MAAO,CAAC,CACJyM,QAAS1M,EACT2M,WAAYH,EACZI,KAAM,CAACN,IACN,CACDI,QAASJ,EACTO,SAAU5M,qBCKd,SAAA6M,EAAoCC,GAClC,GAAIA,EACF,MAAM,IAAIC,MAAM,2EAUbF,EAAAG,QAAP,SAAehN,GACb,MAAO,CACLiN,SAAUJ,EACVK,UAAS1R,EAAMgR,EAAexM,GAAa,CAAEkM,0BA1BlDzM,EAAAA,SAAQP,KAAA,CAAC,CACRQ,QAAS,CAACC,EAAAA,aAAcC,EAAAA,cACxBC,QAAS,CAACsF,EAAeK,EAAcgB,EAAc0E,EAAmBG,EAAoBY,GAC5FiB,UAAW,CAACtR,EAAgB0M,EAAgB7F,EAAqBI,EAAeE,gDAQ9B8J,EAAYM,WAAA,CAAA,CAAAC,KAAjDC,EAAAA,UAAQ,CAAAD,KAAIE,EAAAA,mBChCdC,EAAgB,CAC3B,UACA,UACA,SACA,UACA,OACA,WAGWC,EAAS,CACpBC,KAAQ,UACRC,cAAe,UACfC,MAAS,UACTC,eAAgB,UAChBC,KAAQ,UACRC,cAAe,UACfC,QAAW,UACXC,iBAAkB,UAClBC,MAAS,UACTC,eAAgB,UAChBC,KAAQ,UACRC,cAAe,UACfC,aAAc,UACdC,aAAc,UACdC,oBAAqB,UACrBC,KAAQ,UACRC,cAAe,UACfC,OAAU,UACVC,gBAAiB,UACjBC,KAAQ,UACRC,cAAe,UACfC,MAAS,UACTC,eAAgB,UAChBC,OAAU,UACVC,gBAAiB,UACjBC,OAAU,UACVC,gBAAiB,UACjBC,IAAO,UACPC,aAAc,UACdC,KAAQ,UACRC,cAAe,UACfC,OAAU,UACVC,gBAAiB,WC1CnBC,EAAA,WAmBE,SAAAA,EACU/J,EACAjD,GADA5G,KAAA6J,UAAAA,EACA7J,KAAA4G,WAAAA,SAcHgN,EAAApS,UAAAqS,4BAAmBC,EAAeC,EAAoBC,EAAkBC,GACzEH,GAASC,IACX/T,KAAKkU,uBACDxC,EAAOoC,IACT9T,KAAK6J,UAAU0B,SAASvL,KAAK4G,WAAWC,cAAe,YACvD7G,KAAKmU,uBAAyB,CAACH,SAAUA,EAAUF,MAAOpC,EAAOoC,IACjE9T,KAAK6J,UAAUuB,SAASpL,KAAK4G,WAAWC,cAAemN,EAAUtC,EAAOoC,MAExE9T,KAAK6J,UAAU2B,YAAYxL,KAAK4G,WAAWC,cAAe,YAC/B,IAAvBiN,EAAMM,QAAQ,MAAuC,IAAzBN,EAAMM,QAAQ,QAC5CpU,KAAKmU,uBAAyB,CAACH,SAAUA,EAAUF,MAAOA,GAC1D9T,KAAK6J,UAAUuB,SAASpL,KAAK4G,WAAWC,cAAemN,EAAUF,KACtB,IAAlCrC,EAAc2C,QAAQN,KAC/B9T,KAAKqU,uBAAyBJ,EAAYA,EAAM,IAAIH,EAAUA,EAC9D9T,KAAK6J,UAAU0B,SAASvL,KAAK4G,WAAWC,cAAe7G,KAAKqU,4BAU7DT,EAAApS,UAAA0S,gCACDlU,KAAKmU,uBACPnU,KAAK6J,UAAU6B,YAAY1L,KAAK4G,WAAWC,cAAe7G,KAAKmU,uBAAuBH,SAAUhU,KAAKmU,uBAAuBL,OACnH9T,KAAKqU,wBACdrU,KAAK6J,UAAU2B,YAAYxL,KAAK4G,WAAWC,cAAe7G,KAAKqU,yBAS5DT,EAAApS,UAAA8S,sBAAaR,GACdA,IACF9T,KAAKuU,iBACDT,EAAMU,WAAW,MAAQV,EAAMU,WAAW,QAC5CxU,KAAKyU,iBAAmBX,EACxB9T,KAAK6J,UAAUuB,SAASpL,KAAK4G,WAAWC,cAAe,QAASiN,KAEhE9T,KAAK0U,iBAAmB,QAAQZ,EAChC9T,KAAK6J,UAAU0B,SAASvL,KAAK4G,WAAWC,cAAe7G,KAAK0U,qBAU3Dd,EAAApS,UAAA+S,0BACDvU,KAAKyU,iBACPzU,KAAK6J,UAAU6B,YAAY1L,KAAK4G,WAAWC,cAAe,QAAS7G,KAAKyU,kBAC/DzU,KAAK0U,kBACd1U,KAAK6J,UAAU2B,YAAYxL,KAAK4G,WAAWC,cAAe7G,KAAK0U,uCAvFpEjS,EAAAA,sDAPoB8H,EAAAA,iBAAWpB,EAAAA,gBAAhC,GCAAwL,EAAA,WAeE,SAAAA,EACU/N,EACAiD,EACA+K,GAFA5U,KAAA4G,WAAAA,EACA5G,KAAA6J,UAAAA,EACA7J,KAAA4U,aAAAA,kBAG6B,SAGvC7P,OAAAK,eAAsBuP,EAAAnT,UAAA,QAAK,KAA3B,SAA4BsS,GAC1B9T,KAAK4U,aAAaf,mBAAmBC,EAAO9T,KAAK+T,UAAW/T,KAAKgU,SAAUhU,KAAKiU,6DArBnF7H,EAAAA,UAAShJ,KAAA,CAAC,CACTC,SAAU,YACV+N,UAAW,CAACwC,gDANwBzK,EAAAA,kBAAXoB,EAAAA,iBAElBqJ,wCAmBNnQ,EAAAA,MAAKL,KAAA,CAAC,oCACNK,EAAAA,MAAKL,KAAA,CAAC,mCACNK,EAAAA,MAAKL,KAAA,CAAC,kCACNK,EAAAA,MAAKL,KAAA,CAAC,gBAxBT,gBAwCE,SAAAyR,EACUjO,EACAiD,EACA+K,GAFA5U,KAAA4G,WAAAA,EACA5G,KAAA6J,UAAAA,EACA7J,KAAA4U,aAAAA,SAGV7P,OAAAK,eAA0ByP,EAAArT,UAAA,QAAK,KAA/B,SAAgCsS,GAC9B9T,KAAK4U,aAAaN,aAAaR,wDAlBlC1H,EAAAA,UAAShJ,KAAA,CAAC,CACTC,SAAU,gBACV+N,UAAW,CAACwC,gDA/BwBzK,EAAAA,kBAAXoB,EAAAA,iBAElBqJ,oCA4CNnQ,EAAAA,MAAKL,KAAA,CAAC,uBC9CT0R,EAAA,oDAICnR,EAAAA,SAAQP,KAAA,CAAC,CACNW,QAAS,CAAC4Q,EAA0BE,GACpC7Q,aAAc,CAAC2Q,EAA0BE,SAN7C,GCAAE,EAAA,WAeE,SAAAA,EACSnO,GAAA5G,KAAA4G,WAAAA,6BAXVwF,EAAAA,UAAShJ,KAAA,CAAC,CACTC,SAAU,mEANe8F,EAAAA,0DASxB1F,EAAAA,MAAKL,KAAA,CAAC,0BATT,GCAA4R,EAAA,oDAgCC7R,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,sBACVC,SAAU,6GAGT8F,EAAAA,UAAShG,KAAA,CAAC,oBArCb,yDA4CCD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,uBACVC,SAAU,6GAGT8F,EAAAA,UAAShG,KAAA,CAAC,wEAoByB,iCAID,gCAUnC6R,EAAAzT,UAAAsB,SAAA,WAGE,GAFA9C,KAAKkV,iBAAmBlV,KAAKmV,aAExBnV,KAAKgI,SAAWhI,KAAKoV,yBACxB,MAAM,IAAInE,MAAM,oGAGdjR,KAAKqV,0BACPrV,KAAKsV,mBAAqBtV,KAAKqV,0BAA0BE,YAEzDvV,KAAKsV,mBAAqBtV,KAAKuV,iCArCpCpS,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAU,6GASTG,EAAAA,4BACAA,EAAAA,iCACAA,EAAAA,sBACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,gCACAA,EAAAA,wCAEA8F,EAAAA,aAAYnG,KAAA,CAAC4R,sCACbzL,EAAAA,aAAYnG,KAAA,CAACoS,wBAEbpM,EAAAA,UAAShG,KAAA,CAAC,qCAwEX,SAAAqS,EACU5S,EACA+G,EACAC,GAFA7J,KAAA6C,kBAAAA,EACA7C,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,mBA7BiB,CAAC,kBAES,sBAEQ,mBAOhB,iCAEM,IAAIe,EAAAA,iCACL,IAAIA,EAAAA,oBAPtC7F,OAAAK,eAA0BqQ,EAAAjU,UAAA,eAAY,KAAtC,SAAuChC,GACrCQ,KAAK0V,YAAclW,aAAiBmW,MAAQnW,EAAQ,CAACA,oCA6BzCiW,EAAAG,0BAAiBC,GAC7BA,EAAUX,iBAAmBW,EAAUV,aAQ3BM,EAAAK,0BAAiBD,GACzBA,EAAUE,mBACZF,EAAUX,iBAAmBW,EAAUE,mBAO3CN,EAAAjU,UAAA8J,mBAAA,WAAA,IAAA1J,EAAA5B,KACEA,KAAKgW,qBACLhW,KAAKiW,6BAELjW,KAAKmH,cAAc5H,KAAKS,KAAKkW,oBAAoBC,QAAQzU,UAAU,WACjEE,EAAKoU,yBAOTP,EAAAjU,UAAAsI,gBAAA,WAAA,IAAAlI,EAAA5B,KACEA,KAAKoW,sBAELpW,KAAKmH,cAAc5H,KAAKS,KAAKqW,0BAA0BF,QAAQzU,UAAU,WACvEE,EAAKwU,0BAUTX,EAAAjU,UAAA8U,YAAA,SAAYH,IAC+B,IAArCA,EAAO,aAAcI,aACvBvW,KAAKiW,8BAOTR,EAAAjU,UAAAyB,YAAA,WACEmE,EAAgBpH,KAAKqH,WACrBH,EAAoBlH,KAAKmH,gBASpBsO,EAAAjU,UAAAgV,yBAAgBrM,EAAcsM,GACnCtM,EAAMC,iBAEN,IAAMgK,EAAUpU,KAAK0V,YAAqB,QAAEe,IAC3B,IAAbrC,EACEpU,KAAK0W,WACP1W,KAAK0V,YAAYnW,KAAKkX,GAEtBzW,KAAK0V,YAAc,CAACe,GAGlBzW,KAAK0W,WACP1W,KAAK0V,YAAYiB,OAAOvC,EAAS,GAEjCpU,KAAK0V,YAAc,GAGvB1V,KAAKiW,8BASAR,EAAAjU,UAAAoV,uBAAczM,EAAuB0L,GAC1CA,EAAUgB,cAAe,EACzB7W,KAAK8W,gBAAgB9L,KAAK,CAAC+L,eAAgB5M,EAAOsE,MAAOoH,EAAUpH,SAS9DgH,EAAAjU,UAAAwV,sBAAa7M,EAAuB0L,GACzCA,EAAUgB,cAAe,EACzB7W,KAAKiX,eAAejM,KAAK,CAAC+L,eAAgB5M,EAAOsE,MAAOoH,EAAUpH,SAO5DgH,EAAAjU,UAAAwU,8BACNhW,KAAKkW,oBAAoBpV,QAAQ,SAAC+U,EAA+BpH,GAC/DoH,EAAUpH,MAAQA,KAQdgH,EAAAjU,UAAA4U,0CACNpW,KAAKqH,UAAYD,EAAgBpH,KAAKqH,WAEtCrH,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKyU,0BAA0BvV,QAAQ,SAACoW,GACtCtV,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOgN,EAAgBtQ,WAAWC,cAAe,QAAS,SAACsD,GAC5FvI,EAAK4U,gBAAgBrM,EAAO+M,EAAgBC,mBAAmB1I,OAC/D7M,EAAKiB,kBAAkBiG,mBAEzBlH,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOgN,EAAgBtQ,WAAWC,cAAe,aAAc,WAChG4O,EAAwBK,iBAAiBoB,EAAgBC,oBACzDvV,EAAKiB,kBAAkBiG,mBAEzBlH,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOgN,EAAgBtQ,WAAWC,cAAe,aAAc,WAChG4O,EAAwBG,iBAAiBsB,EAAgBC,oBACzDvV,EAAKiB,kBAAkBiG,wBAUvB2M,EAAAjU,UAAAyU,iDACNjW,KAAKkW,oBAAoBpV,QAAQ,SAAC+U,EAA+BpH,GAC/DoH,EAAU/K,aAAmD,IAArClJ,EAAK8T,YAAYtB,QAAQ3F,0BA9MtDtL,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAU,koCArGVE,EAAAA,yBAMA8G,EAAAA,cAMAC,EAAAA,mDAoHC9G,EAAAA,MAAKL,KAAA,CAAC,mCAGNK,EAAAA,0BACAA,EAAAA,+BAEA4I,EAAAA,+BACAA,EAAAA,oCAEA+K,EAAAA,gBAAehU,KAAA,CAAC6R,sCAEhB9F,EAAAA,aAAY/L,KAAA,CAAC2R,WC9IhBsC,GAAA,oDASC1T,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAcyI,EAAkBwI,GAC1C/Q,QAAS,CAACiR,EAA0BQ,EAA2BP,EAAoBQ,IACnFzR,aAAc,CAAC+Q,EAA0BC,EACzBQ,EAA2BP,EAAoBQ,UAbnE,GCAA6B,GAAA,WA0EE,SAAAA,EACUzU,EACA+G,EACAC,EACA0N,GAHAvX,KAAA6C,kBAAAA,EACA7C,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,EACA7J,KAAAuX,iBAAAA,wBAzCgB,wCACH,eACP,YAEF,uBAEM,wBAEc,yBAcL,wBAEM,IAAI3M,EAAAA,iCACL,IAAIA,EAAAA,oBAhBtC7F,OAAAK,eAAoBkS,EAAA9V,UAAA,UAAO,KAA3B,SAA4BhC,GAC1BQ,KAAKsR,KAAO9R,EAAQ,UAAY,yCAIlCuF,OAAAK,eAAmCkS,EAAA9V,UAAA,iBAAc,KAAjD,SAAkDhC,GAChDQ,KAAKwX,cAAgBhY,EAEnBQ,KAAKyX,iBADHjY,EACyBQ,KAAKsR,KAAI,eAEZ,oCA4B5BgG,EAAA9V,UAAAsI,gBAAA,WAAA,IAAAlI,EAAA5B,KACEA,KAAK4J,OAAOK,kBAAkB,WACxBrI,EAAK8V,kBACP3J,WAAW,WACHnM,EAAiC,kBAAE+V,YACvC/V,EAAKgW,QAAS,EACdhW,EAAKiB,kBAAkBiG,kBAExBlH,EAAK8V,kBAEN9V,EAAKiW,qBACPjW,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOtI,EAAKiW,oBAAoBhR,cAAe,QAAS,WACzFjF,EAAKgW,QAAS,EACdhW,EAAKiB,kBAAkBiG,sBAS/BwO,EAAA9V,UAAAyB,YAAA,WACEmE,EAAgBpH,KAAKqH,YAQhBiQ,EAAA9V,UAAAoV,uBAAczM,GACnBnK,KAAK8W,gBAAgB9L,KAAKb,IAQrBmN,EAAA9V,UAAAwV,sBAAa7M,GACI,MAAlBA,EAAM4B,UACR/L,KAAKqH,UAAYD,EAAgBpH,KAAKqH,WACtCrH,KAAK8X,SAAU,EACf9X,KAAKuX,iBAAiBQ,QACtB/X,KAAK6C,kBAAkBiG,iBAEzB9I,KAAKiX,eAAejM,KAAKb,wBA3G5BhH,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,WACVC,SAAU,sdAOVC,OAAQ,CAAC,qPACTwF,gBAAiBC,EAAAA,wBAAwBC,oDA/BzCzF,EAAAA,yBAKA8G,EAAAA,cAGAC,EAAAA,iBAEAyN,EAAAA,6DAgCCvU,EAAAA,uBACAA,EAAAA,qBAGAA,EAAAA,gCACAA,EAAAA,8BACAA,EAAAA,MAAKL,KAAA,CAAC,qCAQNK,EAAAA,+BAEA4I,EAAAA,+BACAA,EAAAA,oCAEAjD,EAAAA,UAAShG,KAAA,CAAC,oDACVgG,EAAAA,UAAShG,KAAA,CAAC,sBAAuB,CAAE6U,KAAMD,EAAAA,wBAjE5C,GCAAE,GAAA,oDASCvU,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAcyI,EAAkBwI,GAC1C/Q,QAAS,CAACuT,IACVtT,aAAc,CAACsT,UAZnB,GCAAa,GAAA,oDAKC/L,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,uBAPZ,0DAeC+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,gFAQX+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,+EAQX+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,yBCrCZ+U,GAAA,WA2GE,SAAAA,EACUvV,EACA+G,EACAC,GAFA7J,KAAA6C,kBAAAA,EACA7C,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,eA5CM,iBAEI,iBAEO,iCACS,0CACA,4CAID,gCAEJ,wBAEI,iCACH,oBACF,oBAEA,gBACJ,yBAEU,wCACP,0BAEK,IAAIe,EAAAA,kCACH,IAAIA,EAAAA,oBAyBvCwN,EAAA5W,UAAAsI,gBAAA,WAAA,IAAAlI,EAAA5B,KACEA,KAAK4J,OAAOK,kBAAkB,WACxBrI,EAAKyW,qBACPzW,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOtI,EAAKyW,oBAAoBxR,cAAe,QAAS,WACzFjF,EAAKkJ,aAAelJ,EAAKkJ,YACzBlJ,EAAKiB,kBAAkBiG,mBAGvBlH,EAAKiW,qBACPjW,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOtI,EAAKiW,oBAAoBhR,cAAe,QAAS,WACzFjF,EAAKgW,QAAS,EACdhW,EAAKiB,kBAAkBiG,sBAS/BsP,EAAA5W,UAAAyB,YAAA,WACEmE,EAAgBpH,KAAKqH,YAQhB+Q,EAAA5W,UAAA8W,qBAAYnO,GACK,MAAlBA,EAAM4B,UACR/L,KAAK8X,SAAU,IASZM,EAAA5W,UAAAoV,uBAAczM,GACK,SAApBA,EAAM2B,YACR9L,KAAKuY,aAAc,EACnBvY,KAAK8W,gBAAgB9L,KAAKb,KASvBiO,EAAA5W,UAAAwV,sBAAa7M,GACM,SAApBA,EAAM2B,YACR9L,KAAKuY,aAAc,EACnBvY,KAAKiX,eAAejM,KAAKb,yBAnJ9BhH,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,SACVC,SAAU,67DAmCVC,OAAQ,CAAC,2LACTwF,gBAAiBC,EAAAA,wBAAwBC,oDA3DzCzF,EAAAA,yBAKA8G,EAAAA,cAGAC,EAAAA,+CA2DC9G,EAAAA,iCACAA,EAAAA,iCACAA,EAAAA,4BACAA,EAAAA,sBACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,sBACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,6BACAA,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,2BACAA,EAAAA,uBACAA,EAAAA,4BACAA,EAAAA,iCACAA,EAAAA,0BACAA,EAAAA,8BAEA4I,EAAAA,gCACAA,EAAAA,mCAEA9C,EAAAA,aAAYnG,KAAA,CAACoV,gCACbjP,EAAAA,aAAYnG,KAAA,CAACqV,iCACblP,EAAAA,aAAYnG,KAAA,CAAC+U,+BACb5O,EAAAA,aAAYnG,KAAA,CAACsV,iCAEbtP,EAAAA,UAAShG,KAAA,CAAC,oDACVgG,EAAAA,UAAShG,KAAA,CAAC,4BAnGb,GCAAuV,GAAA,oDAUChV,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAeyI,EAAkBwI,GAC3C/Q,QAAS,CAACqU,GAAcI,GAAoBL,GAAqBM,GAAoBC,IACrF1U,aAAc,CAACoU,GAAcI,GAAoBL,GAAqBM,GAAoBC,UAb9F,GCAAE,GAAA,oDAKCxM,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,4BAPZ,0DAeC+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,qFAQX+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,8BC3BZwV,GAAA,+CAyCsC,wCAID,6CAGA,+BAEP,2BACK,8BAEJ,kBAS7BA,EAAArX,UAAAsB,SAAA,WACO9C,KAAK8Y,kBACR9Y,KAAK+Y,cAAgB/Y,KAAKgZ,0CA1D/B7V,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVE,OAAQ,CAAC,oDACTD,SAAU,2zCA+BTG,EAAAA,iCACAA,EAAAA,4BACAA,EAAAA,sBACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,sBACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,mCACAA,EAAAA,yBACAA,EAAAA,8BACAA,EAAAA,6BACAA,EAAAA,0BACAA,EAAAA,sCAEA8F,EAAAA,aAAYnG,KAAA,CAAC6V,oCACb1P,EAAAA,aAAYnG,KAAA,CAAC8V,qCACb3P,EAAAA,aAAYnG,KAAA,CAACwV,SAzDhB,GCAAO,GAAA,oDASCxV,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAciR,GACxB/Q,QAAS,CAAC8U,GAAkBI,GAAwBL,GAAyBM,IAC7ElV,aAAc,CAAC6U,GAAkBI,GAAwBL,GAAyBM,UAZtF,GCAAE,GAAA,oDAKChN,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,4BAPZ,0DAeC+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,sFAOX+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,gCC1BZgW,GAAA,+CAsCsC,0CAGD,yCAGA,uCAEF,8BACJ,uCAxC9BlW,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAU,8gCAwBVC,OAAQ,CAAC,gOAGRE,EAAAA,4BACAA,EAAAA,iCACAA,EAAAA,sBACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,sBACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,yBACAA,EAAAA,8BACAA,EAAAA,0BACAA,EAAAA,uCAEA8F,EAAAA,aAAYnG,KAAA,CAACkW,qCACb/P,EAAAA,aAAYnG,KAAA,CAACgW,sCACb7P,EAAAA,aAAYnG,KAAA,CAACmW,SAnDhB,GCAAC,GAAA,oDAQC7V,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAciR,GACxB/Q,QAAS,CAACsV,GAAmBC,GAAyBC,GAA0BH,IAChFpV,aAAc,CAACqV,GAAmBC,GAAyBC,GAA0BH,UAXzF,GCAAK,GAAA,oDAwBCtW,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAU,oEACVyF,gBAAiBC,EAAAA,wBAAwBC,gDAGxCG,EAAAA,UAAShG,KAAA,CAAC,sCACVmG,EAAAA,aAAYnG,KAAA,CAAC,sBA/BhB,0DAsCCD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,oEACVyF,gBAAiBC,EAAAA,wBAAwBC,gDAGxCG,EAAAA,UAAShG,KAAA,CAAC,qCAgEX,SAAAsW,EACU7W,EACA+D,EACAgD,EACAC,GAHA7J,KAAA6C,kBAAAA,EACA7C,KAAA4G,WAAAA,EACA5G,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,iBA9BU,yBAEe,gDACI,iCACH,kCACN,kBACF,kBACC,gCAIM,IAAIe,EAAAA,iCACL,IAAIA,EAAAA,oBAwBtC8O,EAAAlY,UAAAsI,gBAAA,WAAA,IAAAlI,EAAA5B,KACQ2Z,EAAsB3Z,KAAK4Z,yBAA2B5Z,KAAK4Z,wBAAwBC,cACvF7Z,KAAK4Z,wBAAwBC,cAAchT,cAAgB7G,KAAK6Z,cAC9D7Z,KAAK6Z,cAAgB7Z,KAAK8Z,qBACxB9Z,KAAK8Z,qBAAqBjT,cAAgB,KAC5C8S,GACF3Z,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAOyP,EAAqB,QAAS,SAACxP,GACvEvI,EAAKmY,eAAe5P,GACpBvI,EAAKiB,kBAAkBiG,sBAS/B4Q,EAAAlY,UAAAyB,YAAA,WACEjD,KAAKga,8BACL5S,EAAgBpH,KAAKqH,YAQhBqS,EAAAlY,UAAAuY,wBAAe5P,cACpBA,EAAMC,iBACNpK,KAAK8K,aAAe9K,KAAK8K,YACpB9K,KAAK8K,YAOR9K,KAAKga,8BANLha,KAAK4J,OAAOK,kBAAkB,WAC5B8D,WAAY,WACVnM,EAAKqY,iCAaNP,EAAAlY,UAAAoV,uBAAczM,GACnBnK,KAAK8W,gBAAgB9L,KAAKb,IAQrBuP,EAAAlY,UAAAwV,sBAAa7M,GAClBnK,KAAK8W,gBAAgB9L,KAAKb,IAOpBuP,EAAAlY,UAAAyY,gDACNja,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAKsY,sBAAwBtY,EAAKiI,UAAUK,OAAO,WAAY,QAAS,WACjEtI,EAAKkJ,cACRlJ,EAAKkJ,aAAc,EACnBlJ,EAAKoY,8BACLpY,EAAKiB,kBAAkBiG,sBAUvB4Q,EAAAlY,UAAAwY,uCACFha,KAAKka,uBACPla,KAAKka,6CArJV/W,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,6BACVC,SAAU,kxCAwBVC,OAAQ,CAAC,kKACTwF,gBAAiBC,EAAAA,wBAAwBC,oDA3EzCzF,EAAAA,yBAGA2F,EAAAA,kBAGAmB,EAAAA,cAGAC,EAAAA,uDAwEC9G,EAAAA,oCACAA,EAAAA,iCACAA,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,0BACAA,EAAAA,6BACAA,EAAAA,0BACAA,EAAAA,+BAEA4I,EAAAA,+BACAA,EAAAA,wCAEA9C,EAAAA,aAAYnG,KAAA,CAACqW,mCACblQ,EAAAA,aAAYnG,KAAA,CAAC+W,kCAEb/Q,EAAAA,UAAShG,KAAA,CAAC,yBCnGbgX,GAAA,oDAQCzW,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAcyI,EAAkBwI,GAC1C/Q,QAAS,CAAC2V,GAAmBD,GAAyBU,IACtDnW,aAAc,CAAC0V,GAAmBD,GAAyBU,UAX/D,GCAAE,GAAA,oDAMCjO,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,6BARZ,0DAeC+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,4FAOX+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,6FAOX+I,EAAAA,UAAShJ,KAAA,CAAC,CAETC,SAAU,gDC1BV,SAAAiX,EACU1T,EACAiD,GADA7J,KAAA4G,WAAAA,EACA5G,KAAA6J,UAAAA,sBAJ8B,UAQjCyQ,EAAA9Y,UAAA+Y,sBAAaC,cACQ,iBAAfA,IACTA,EAAaA,EAAWC,MAAM,MAIRza,KAAK0a,eAAeC,OAAO,SAAAC,GAAK,OAA2B,IAA3BJ,EAAWpG,QAAQwG,KAC3D9Z,QAAQ,SAAA+Z,GAClBA,GACFjZ,EAAKiI,UAAU2B,YAAY5J,EAAKgF,WAAWC,cAAegU,KAKzCL,EAAWG,OAAO,SAAAC,GAAK,OAAoC,IAApChZ,EAAK8Y,eAAetG,QAAQwG,KAC3D9Z,QAAQ,SAAA+Z,GACfA,GACFjZ,EAAKiI,UAAU0B,SAAS3J,EAAKgF,WAAWC,cAAegU,KAK3D7a,KAAK0a,eAAchb,EAAQ8a,wBAhC9B/X,EAAAA,sDAL+B0G,EAAAA,kBAAXoB,EAAAA,kBCArBuQ,GAAA,WAwCE,SAAAA,EACSlU,EACAiD,EACCkR,EACAnG,EACAoG,GAJDhb,KAAA4G,WAAAA,EACA5G,KAAA6J,UAAAA,EACC7J,KAAA+a,UAAAA,EACA/a,KAAA4U,aAAAA,EACA5U,KAAAgb,aAAAA,oBA9Ba,6BAEJ,IAAIC,EAAAA,qBAEiBjb,KAAKkb,SAAS/V,sBAEtDJ,OAAAK,eAAa0V,EAAAtZ,UAAA,cAAW,KAAxB,SAAyBsS,GACvB9T,KAAK4U,aAAaf,mBAAmBC,GAAO,EAAM,eAAgB,uCAEpE/O,OAAAK,eAAa0V,EAAAtZ,UAAA,QAAK,KAAlB,SAAmB2Z,GACjBnb,KAAKob,YAAa,EAClBpb,KAAKgb,aAAaT,aAAaY,oCAEjCpW,OAAAK,eAAa0V,EAAAtZ,UAAA,QAAK,KAAlB,SAAmBsS,GACjB9T,KAAK4U,aAAaN,aAAaR,oCAsBjCgH,EAAAtZ,UAAAsB,SAAA,WACO9C,KAAKob,YACRpb,KAAKgb,aAAaT,aAAava,KAAKqb,eAIjBP,EAAAtZ,UAAA8Z,cAAvB,WACEtb,KAAKkb,SAAS7b,KAAKW,KAAK+a,gCAhD3B3O,EAAAA,UAAShJ,KAAA,CAAC,CACTC,SAAU,gBACV+N,UAAW,CAACwC,EAAc0G,iDAZUnR,EAAAA,kBAAXoB,EAAAA,iBAClBgR,EAAAA,iBAIA3H,SACA0G,2CAeN7W,EAAAA,uBAGAA,EAAAA,qBAIAA,EAAAA,6BA6BA+X,EAAAA,aAAYpY,KAAA,CAAC,cAzDhB,GCAAqY,GAAA,2CA0C+C,mBAOvB,+BAEK,8BAEA,8BAGD,oBAQ1BA,EAAAja,UAAA8J,mBAAA,WAAA,IAAA1J,EAAA5B,KACEA,KAAKmH,cAAc5H,KAAKS,KAAK0b,mBAAmBC,QAAQja,UAAU,SAAClC,GAC7DA,EAAMoc,SACRha,EAAKia,aAAeja,EAAKka,gBACzBla,EAAKma,iBAAmBna,EAAKoa,qBACnBxc,EAAMoc,SAIhBha,EAAKia,aAAeja,EAAKqa,WACzBra,EAAKma,iBAAmBna,EAAKsa,iBAJ7Bta,EAAKia,aAAeja,EAAKua,gBACzBva,EAAKma,iBAAmBna,EAAKwa,yBAQnCX,EAAAja,UAAAyB,YAAA,WACEiE,EAAoBlH,KAAKmH,oCA7D5BhE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,k9BA0BTG,EAAAA,0BACAA,EAAAA,0BACAA,EAAAA,8BACAA,EAAAA,+BACAA,EAAAA,mCACAA,EAAAA,+BACAA,EAAAA,mCACAA,EAAAA,qBACAA,EAAAA,8BACAA,EAAAA,wCAEA8F,EAAAA,aAAYnG,KAAA,CAACiX,0CACb9Q,EAAAA,aAAYnG,KAAA,CAACiZ,2CACb9S,EAAAA,aAAYnG,KAAA,CAACkZ,wCACb/S,EAAAA,aAAYnG,KAAA,CAACmZ,gCACbhT,EAAAA,aAAYnG,KAAA,CAAC0X,SA9DhB,GCAA0B,GAAA,oDAcC7Y,EAAAA,SAAQP,KAAA,CAAC,CACRQ,QAAS,CACPC,EAAAA,aACAiR,EACA2H,EAAAA,aAEF1Y,QAAS,CAAC0X,GAAqBpB,GAA0BgC,GACvDC,GAA+BC,IACjCvY,aAAc,CAACyX,GAAqBpB,GAA0BgC,GAC5DC,GAA+BC,UAvBnC,GCAAG,GAAA,oDAQC/Y,EAAAA,SAAQP,KAAA,CAAC,CACRQ,QAAS,CACPC,EAAAA,aACAiR,EACA2H,EAAAA,aAEF1Y,QAAS,CAAC+W,IACV9W,aAAc,CAAC8W,UAfjB,GCAA6B,GAAA,WAeE,SAAAA,EACS/V,GAAA5G,KAAA4G,WAAAA,6BAXVwF,EAAAA,UAAShJ,KAAA,CAAC,CACTC,SAAU,6DANe8F,EAAAA,oDASxB1F,EAAAA,MAAKL,KAAA,CAAC,oBATT,GCAAwZ,GAAA,oDAgCCzZ,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAU,oEACVyF,gBAAiBC,EAAAA,wBAAwBC,gDAGxCG,EAAAA,UAAShG,KAAA,CAAC,oBAtCb,0DA6CCD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,oEACVyF,gBAAiBC,EAAAA,wBAAwBC,gDAGxCG,EAAAA,UAAShG,KAAA,CAAC,iEAaO,SAgBlByZ,EAAArb,UAAAsB,SAAA,WACM9C,KAAK8c,oBACP9c,KAAKsV,mBAAqBtV,KAAK8c,oBAAoBvH,YAEnDvV,KAAKsV,mBAAqBtV,KAAKuV,iCA3BpCpS,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,SACVC,SAAU,oEACVyF,gBAAiBC,EAAAA,wBAAwBC,2CAQxCxF,EAAAA,0BACAA,EAAAA,wBACAA,EAAAA,2BAEA2F,EAAAA,UAAShG,KAAA,CAAC,2CAEVmG,EAAAA,aAAYnG,KAAA,CAACwZ,iCACbrT,EAAAA,aAAYnG,KAAA,CAAC2Z,mEAiBf5Z,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAU,oEACVyF,gBAAiBC,EAAAA,wBAAwBC,gDAGxCG,EAAAA,UAAShG,KAAA,CAAC,qCAkEX,SAAA4Z,EACUna,EACA+G,EACAC,GAFA7J,KAAA6C,kBAAAA,EACA7C,KAAA4J,OAAAA,EACA5J,KAAA6J,UAAAA,iBAhCU,sBACI,yBAOW,sCACH,sCACI,8BACP,+BAGF,IAAIe,EAAAA,yBACL,IAAIA,EAAAA,oBAZ9B7F,OAAAK,eAAoB4X,EAAAxb,UAAA,iBAAc,KAAlC,SAAmCiN,GACjCzO,KAAKid,kBAAoBxO,EACzBzO,KAAK6C,kBAAkBiG,iDAiCzBkU,EAAAxb,UAAA8J,mBAAA,WAAA,IAAA1J,EAAA5B,KAEEA,KAAKkd,cAGLld,KAAKmH,cAAc5H,KAAKS,KAAKmd,KAAKhH,QAAQzU,UAAU,WAClDE,EAAKsb,iBAIPld,KAAKod,gBAMPJ,EAAAxb,UAAAsI,gBAAA,WAAA,IAAAlI,EAAA5B,KAEEA,KAAKqd,gBAGLrd,KAAKmH,cAAc5H,KAAKS,KAAKsd,oBAAoBnH,QAAQzU,UAAU,WACjEE,EAAKyb,oBAQTL,EAAAxb,UAAA8U,YAAA,SAAYH,GACNA,EAAO,gBACTnW,KAAKod,gBAOTJ,EAAAxb,UAAAyB,YAAA,WACEmE,EAAgBpH,KAAKqH,WACrBH,EAAoBlH,KAAKmH,gBAOpB6V,EAAAxb,UAAA4b,mCACDpd,KAAKmd,MACPnd,KAAKmd,KAAKrc,QAAQ,SAACyc,GACb3b,EAAKqb,oBAAsBM,EAAI9O,OAAU7M,EAAKqb,oBAAsB/c,WAA2B,IAAdqd,EAAI9O,OACvF8O,EAAItP,UAAW,EACfrM,EAAK4b,OAAOxS,KAAK,CAACyD,MAAO8O,EAAI9O,QAC7B7M,EAAKiB,kBAAkBiG,iBACdyU,EAAItP,WACbsP,EAAItP,UAAW,EACfrM,EAAK6b,QAAQzS,KAAK,CAACyD,MAAO8O,EAAI9O,QAC9B7M,EAAKiB,kBAAkBiG,oBAYxBkU,EAAAxb,UAAAkc,iBAAQvT,EAAcwT,cAC3BxT,EAAMC,iBACNuT,EAAU1P,UAAW,EACrBjO,KAAKwd,OAAOxS,KAAK,CAACb,MAAKA,EAAEsE,MAAOkP,EAAUlP,QAC1CzO,KAAKmd,KAAKrc,QAAQ,SAACyc,GACbA,EAAItP,UAAY0P,IAAcJ,IAChCA,EAAItP,UAAW,EACfrM,EAAK6b,QAAQzS,KAAK,CAACb,MAAKA,EAAEsE,MAAO8O,EAAI9O,YASnCuO,EAAAxb,UAAA0b,uBACNld,KAAKmd,KAAKrc,QAAQ,SAACyc,EAAmB9O,GACpC8O,EAAI9O,MAAQA,IAEdzO,KAAK6C,kBAAkBiG,iBAOjBkU,EAAAxb,UAAA6b,oCACNrd,KAAKqH,UAAYD,EAAgBpH,KAAKqH,WACtCrH,KAAK4J,OAAOK,kBAAkB,WAC5BrI,EAAK0b,oBAAoBxc,QAAQ,SAAC8c,GAChChc,EAAKyF,UAAU9H,KAAKqC,EAAKiI,UAAUK,OAAO0T,EAAUhX,WAAWC,cAAe,QAAS,SAACsD,GACtFvI,EAAK8b,QAAQvT,EAAOyT,EAAUC,cAC9Bjc,EAAKiB,kBAAkBiG,4CA5KhC3F,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,SAAU,+mCAwBVC,OAAQ,CAAC,+GACTwF,gBAAiBC,EAAAA,wBAAwBC,oDA/HzCzF,EAAAA,yBAMA8G,EAAAA,cAMAC,EAAAA,qDA0HC9G,EAAAA,sBAIAA,EAAAA,gCACAA,EAAAA,6BACAA,EAAAA,iCACAA,EAAAA,0BACAA,EAAAA,yBACAA,EAAAA,uBAEA4I,EAAAA,uBACAA,EAAAA,oCAEA9C,EAAAA,aAAYnG,KAAA,CAAC0a,kBAEb1G,EAAAA,gBAAehU,KAAA,CAACyZ,iCAEhB1N,EAAAA,aAAY/L,KAAA,CAACuZ,YC5JhBoB,GAAA,oDAQCpa,EAAAA,SAAQP,KAAA,CAAC,CACNQ,QAAS,CAACC,EAAAA,aAAciR,GACxB/Q,QAAS,CAACiZ,GAAec,GAAqBjB,GAAcD,GAAoBG,IAChF/Y,aAAc,CAAC2Y,GAAoBK,GAAec,GAAqBjB,GAAcD,GAAoBG,UAX7G","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Event as RouterEvent, NavigationEnd, PRIMARY_OUTLET, Router } from '@angular/router';\n\nimport { BehaviorSubject } from 'rxjs';\n\n/*\n *\n */\nexport interface Path {\n  data: Object;\n  params: Object;\n  url: string;\n}\n\n/*\n *\n */\nexport interface Paths extends Array<Path> {}\n\n\n/*\n *\n */\n@Injectable()\nexport class RoutingService {\n  public onChange: BehaviorSubject<Paths> = new BehaviorSubject(undefined);\n  public events: BehaviorSubject<RouterEvent> = new BehaviorSubject(undefined);\n\n  /**\n   * @method constructor\n   * @param router [description]\n   */\n  constructor(\n    private router: Router\n  ) {\n    this.init();\n  }\n\n  /**\n   * [createUrl description]\n   * @method createUrl\n   * @param route [description]\n   * @return [description]\n   */\n  private static createUrl(route: ActivatedRouteSnapshot): string {\n    const url = route.url.map(urlSegment => urlSegment.toString()).join('/');\n    return url;\n  }\n\n  /**\n   * [isChildrenSelfRoute description]\n   * @method isChildrenSelfRoute\n   * @param route [description]\n   * @return [description]\n   */\n  private static isChildrenSelfRoute(route: ActivatedRouteSnapshot): boolean {\n    route.routeConfig.children.forEach(child => {\n      if (child.path === '' && (child.component || child.loadChildren)) {\n        return true;\n      }\n    });\n\n    return false;\n  }\n\n  /**\n   * [createBreadcrumb description]\n   * @method createBreadcrumb\n   * @param route [description]\n   * @param url   [description]\n   * @return [description]\n   */\n  private static createBreadcrumb(route: ActivatedRouteSnapshot, url: string): Path {\n    let isUrl = true;\n\n    if (route.children.length !== 0 && route.firstChild.routeConfig.path) {\n      if (url !== '/' && !route.routeConfig.loadChildren && !route.routeConfig.component && !RoutingService.isChildrenSelfRoute(route)) {\n        isUrl = false;\n      }\n    }\n\n    return {\n      data: route.data,\n      params : route.params,\n      url: isUrl ? url : null\n    };\n  }\n\n\n  /**\n   * [init description]\n   * @method init\n   */\n  private init(): void {\n    this.router.events.subscribe(routeEvent => {\n      // https://github.com/angular/angular/issues/17473: event not fired anymore on load for routed component.\n      this.events.next(routeEvent);\n      if (routeEvent instanceof NavigationEnd) {\n        let route = this.router.routerState.root.snapshot,\n          tmpUrl = '',\n          url = '',\n          rootRoot = true;\n\n        const paths: Paths = [];\n\n        while (route.children.length) {\n          route = route.firstChild;\n          tmpUrl = `/${RoutingService.createUrl(route)}`;\n\n          if (route.outlet !== PRIMARY_OUTLET || (!route.routeConfig.path && !rootRoot)) {\n            continue;\n          }\n\n          rootRoot = false;\n\n          if (route.params || route.data) {\n            for (const key in route.params) {\n              if (!key) { continue; }\n              if (route.data['title']) {\n                route.data['title'] = route.data['title'].replace(`:${key}`, route.params[key]);\n                route.data['title'] = route.data['title'].replace(`:${key}`, route.params[key]);\n              }\n              if (route.data['breadcrumbs']) {\n                route.data['breadcrumbs'] = route.data['breadcrumbs'].replace(`:${key}`, route.params[key]);\n              }\n              if (route.data['description']) {\n                route.data['description'] = route.data['description'].replace(`:${key}`, route.params[key]);\n              }\n            }\n          }\n\n          if (tmpUrl === '/') {\n            paths.push(RoutingService.createBreadcrumb(route, tmpUrl));\n          } else {\n            url += tmpUrl;\n            paths.push(RoutingService.createBreadcrumb(route, url));\n          }\n        }\n\n        this.onChange.next(paths);\n      }\n    });\n  }\n}\n","import { Component, OnInit, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { RoutingService } from '../services/routing.service';\n\n/*\n *\n */\n@Component({\n  selector: 'mk-breadcrumbs',\n  template: `<ol class=\"breadcrumb\">\n  <li *ngFor=\"let breadcrumb of breadcrumbs; let first = first; let last = last\" [class.active]=\"last || !breadcrumb.url\">\n    <a *ngIf=\"breadcrumb.url\" [routerLink]=\"breadcrumb.url\">\n      <i *ngIf=\"first\" ngClass=\"{{homeIcon}}\"></i>\n      <ng-template [ngIf]=\"breadcrumb.data.breadcrumbs\">{{breadcrumb.data.breadcrumbs}}</ng-template>\n      <ng-template [ngIf]=\"!breadcrumb.data.breadcrumbs\">{{breadcrumb.data.title}}</ng-template>\n    </a>\n    <ng-template [ngIf]=\"!breadcrumb.url\">\n      <i *ngIf=\"first\" ngClass=\"{{homeIcon}}\"></i>\n      <ng-template [ngIf]=\"breadcrumb.data.breadcrumbs\">{{breadcrumb.data.breadcrumbs}}</ng-template>\n      <ng-template [ngIf]=\"!breadcrumb.data.breadcrumbs\">{{breadcrumb.data.title}}</ng-template>\n    </ng-template>\n  </li>\n</ol>\n`,\n  styles: [`.breadcrumb{float:right;background:0 0;margin-top:0;margin-bottom:0;font-size:12px;padding:7px 5px;position:absolute;top:15px;right:10px;border-radius:2px}.breadcrumb>li>a{color:#444;text-decoration:none;display:inline-block}.breadcrumb>li>a>.fa,.breadcrumb>li>a>.glyphicon,.breadcrumb>li>a>.ion{margin-right:5px}`]\n})\nexport class BreadcrumbsComponent implements OnInit, OnDestroy {\n  public breadcrumbs;\n\n  private subscription: Subscription;\n\n  @Input() public homeIcon = 'fa fa-home';\n\n  /**\n   * @method constructor\n   * @param routingService [description]\n   * @param changeDetectorRef [description]\n   */\n  constructor(\n    private routingService: RoutingService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this.subscription = this.routingService.onChange.subscribe(value => {\n      this.breadcrumbs = value;\n    });\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  exports: [BreadcrumbsComponent],\n  declarations: [BreadcrumbsComponent]\n})\nexport class BreadcrumbsModule {}\n","import { BehaviorSubject ,  Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\nimport { LayoutState } from './layout.state';\n\n/*\n *\n */\nexport class LayoutStore {\n  public readonly layoutState: Observable<LayoutState>;\n\n  private _layoutState: BehaviorSubject<LayoutState>;\n  private readonly initialLayoutState: LayoutState = {\n    isSidebarLeftCollapsed: false,\n    isSidebarLeftExpandOnOver: false,\n    isSidebarLeftMouseOver: false,\n    isSidebarLeftMini: true,\n    sidebarRightSkin: 'dark',\n    isSidebarRightCollapsed: true,\n    isSidebarRightOverContent: true,\n    layout: 'normal',\n    sidebarLeftMenu: [],\n    sidebarLeftMenuActiveUrl: '',\n    skin: 'blue'\n  };\n\n  /**\n   * @method constructor\n   * @param layoutConfig [description]\n   */\n  constructor(layoutConfig: LayoutState) {\n    if (layoutConfig) {\n      this.initialLayoutState = Object.assign(this.initialLayoutState, layoutConfig);\n    }\n    this._layoutState = new BehaviorSubject(this.initialLayoutState);\n    this.layoutState = this._layoutState.asObservable();\n  }\n\n  /**\n   * [windowInnerHeight description]\n   * @method windowInnerHeight\n   * @return [description]\n   */\n  get windowInnerHeight(): Observable<number> {\n    return <Observable<number>>this.layoutState.pipe(pluck('windowInnerHeight'), distinctUntilChanged());\n  }\n\n  /**\n   * [windowInnerWidth description]\n   * @method windowInnerWidth\n   * @return [description]\n   */\n  get windowInnerWidth(): Observable<number> {\n    return <Observable<number>>this.layoutState.pipe(pluck('windowInnerWidth'), distinctUntilChanged());\n  }\n\n  /**\n   * [isSidebarLeftCollapsed description]\n   * @return [description]\n   */\n  get isSidebarLeftCollapsed(): Observable<boolean> {\n    return <Observable<boolean>>this.layoutState.pipe(pluck('isSidebarLeftCollapsed'), distinctUntilChanged());\n  }\n\n  /**\n   * [isSidebarLeftExpandOnOver description]\n   * @method isSidebarLeftExpandOnOver\n   * @return [description]\n   */\n  get isSidebarLeftExpandOnOver(): Observable<boolean> {\n    return <Observable<boolean>>this.layoutState.pipe(pluck('isSidebarLeftExpandOnOver'), distinctUntilChanged());\n  }\n\n  /**\n   * [isSidebarLeftMouseOver description]\n   * @method isSidebarLeftMouseOver\n   * @return [description]\n   */\n  get isSidebarLeftMouseOver(): Observable<boolean> {\n    return <Observable<boolean>>this.layoutState.pipe(pluck('isSidebarLeftMouseOver'), distinctUntilChanged());\n  }\n\n  /**\n   * [isSidebarLeftMini description]\n   * @method isSidebarLeftMini\n   * @return [description]\n   */\n  get isSidebarLeftMini(): Observable<boolean> {\n    return <Observable<boolean>>this.layoutState.pipe(pluck('isSidebarLeftMini'), distinctUntilChanged());\n  }\n\n  /**\n   * [sidebarRightSkin description]\n   * @method sidebarRightSkin\n   * @return [description]\n   */\n  get sidebarRightSkin(): Observable<string> {\n    return <Observable<string>>this.layoutState.pipe(pluck('sidebarRightSkin'), distinctUntilChanged());\n  }\n\n  /**\n   * [isSidebarRightCollapsed description]\n   * @return [description]\n   */\n  get isSidebarRightCollapsed(): Observable<boolean> {\n    return <Observable<boolean>>this.layoutState.pipe(pluck('isSidebarRightCollapsed'), distinctUntilChanged());\n  }\n\n  /**\n   * [isSidebarRightOverContent description]\n   * @method isSidebarRightOverContent\n   * @return [description]\n   */\n  get isSidebarRightOverContent(): Observable<boolean> {\n    return <Observable<boolean>>this.layoutState.pipe(pluck('isSidebarRightOverContent'), distinctUntilChanged());\n  }\n\n  /**\n   * [sidebarLeftMenu description]\n   * @method sidebarLeftMenu\n   * @return [description]\n   */\n  get sidebarLeftMenu(): Observable<Array<any>> {\n    return <Observable<Array<any>>>this.layoutState.pipe(pluck('sidebarLeftMenu'), distinctUntilChanged());\n  }\n\n  /**\n   * [sidebarLeftMenuActiveUrl description]\n   * @method sidebarLeftMenuActiveUrl\n   * @return [description]\n   */\n  get sidebarLeftMenuActiveUrl(): Observable<string> {\n    return <Observable<string>>this.layoutState.pipe(pluck('sidebarLeftMenuActiveUrl'), distinctUntilChanged());\n  }\n\n  /**\n   * [sidebarLeftElementHeight description]\n   * @method sidebarLeftElementHeight\n   * @return [description]\n   */\n  get sidebarLeftElementHeight(): Observable<number> {\n    return <Observable<number>>this.layoutState.pipe(pluck('sidebarLeftElementHeight'), distinctUntilChanged());\n  }\n\n  /**\n   * [layoutType description]\n   * @method layoutType\n   * @return [description]\n   */\n  get layout(): Observable<string> {\n    return <Observable<string>>this.layoutState.pipe(pluck('layout'), distinctUntilChanged());\n  }\n\n  /**\n   * [skin description]\n   * @method skin\n   * @return [description]\n   */\n  get skin(): Observable<string> {\n    return <Observable<string>>this.layoutState.pipe(pluck('skin'), distinctUntilChanged());\n  }\n\n  /**\n   * [wrapperClasses description]\n   * @method wrapperClasses\n   * @return [description]\n   */\n  get wrapperClasses(): Observable<string> {\n    return <Observable<string>>this.layoutState.pipe(pluck('wrapperClasses'), distinctUntilChanged());\n  }\n\n  /**\n   * [sidebarLeftCollapsed description]\n   * @method sidebarLeftCollapsed\n   * @param value [description]\n   */\n  public sidebarLeftCollapsed(value?: boolean): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {isSidebarLeftCollapsed: value})\n    );\n  }\n\n  /**\n   * [sidebarLeftExpandOnOver description]\n   * @method sidebarLeftExpandOnOver\n   * @param value [description]\n   */\n  public sidebarLeftExpandOnOver(value?: boolean): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {isSidebarLeftExpandOnOver: value})\n    );\n  }\n\n  /**\n   * [setSidebarLeftElementHeight description]\n   * @method setSidebarLeftElementHeight\n   * @param value [description]\n   */\n  public setSidebarLeftElementHeight(value: number): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {sidebarLeftElementHeight: value})\n    );\n  }\n\n  /**\n   * [setSidebarRightSkin description]\n   * @method setSidebarRightSkin\n   * @param value [description]\n   */\n  public setSidebarRightSkin(value?: string): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {sidebarRightSkin: value})\n    );\n  }\n\n  /**\n   * [sidebarLeftMouseOver description]\n   * @method sidebarLeftMouseOver\n   * @param value [description]\n   */\n  public sidebarLeftMouseOver(value?: boolean): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {isSidebarLeftMouseOver: value})\n    );\n  }\n\n  /**\n   * [sidebarLeftMini description]\n   * @method sidebarLeftMini\n   * @param value [description]\n   */\n  public sidebarLeftMini(value?: boolean): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {isSidebarLeftMini: value})\n    );\n  }\n\n  /**\n   * [sidebarRightCollapsed description]\n   * @method sidebarRightCollapsed\n   * @param value [description]\n   */\n  public sidebarRightCollapsed(value?: boolean): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {isSidebarRightCollapsed: value})\n    );\n  }\n\n  /**\n   * [sidebarRightOverContent description]\n   * @method sidebarRightOverContent\n   * @param value [description]\n   */\n  public sidebarRightOverContent(value?: boolean): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {isSidebarRightOverContent: value})\n    );\n  }\n\n  /**\n   * [setSidebarLeftMenu description]\n   * @method setSidebarLeftMenu\n   * @param value [description]\n   */\n  public setSidebarLeftMenu(value: Array<any>): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {sidebarLeftMenu: value})\n    );\n  }\n\n  /**\n   * [setSidebarLeftMenuActiveUrl description]\n   * @method setSidebarLeftMenuActiveUrl\n   * @param value [description]\n   */\n  public setSidebarLeftMenuActiveUrl(value: string): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {sidebarLeftMenuActiveUrl: value})\n    );\n  }\n\n  /**\n   * [setLayout description]\n   * @method setLayout\n   * @param value [description]\n   */\n  public setLayout(value: string): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {layout: value})\n    );\n  }\n\n  /**\n   * [setSkin description]\n   * @method setSkin\n   * @param value [description]\n   */\n  public setSkin(value: string): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {skin: value})\n    );\n  }\n\n  /**\n   * [setWrapperClasses description]\n   * @method setWrapperClasses\n   * @param value [description]\n   */\n  public setWrapperClasses(value: string): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {wrapperClasses: value})\n    );\n  }\n\n  /**\n   * [setWindowInnerHeight description]\n   * @method setWindowInnerHeight\n   * @param value [description]\n   */\n  public setWindowInnerHeight(value: number): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {windowInnerHeight: value})\n    );\n  }\n\n  /**\n   * [setWindowInnerWidth description]\n   * @method setWindowInnerWidth\n   * @param value [description]\n   */\n  public setWindowInnerWidth(value: number): void {\n    this._layoutState.next(\n      Object.assign(this._layoutState.value, {windowInnerWidth: value})\n    );\n  }\n}\n","import { Injectable, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class SidebarRightService {\n  public elementRef: ElementRef;\n\n  /**\n   * [scrollHeight description]\n   * @method scrollHeight\n   * @return [description]\n   */\n  get scrollHeight(): number {\n    return this.elementRef ? this.elementRef.nativeElement.scrollHeight : null;\n  }\n}\n","import { Injectable, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class HeaderService {\n  public elementRef: ElementRef;\n\n  /**\n   * [offsetHeight description]\n   * @method offsetHeight\n   * @return [description]\n   */\n  public get offsetHeight(): number {\n    return this.elementRef.nativeElement.offsetHeight;\n  }\n}\n","import { Injectable, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class FooterService {\n  public elementRef: ElementRef;\n\n  /**\n   * [offsetHeight description]\n   * @method offsetHeight\n   * @return [description]\n   */\n  public get offsetHeight(): number {\n    return this.elementRef.nativeElement.offsetHeight;\n  }\n}\n","import { Subscription } from 'rxjs';\n\n\n/**\n * [throttle description]\n * @method throttle\n * @param callback [description]\n * @param delay    [description]\n * @return [description]\n */\nexport function throttle(callback: Function, delay: number): (args: Array<any>) => void {\n  let timeout = null;\n  return (...args) => {\n    if (!timeout) {\n      timeout = setTimeout(() => {\n        callback.call(this, ...args);\n        timeout = null;\n      }, delay);\n    }\n  };\n}\n\n\n/**\n * [removeSubscriptions description]\n * @method removeSubscriptions\n */\nexport function removeSubscriptions(subscriptions): Array<Subscription> {\n  if (subscriptions) {\n    subscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n  }\n  return [];\n}\n\n/**\n * [removeListeners description]\n * @method removeListeners\n */\nexport function removeListeners(listeners): Array<Function> {\n  if (listeners) {\n    listeners.forEach((listener: Function) => {\n      listener();\n    });\n  }\n  return [];\n}\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, Event as RouterEvent } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport { LayoutStore } from '../layout.store';\n\nimport { RoutingService } from '../../services/routing.service';\nimport { SidebarRightService } from '../sidebar-right/sidebar-right.service';\nimport { HeaderService } from '../header/header.service';\nimport { FooterService } from '../footer/footer.service';\n\nimport { removeSubscriptions } from '../../helpers';\n\n@Component({\n  selector: 'mk-layout-content',\n  template: `<div class=\"content-wrapper\" [style.min-height.px]=\"heightStyle\">\n  <div #contentInnerElement class=\"content-inner\">\n    <ng-content select=\"[mk-layout-content-before-header]\"></ng-content>\n    <section *ngIf=\"header || description\" class=\"content-header\">\n      <h1>\n        {{header}}\n        <small *ngIf=\"description\">{{description}}</small>\n      </h1>\n      <mk-breadcrumbs></mk-breadcrumbs>\n    </section>\n    <ng-content select=\"[mk-layout-content-after-header]\"></ng-content>\n    <section class=\"content\">\n      <ng-content></ng-content>\n    </section>\n  </div>\n</div>\n`,\n  styles: [`:host{display:block}.content-wrapper{position:relative}`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnInit, OnDestroy {\n  public description: string;\n  public header: string;\n  public heightStyle: number;\n  public sidebarLeftHeight: number;\n  public windowInnerHeight: number;\n\n  private layout: string;\n  private titleTag: string;\n  private navigationEnd: boolean;\n  private subscriptions = [];\n\n  @ViewChild('contentInnerElement') private contentInnerElement: ElementRef;\n\n  /**\n   * @method constructor\n   * @param layoutStore\n   * @param routingService\n   * @param titleService\n   * @param elementRef\n   * @param changeDetectorRef\n   * @param sidebarRightService\n   * @param headerService\n   * @param footerService\n   * @param router\n   */\n  constructor(\n    private layoutStore: LayoutStore,\n    private routingService: RoutingService,\n    private titleService: Title,\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n    private sidebarRightService: SidebarRightService,\n    private headerService: HeaderService,\n    private footerService: FooterService,\n    private router: Router\n  ) {}\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this.titleTag = this.titleService.getTitle();\n\n    this.subscriptions.push(this.routingService.onChange.subscribe((value: any) => {\n      if (value && value[value.length - 1]) {\n        this.titleService.setTitle(this.getTitle(value[value.length - 1].data['title']));\n        this.header = value[value.length - 1].data['title'];\n        this.description = value[value.length - 1].data['description'];\n      }\n      this.changeDetectorRef.markForCheck();\n    }));\n\n    this.subscriptions.push(this.router.events.subscribe((routeEvent: RouterEvent) => {\n      if (routeEvent instanceof NavigationStart) {\n        this.navigationEnd = false;\n      }\n      if (routeEvent instanceof NavigationEnd) {\n        this.navigationEnd = true;\n        this.setContentMinHeight();\n      }\n    }));\n\n    this.subscriptions.push(this.layoutStore.sidebarLeftElementHeight.subscribe((value: number) => {\n      this.sidebarLeftHeight = value;\n      this.setContentMinHeight();\n    }));\n\n    this.subscriptions.push(this.layoutStore.layout.subscribe((value: string) => {\n      this.layout = value;\n      this.setContentMinHeight();\n    }));\n\n    this.subscriptions.push(this.layoutStore.windowInnerHeight.subscribe((value: number) => {\n      this.windowInnerHeight = value;\n      this.setContentMinHeight();\n    }));\n    this.heightStyle = this.windowInnerHeight;\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    this.subscriptions = removeSubscriptions(this.subscriptions);\n  }\n\n  /**\n   * [scrollHeight description]\n   * @method scrollHeight\n   * @return [description]\n   */\n  public get scrollHeight(): number {\n    return this.contentInnerElement.nativeElement.scrollHeight;\n  }\n\n  /**\n   * [getTitle description]\n   * @method getTitle\n   * @param title [description]\n   * @return [description]\n   */\n  private getTitle(title: string): string {\n    return title ? `${title} - ${this.titleTag}` : this.titleTag;\n  }\n\n  /**\n   * [setMinHeight description]\n   * @method setMinHeight\n   */\n  private setContentMinHeight(): void {\n    if (this.navigationEnd) {\n      let heightStyle;\n\n      const headerFooterOffsetHeight = this.headerService.offsetHeight + this.footerService.offsetHeight;\n\n      if (this.layout === 'fixed') {\n        heightStyle = this.windowInnerHeight - this.footerService.offsetHeight;\n      } else {\n        const sidebarRight =\n          this.sidebarRightService.scrollHeight ?\n            this.sidebarRightService.scrollHeight - this.headerService.offsetHeight : 0;\n\n        heightStyle = Math.max(\n          this.windowInnerHeight - headerFooterOffsetHeight,\n          this.sidebarLeftHeight - this.headerService.offsetHeight,\n          sidebarRight\n        );\n      }\n\n      if (heightStyle && heightStyle !== this.heightStyle) {\n        if (this.scrollHeight > heightStyle) {\n          heightStyle = null;\n        }\n        this.heightStyle = heightStyle;\n        this.changeDetectorRef.detectChanges();\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { BreadcrumbsModule } from '../../breadcrumbs/breadcrumbs.module';\nimport { ContentComponent } from './content.component';\n\n@NgModule({\n    imports: [CommonModule, RouterModule, BreadcrumbsModule],\n    exports: [ContentComponent],\n    declarations: [ContentComponent]\n})\nexport class ContentModule {}\n","import { Component, ContentChild, OnInit, ViewChild, TemplateRef, ElementRef } from '@angular/core';\n\nimport { FooterService } from './footer.service';\n\n/**\n * Footer Left\n */\n@Component({\n  selector: 'mk-layout-footer-left',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\n})\nexport class FooterLeftComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n/**\n * Footer Right\n */\n@Component({\n  selector: 'mk-layout-footer-right',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\n})\nexport class FooterRightComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n@Component({\n  selector: 'mk-layout-footer',\n  template: `<footer class=\"main-footer\">\n  <div class=\"pull-right hidden-xs\">\n    <ng-template [ngTemplateOutlet]=\"footerRightComponent?.templateRef\"></ng-template>\n  </div>\n  <ng-template [ngTemplateOutlet]=\"footerLeftComponent?.templateRef\"></ng-template>\n</footer>\n`,\n  styles: [`:host{display:block}`]\n})\nexport class FooterComponent implements OnInit {\n  @ContentChild(FooterLeftComponent) public footerLeftComponent: FooterLeftComponent;\n  @ContentChild(FooterRightComponent) public footerRightComponent: FooterRightComponent;\n\n  constructor(\n    private elementRef: ElementRef,\n    private footerService: FooterService\n  ) {}\n\n  ngOnInit() {\n    this.footerService.elementRef = this.elementRef;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FooterComponent, FooterLeftComponent, FooterRightComponent } from './footer.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [FooterComponent, FooterLeftComponent, FooterRightComponent],\n    declarations: [FooterComponent, FooterLeftComponent, FooterRightComponent]\n})\nexport class FooterModule { }\n","import {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport {LayoutStore} from '../layout.store';\n\nimport {HeaderService} from './header.service';\n\nimport {removeListeners, removeSubscriptions} from '../../helpers';\n\n/**\n * Header Logo\n */\n@Component({\n  selector: 'mk-layout-header-logo',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\n})\nexport class HeaderLogoComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n/**\n * Header Logo Mini\n */\n@Component({\n  selector: 'mk-layout-header-logo-mini',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\n})\nexport class HeaderLogoMiniComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n/**\n * Header\n */\n@Component({\n  selector: 'mk-layout-header',\n  template: `<header #headerElement class=\"main-header\">\n  <a href=\"/\" class=\"logo\">\n    <span class=\"logo-mini\"><ng-template [ngTemplateOutlet]=\"headerLogoMiniComponent?.templateRef\"></ng-template></span>\n    <span class=\"logo-lg\"><ng-template [ngTemplateOutlet]=\"headerLogoComponent?.templateRef\"></ng-template></span>\n  </a>\n  <nav class=\"navbar navbar-static-top\">\n    <a *ngIf=\"isSidebarLeftToggle\" #sidebarLeftToggleElement href=\"#\" class=\"sidebar-toggle\">\n      <span class=\"sr-only\">Toggle navigation</span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n      <span class=\"icon-bar\"></span>\n    </a>\n    <div *ngIf=\"isSidebarRightToggle\" class=\"sidebar-right-toggle\">\n      <a #sidebarRightToggleElement href=\"#\"><i class=\"fa fa-gears\"></i></a>\n    </div>\n    <ng-content></ng-content>\n  </nav>\n</header>\n`,\n  styles: [`:host{display:block}.sidebar-right-toggle{float:right}.sidebar-right-toggle a{padding:15px;display:block;line-height:20px;cursor:pointer}`]\n})\nexport class HeaderComponent implements AfterViewInit, OnDestroy {\n  private isSidebarLeftCollapsed: boolean;\n  private isSidebarRightCollapsed: boolean;\n  private listeners = [];\n  private subscriptions = [];\n\n  @Input() isSidebarLeftToggle = true;\n  @Input() isSidebarRightToggle = true;\n\n  @ContentChild(HeaderLogoComponent) public headerLogoComponent: HeaderLogoComponent;\n  @ContentChild(HeaderLogoMiniComponent) public headerLogoMiniComponent: HeaderLogoMiniComponent;\n\n  @ViewChild('headerElement') private headerElement: ElementRef;\n  @ViewChild('sidebarLeftToggleElement') private sidebarLeftToggleElement: ElementRef;\n  @ViewChild('sidebarRightToggleElement') private sidebarRightToggleElement: ElementRef;\n\n  /**\n   * @method constructor\n   * @param layoutStore [description]\n   * @param ngZone      [description]\n   * @param renderer2   [description]\n   * @param elementRef   [description]\n   * @param headerService   [description]\n   */\n  constructor(\n    private layoutStore: LayoutStore,\n    private ngZone: NgZone,\n    private renderer2: Renderer2,\n    private elementRef: ElementRef,\n    private headerService: HeaderService\n  ) {}\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    this.headerService.elementRef = this.headerElement;\n\n    if (this.sidebarLeftToggleElement) {\n      this.subscriptions.push(this.layoutStore.isSidebarLeftCollapsed.subscribe((value: boolean) => {\n        this.isSidebarLeftCollapsed = value;\n      }));\n      this.ngZone.runOutsideAngular(() => {\n        this.listeners.push(this.renderer2.listen(this.sidebarLeftToggleElement.nativeElement, 'click', (event: Event) => {\n          event.preventDefault();\n          this.layoutStore.sidebarLeftCollapsed(!this.isSidebarLeftCollapsed);\n        }));\n      });\n    }\n    if (this.sidebarRightToggleElement) {\n      this.subscriptions.push(this.layoutStore.isSidebarRightCollapsed.subscribe((value: boolean) => {\n        this.isSidebarRightCollapsed = value;\n      }));\n      this.ngZone.runOutsideAngular(() => {\n        this.listeners.push(this.renderer2.listen(this.sidebarRightToggleElement.nativeElement, 'click', (event: Event) => {\n          event.preventDefault();\n          this.layoutStore.sidebarRightCollapsed(!this.isSidebarRightCollapsed);\n        }));\n      });\n    }\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    this.listeners = removeListeners(this.listeners);\n    this.subscriptions = removeSubscriptions(this.subscriptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent } from './header.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent],\n    declarations: [HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent]\n})\nexport class HeaderModule { }\n","import { Directive, Input, Output, ElementRef, EventEmitter, Renderer2, NgZone, AfterContentInit, OnInit, OnDestroy } from '@angular/core';\nimport { AnimationEvent } from './animations.interface';\n/*\n *\n */\n@Directive({\n  selector: '[collapseAnimation]'\n})\nexport class CollapseAnimationDirective implements OnInit, AfterContentInit, OnDestroy {\n  private firstStart = true;\n  private isCollapsed: boolean;\n  private lastIsCollapsed: boolean;\n  private transitioning: boolean;\n  private listener: Function;\n\n  @Input() public collapseAnimationDuration = 350;\n  @Input() public collapseAnimationTiming: string;\n  @Input('collapseAnimation') public set _isCollapsed(value: boolean) {\n    this.lastIsCollapsed = this.isCollapsed;\n    this.isCollapsed = value;\n    if (!this.firstStart) {\n      this.emit('start');\n      if (value) {\n        this.collapse();\n      } else if (value === false) {\n        this.unCollapse();\n      }\n    }\n  }\n\n  @Output('collapseAnimation.start') public startEventEmitter = new EventEmitter();\n  @Output('collapseAnimation.done') public doneEventEmitter = new EventEmitter();\n\n\n  /**\n   * @method constructor\n   * @param elementRef [description]\n   * @param ngZone     [description]\n   * @param renderer2  [description]\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private ngZone: NgZone,\n    private renderer2: Renderer2\n  ) {}\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    if (this.collapseAnimationDuration && this.collapseAnimationDuration !== 350) {\n      this.renderer2.setStyle(this.elementRef.nativeElement, 'transition-duration', `${this.collapseAnimationDuration}ms`);\n    }\n    if (this.collapseAnimationTiming) {\n      this.renderer2.setStyle(this.elementRef.nativeElement, 'transition-timing-function', this.collapseAnimationTiming);\n    }\n  }\n\n  /**\n   * @method ngAfterContentInit\n   */\n  ngAfterContentInit() {\n    this.emit('start');\n    if (this.isCollapsed) {\n      this.renderer2.setStyle(this.elementRef.nativeElement, 'display', 'none');\n      this.renderer2.addClass(this.elementRef.nativeElement, 'collapsing');\n    }\n    this.emit('done');\n    this.firstStart = false;\n\n    this.subscriptions();\n  }\n\n  /**\n   * [ngOnDestroy description]\n   * @method ngOnDestroy\n   * @return [description]\n   */\n  ngOnDestroy() {\n    if (this.listener) {\n      this.listener();\n    }\n  }\n\n  /**\n   * [subscriptions description]\n   * @method subscriptions\n   */\n  private subscriptions(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.listener = this.renderer2.listen(this.elementRef.nativeElement, 'transitionend', () => {\n        if (!this.isCollapsed) {\n          this.renderer2.removeClass(this.elementRef.nativeElement, 'un-collapse');\n          this.renderer2.removeClass(this.elementRef.nativeElement, 'collapsing');\n        } else {\n          this.renderer2.setStyle(this.elementRef.nativeElement, 'display', 'none');\n        }\n        requestAnimationFrame(() => {\n          this.renderer2.removeStyle(this.elementRef.nativeElement, 'height');\n          this.emit('done');\n          this.transitioning = false;\n        });\n      });\n    });\n  }\n\n\n  /**\n   * [unCollapse description]\n   * @method unCollapse\n   */\n  private unCollapse(): void {\n    this.transitioning = true;\n    this.renderer2.addClass(this.elementRef.nativeElement, 'un-collapse');\n    this.renderer2.removeStyle(this.elementRef.nativeElement, 'display');\n    this.renderer2.setStyle(this.elementRef.nativeElement, 'height', `${this.elementRef.nativeElement.scrollHeight}px`);\n  }\n\n  /**\n   * [collapse description]\n   * @method collapse\n   */\n  private collapse(): void {\n    requestAnimationFrame(() => {\n      if (!this.transitioning) {\n        this.renderer2.setStyle(this.elementRef.nativeElement, 'height', `${this.elementRef.nativeElement.offsetHeight}px`);\n        this.renderer2.addClass(this.elementRef.nativeElement, 'collapsing');\n      }\n      this.transitioning = true;\n      requestAnimationFrame(() => {\n        this.renderer2.setStyle(this.elementRef.nativeElement, 'height', `0px`);\n      });\n    });\n  }\n\n  private emit(phaseName: string): void {\n    const event: AnimationEvent = {\n      element: this.elementRef.nativeElement,\n      fromState: this.lastIsCollapsed === undefined ? 'void' : this.lastIsCollapsed ? '1' : '0',\n      phaseName: phaseName,\n      toState: this.isCollapsed === undefined ? 'void' : this.isCollapsed ? '1' : '0',\n      totalTime: this.collapseAnimationDuration,\n      triggerName: 'collapseAnimation'\n    };\n\n    if (phaseName === 'done') {\n      this.doneEventEmitter.emit(event);\n    } else if (phaseName === 'start') {\n      this.startEventEmitter.emit(event);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CollapseAnimationDirective } from './animations.directive';\n\n\n@NgModule({\n    exports: [CollapseAnimationDirective],\n    declarations: [CollapseAnimationDirective]\n})\nexport class AnimationsModule {}\n","import { Directive, Input, ElementRef } from '@angular/core';\n\n/*\n *\n */\n@Directive({\n  selector: '[mkMenuToggle]'\n})\nexport class SidebarLeftToggleDirective {\n  @Input('mkMenuToggle') item;\n\n  /**\n   * @method constructor\n   * @param elementRef [description]\n   */\n  constructor(\n    public elementRef: ElementRef\n  ) {}\n}\n","import { Injectable, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class WrapperService {\n  public wrapperElementRef: ElementRef;\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {Event as RouterEvent, NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\n\nimport {RoutingService} from '../../services/routing.service';\n\nimport {WrapperService} from '../wrapper/wrapper.service';\nimport {HeaderService} from '../header/header.service';\n\nimport {LayoutStore} from '../layout.store';\n\nimport {AnimationEvent} from '../../animations/animations.interface';\nimport {removeListeners, removeSubscriptions} from '../../helpers';\n\nimport {SidebarLeftToggleDirective} from './sidebar-left.directive';\n\nexport interface Item {\n  id: number;\n  parentId: number;\n  label: string;\n  route?: string;\n  iconClasses?: string;\n  children?: Array<Item>;\n  isActive?: boolean;\n  isCollapsed?: boolean;\n  disableCollapse?: boolean;\n}\n\nexport type Items = Array<Item>;\n\n@Component({\n  selector: 'mk-layout-sidebar-left',\n  template: `<aside class=\"main-sidebar\">\n  <section class=\"sidebar\" #sidebarElement [style.height.px]=\"sidebarHeight\" [style.overflow]=\"sidebarOverflow\">\n    <ng-content></ng-content>\n  \t<ul class=\"sidebar-menu\">\n      <ng-container *ngFor=\"let item of menu\">\n        <ng-container *ngTemplateOutlet=\"sidebarInner; context: {item: item}\"></ng-container>\n      </ng-container>\n  \t</ul>\n  </section>\n</aside>\n\n<ng-template #sidebarInner let-item=\"item\">\n  <li [class.active]=\"item.isActive\" [class.header]=\"item.separator\" [class.menu-open]=\"!item.isCollapsed\">\n    <span *ngIf=\"item.separator\">{{item.label}}</span>\n    <a *ngIf=\"!item.separator && item.route\" [routerLink]=\"item.route\">\n    \t<i [class]=\"getIconClasses(item)\"></i><span>{{item.label}}</span>\n    \t<span *ngIf=\"item.children || item.pullRights\" class=\"pull-right-container\">\n    \t\t<span *ngFor=\"let rightItem of item.pullRights\" class=\"pull-right {{rightItem.classes}}\">{{rightItem.text}}</span>\n    \t  <i *ngIf=\"!item.pullRights\" class=\"fa fa-angle-left pull-right\"></i>\n    \t</span>\n    </a>\n    <a *ngIf=\"!item.separator && !item.route\" href=\"#\" [mkMenuToggle]=\"item\">\n    \t<i [class]=\"getIconClasses(item)\"></i><span>{{item.label}}</span>\n    \t<span *ngIf=\"item.children || item.pullRights\" class=\"pull-right-container\">\n    \t\t<span *ngFor=\"let rightItem of item.pullRights\" class=\"pull-right {{rightItem.classes}}\">{{rightItem.text}}</span>\n    \t  <i *ngIf=\"!item.pullRights\" class=\"fa fa-angle-left pull-right\"></i>\n    \t</span>\n    </a>\n    <ul *ngIf=\"item.children\" [collapseAnimation]=\"item.isCollapsed\" (collapseAnimation.start)=\"visibilityStateStart($event)\" class=\"treeview-menu\">\n      <ng-container *ngFor=\"let item of item.children\">\n        <ng-container *ngTemplateOutlet=\"sidebarInner; context: {item: item}\"></ng-container>\n      </ng-container>\n    </ul>\n  </li>\n</ng-template>\n`,\n  styles: [`.treeview-menu.collapse{display:none}.treeview-menu,.treeview-menu.collapse.in{display:block}`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarLeftComponent implements OnInit, AfterViewInit, OnDestroy {\n  public menu: Array<any>;\n  public sidebarHeight: number;\n  public sidebarOverflow: string;\n\n  private layout: string;\n  private isSidebarLeftCollapsed: boolean;\n  private isSidebarLeftExpandOnOver: boolean;\n  private isSidebarLeftMouseOver: boolean;\n  private windowInnerWidth: number;\n  private windowInnerHeight: number;\n  private collapsedItems: Items = [];\n  private activatedItems: Items = [];\n  private toggleListeners: Array<Function> = [];\n  private listeners: Array<Function> = [];\n  private itemsByIds: {[propKey: number]: Item} = {};\n  private runningAnimations = 0;\n  private subscriptions = [];\n  private activeUrl: String;\n  private initialized: boolean;\n\n  @ViewChild('sidebarElement') public sidebarElement: ElementRef;\n\n  @ViewChildren(SidebarLeftToggleDirective) public sidebarLeftToggleDirectives: QueryList<SidebarLeftToggleDirective>;\n\n  /**\n   * @method constructor\n   * @param  changeDetectorRef  [description]\n   * @param  layoutStore        [description]\n   * @param  ngZone             [description]\n   * @param  renderer2          [description]\n   * @param  router             [description]\n   * @param  routingService     [description]\n   * @param  wrapperService     [description]\n   * @param  headerService      [description]\n   */\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private layoutStore: LayoutStore,\n    private ngZone: NgZone,\n    private renderer2: Renderer2,\n    private router: Router,\n    private routingService: RoutingService,\n    private wrapperService: WrapperService,\n    private headerService: HeaderService\n  ) {}\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this.subscriptions.push(this.layoutStore.sidebarLeftMenu.subscribe(value => {\n      this.menu = value;\n      this.monkeyPatchMenu(this.menu);\n      if (this.initialized) {\n        this.setMenuListeners(this.activeUrl);\n        this.setSidebarListeners();\n        this.setMenuTogglesListeners();\n      }\n      this.initialized = true;\n    }));\n    this.subscriptions.push(this.layoutStore.sidebarLeftMenuActiveUrl.subscribe(value => {\n      this.activeUrl = value;\n      this.setMenuListeners(value);\n    }));\n    this.subscriptions.push(this.routingService.events.subscribe((event: RouterEvent) => {\n      if (event instanceof NavigationEnd) {\n        this.activeUrl = event.url;\n        this.setMenuListeners(event.url);\n      }\n    }));\n\n    this.setSidebarListeners();\n  }\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    this.setMenuTogglesListeners();\n    this.checkMenuWithoutChildren();\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    this.subscriptions = removeSubscriptions(this.subscriptions);\n    this.listeners = removeListeners(this.listeners);\n    this.toggleListeners = removeListeners(this.toggleListeners);\n  }\n\n  /**\n   * [setSidebarListeners description]\n   * @method setSidebarListeners\n   */\n  setSidebarListeners(): void {\n    this.subscriptions.push(this.layoutStore.layout.subscribe((value: string) => {\n      this.layout = value;\n      this.setSidebarHeight();\n    }));\n\n    this.subscriptions.push(this.layoutStore.windowInnerHeight.subscribe((value: number) => {\n      this.windowInnerHeight = value;\n      this.setSidebarHeight();\n    }));\n\n    this.subscriptions.push(this.layoutStore.sidebarLeftMenu.subscribe(() => {\n      this.changeDetectorRef.detectChanges();\n    }));\n\n    this.ngZone.runOutsideAngular(() => {\n      this.listeners.push(this.renderer2.listen(this.sidebarElement.nativeElement, 'mouseenter', () => {\n        this.layoutStore.sidebarLeftMouseOver(true);\n      }));\n      this.listeners.push(this.renderer2.listen(this.sidebarElement.nativeElement, 'mouseleave', () => {\n        this.layoutStore.sidebarLeftMouseOver(false);\n      }));\n    });\n\n    this.subscriptions.push(this.layoutStore.windowInnerWidth.subscribe((value: number) => {\n      this.windowInnerWidth = value;\n      if (!this.isSidebarLeftCollapsed && this.windowInnerWidth <= 767) {\n        this.layoutStore.sidebarLeftCollapsed(true);\n      } else if (this.windowInnerWidth > 767 && this.isSidebarLeftCollapsed && !this.isSidebarLeftExpandOnOver) {\n        this.layoutStore.sidebarLeftCollapsed(false);\n      }\n    }));\n\n    this.subscriptions.push(this.layoutStore.isSidebarLeftMouseOver.subscribe((value: boolean) => {\n      this.isSidebarLeftMouseOver = value;\n      if (this.isSidebarLeftExpandOnOver) {\n        this.layoutStore.sidebarLeftCollapsed(!value);\n      }\n    }));\n\n    this.subscriptions.push(this.layoutStore.isSidebarLeftExpandOnOver.subscribe((value: boolean) => {\n      this.isSidebarLeftExpandOnOver = value;\n      if (this.windowInnerWidth > 767 && this.isSidebarLeftCollapsed !== undefined) {\n        this.layoutStore.sidebarLeftCollapsed(value);\n      }\n    }));\n\n    this.subscriptions.push(this.layoutStore.isSidebarLeftCollapsed.subscribe((value: boolean) => {\n      this.isSidebarLeftCollapsed = value;\n      if (this.windowInnerWidth <= 767) {\n        if (value) {\n          this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-open');\n        } else {\n          this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-open');\n        }\n      } else {\n        if (this.isSidebarLeftExpandOnOver && !this.isSidebarLeftMouseOver && !value) {\n          this.layoutStore.sidebarLeftExpandOnOver(false);\n        }\n        if (value) {\n          this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-collapse');\n          if (this.isSidebarLeftExpandOnOver) {\n            this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-expanded-on-hover');\n          }\n        } else {\n          this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-collapse');\n          if (this.isSidebarLeftExpandOnOver) {\n            this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-expanded-on-hover');\n          }\n        }\n      }\n    }));\n\n    this.subscriptions.push(this.layoutStore.isSidebarLeftMini.subscribe((value: boolean) => {\n      if (value) {\n        this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-mini');\n      } else {\n        this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-mini');\n      }\n    }));\n  }\n\n  /**\n   * [setMenuListeners description]\n   * @method setMenuListeners\n   */\n  setMenuListeners(url): void {\n    if (url === '/') {\n      this.activeItems(url);\n      this.changeDetectorRef.detectChanges();\n    } else {\n      const primaryOutlet = this.router.parseUrl(url).root.children[PRIMARY_OUTLET];\n      if (primaryOutlet) {\n        this.activeItems(primaryOutlet.toString());\n        this.changeDetectorRef.detectChanges();\n      }\n    }\n    if (this.windowInnerWidth <= 767 || this.isSidebarLeftExpandOnOver) {\n      this.layoutStore.sidebarLeftCollapsed(true);\n    }\n  }\n\n  /**\n   * [getIconClasses description]\n   * @method getIconClasses\n   * @param item [description]\n   * @return [description]\n   */\n  public getIconClasses(item: Item): string {\n    if (item.iconClasses || item.iconClasses === '') {\n      return item.iconClasses;\n    } else {\n      return 'fa fa-circle-o';\n    }\n  }\n\n  /**\n   * [visibilityStateStart description]\n   * @method visibilityStateStart\n   * @param event [description]\n   */\n  public visibilityStateStart(event: AnimationEvent): void {\n    this.runningAnimations ++;\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.runningAnimations --;\n        if (!this.runningAnimations) {\n          this.layoutStore.setSidebarLeftElementHeight(this.sidebarElement.nativeElement.offsetHeight);\n        }\n      }, event.totalTime);\n    });\n  }\n\n  /**\n   * [uncollapseItemParents description]\n   * @method uncollapseItemParents\n   * @param item           [description]\n   * @param isActive       [description]\n   */\n  private uncollapseItemParents(item: Item, isActive = false): void {\n    if (isActive) {\n      item.isActive = true;\n      this.activatedItems.push(item);\n    }\n    item.isCollapsed = false;\n    this.collapsedItems.push(item);\n    if (item.parentId) {\n      this.uncollapseItemParents(this.itemsByIds[item.parentId], isActive);\n    }\n  }\n\n  /**\n   * [findItemsByUrl description]\n   * @method findItemsByUrl\n   * @param url   [description]\n   * @param items [description]\n   * @param returnItems [description]\n   * @return [description]\n   */\n  private findItemsByUrl(url: string, items: Items, returnItems: Items = []): Items {\n    items.forEach((item: Item) => {\n      if (item.route === url) {\n        returnItems.push(item);\n      } else if (item.children) {\n        this.findItemsByUrl(url, item.children, returnItems);\n      }\n    });\n    return returnItems;\n  }\n\n  /**\n   * [activeItems description]\n   * @method activeItems\n   * @param url [description]\n   */\n  private activeItems(url: string): void {\n    this.activatedItems.forEach((item: Item) => {\n      item.isActive = false;\n    });\n    this.activatedItems = [];\n\n    this.collapsedItems.forEach((item: Item) => {\n      item.isActive = false;\n      item.isCollapsed = true;\n    });\n    this.collapsedItems = [];\n\n    const items = this.findItemsByUrl(url, this.menu);\n    items.forEach(item => {\n      item.isActive = true;\n      this.uncollapseItemParents(item, true);\n      this.activatedItems.push(item);\n    });\n  }\n\n  /**\n   * [monkeyPatchMenu description]\n   * @method monkeyPatchMenu\n   * @param items    [description]\n   * @param parentId [description]\n   */\n  private monkeyPatchMenu(items: Items, parentId?: number): void {\n    items.forEach((item: Item, index: number) => {\n      item.id = parentId ? Number(parentId + '' + index) : index;\n      if (parentId) {\n        item.parentId = parentId;\n      }\n      if (!item.disableCollapse) {\n        item.isCollapsed = true;\n      }\n      item.isActive = false;\n      if (parentId || item.children) {\n        this.itemsByIds[item.id] = item;\n      }\n      if (item.children) {\n        this.monkeyPatchMenu(item.children, item.id);\n      }\n    });\n  }\n\n  /**\n   * [setMenuTogglesListeners description]\n   * @method setMenuTogglesListeners\n   */\n  private setMenuTogglesListeners(): void {\n    this.toggleListeners = removeListeners(this.toggleListeners);\n    this.ngZone.runOutsideAngular(() => {\n      this.sidebarLeftToggleDirectives.forEach((menuToggle: SidebarLeftToggleDirective) => {\n        this.toggleListeners.push(this.renderer2.listen(menuToggle.elementRef.nativeElement, 'click', (event) => {\n          event.preventDefault();\n          if (menuToggle.item.isCollapsed) {\n            this.collapsedItems.forEach((item: Item) => {\n              if (!item.disableCollapse) {\n                item.isCollapsed = true;\n              }\n            });\n            this.collapsedItems = [];\n            this.uncollapseItemParents(menuToggle.item);\n          } else {\n            menuToggle.item.isCollapsed = !menuToggle.item.isCollapsed;\n          }\n          this.changeDetectorRef.detectChanges();\n        }));\n      });\n    });\n  }\n\n  /**\n   * [checkMenuWithoutChildren description]\n   * @method checkMenuWithoutChildren\n   */\n  private checkMenuWithoutChildren(): void {\n    let menuHaveChildren;\n    this.menu.forEach((item: Item) => {\n      if (item.children) {\n        return menuHaveChildren = true;\n      }\n    });\n    if (!menuHaveChildren) {\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.layoutStore.setSidebarLeftElementHeight(this.sidebarElement.nativeElement.offsetHeight);\n        });\n      });\n    }\n  }\n\n  /**\n   * [setSidebarHeight description]\n   * @method setSidebarHeight\n   */\n  private setSidebarHeight(): void {\n    if (this.layout === 'fixed') {\n      const height = this.windowInnerHeight - this.headerService.offsetHeight;\n      if (height && height !== this.sidebarHeight) {\n        this.sidebarHeight = height;\n        this.sidebarOverflow = 'auto';\n        this.changeDetectorRef.detectChanges();\n      }\n    } else if (this.sidebarHeight) {\n      this.sidebarOverflow = this.sidebarHeight = null;\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { AnimationsModule } from '../../animations/animations.module';\n\nimport { SidebarLeftToggleDirective } from './sidebar-left.directive';\nimport { SidebarLeftComponent } from './sidebar-left.component';\n\n@NgModule({\n    imports: [CommonModule, RouterModule, AnimationsModule],\n    exports: [SidebarLeftComponent],\n    declarations: [SidebarLeftToggleDirective, SidebarLeftComponent]\n})\nexport class SidebarLeftModule {}\n","import {AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild} from '@angular/core';\n\nimport {WrapperService} from '../wrapper/wrapper.service';\nimport {LayoutStore} from '../layout.store';\nimport {SidebarRightService} from './sidebar-right.service';\nimport {removeListeners, removeSubscriptions} from '../../helpers';\n\n@Component({\n  selector: 'mk-layout-sidebar-right',\n  template: `<div #sidebarContentElement class=\"control-sidebar-content\">\n  <ng-content></ng-content>\n</div>\n<div class=\"control-sidebar-bg\"></div>\n`,\n  styles: [`:host{display:block;height:100%}.control-sidebar-bg{z-index:-1}/deep/ .tab-content{padding:10px 15px}`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class SidebarRightComponent implements OnInit, AfterViewInit, OnDestroy {\n  public layout: string;\n\n  private skin: string;\n  private isSidebarRightOverContent: boolean;\n  private isSidebarRightCollapsed: boolean;\n  private listeners = [];\n  private subscriptions = [];\n\n  @ViewChild('sidebarContentElement') public sidebarContentElement: ElementRef;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer2: Renderer2,\n    private layoutStore: LayoutStore,\n    private sidebarRightService: SidebarRightService,\n    private wrapperService: WrapperService\n  ) {}\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this.renderer2.addClass(this.elementRef.nativeElement, 'control-sidebar');\n\n    this.subscriptions.push(this.layoutStore.isSidebarRightCollapsed.subscribe(value => {\n      this.isSidebarRightCollapsed = value;\n      if (!value) {\n        this.renderer2.addClass(this.elementRef.nativeElement, 'control-sidebar-open');\n        if (!this.isSidebarRightOverContent) {\n          this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');\n        }\n      } else {\n        this.renderer2.removeClass(this.elementRef.nativeElement, 'control-sidebar-open');\n        if (!this.isSidebarRightOverContent) {\n          this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');\n        }\n      }\n    }));\n\n    this.subscriptions.push(this.layoutStore.isSidebarRightOverContent.subscribe((value: boolean) => {\n      this.isSidebarRightOverContent = value;\n      if (!this.isSidebarRightCollapsed) {\n        if (value) {\n          this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');\n        } else {\n          this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');\n        }\n      }\n    }));\n\n    this.subscriptions.push(this.layoutStore.sidebarRightSkin.subscribe((value: string) => {\n      if (this.skin !== value) {\n        this.renderer2.removeClass(this.elementRef.nativeElement, `control-sidebar-${this.skin}`);\n      }\n      this.skin = value;\n      this.renderer2.addClass(this.elementRef.nativeElement, `control-sidebar-${value}`);\n    }));\n  }\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    this.sidebarRightService.elementRef = this.sidebarContentElement;\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    this.listeners = removeListeners(this.listeners);\n    this.subscriptions = removeSubscriptions(this.subscriptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SidebarRightComponent } from './sidebar-right.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [SidebarRightComponent],\n    declarations: [SidebarRightComponent]\n})\nexport class SidebarRightModule {}\n","import { Component, OnInit, Renderer2, ElementRef, NgZone, OnDestroy } from '@angular/core';\n\nimport { throttle, removeSubscriptions, removeListeners } from '../../helpers';\nimport { LayoutStore } from '../layout.store';\nimport { WrapperService } from './wrapper.service';\n\n@Component({\n  selector: 'mk-layout-wrapper',\n  template: `<div class=\"wrapper\" [ngClass]=\"classes\">\n  <ng-content></ng-content>\n</div>\n`,\n  styles: [`:host{display:block}:host /deep/ .sidebar-right-toggle>a{color:#fff}:host.sidebar-mini.sidebar-collapse /deep/ .treeview-menu.collapsing{height:auto!important}:host /deep/ .sidebar-right-toggle>a:hover{background:rgba(0,0,0,.1)}:host.skin-black /deep/ .sidebar-right-toggle>a,:host.skin-black-light /deep/ .sidebar-right-toggle>a{color:#333;border-right-width:0}:host.skin-black /deep/ .sidebar-right-toggle>a:hover,:host.skin-black-light /deep/ .sidebar-right-toggle>a:hover{background-color:#fff;color:#999}:host.skin-black /deep/ .sidebar-right-toggle>a{border-left:1px solid #eee}:host.skin-black-light /deep/ .sidebar-right-toggle>a{border-left:1px solid #d2d6de}`]\n})\nexport class WrapperComponent implements OnInit, OnDestroy {\n  private skin: string;\n  private listeners = [];\n  private subscriptions = [];\n\n  public classes: string;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer2: Renderer2,\n    private layoutStore: LayoutStore,\n    private wrapperService: WrapperService,\n    private ngZone: NgZone\n  ) {}\n\n  /**\n   * [ngOnInit description]\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this.layoutStore.setWindowInnerHeight(window.innerHeight);\n    this.layoutStore.setWindowInnerWidth(window.innerWidth);\n\n    this.wrapperService.wrapperElementRef = this.elementRef;\n\n    this.subscriptions.push(this.layoutStore.wrapperClasses.subscribe((value: string) => {\n      this.classes = value ? value : null;\n    }));\n\n    this.ngZone.runOutsideAngular(() => {\n      this.listeners.push(this.renderer2.listen('window', 'resize', throttle(() => {\n        this.layoutStore.setWindowInnerHeight(window.innerHeight);\n        this.layoutStore.setWindowInnerWidth(window.innerWidth);\n      }, 250)));\n    });\n\n    this.subscriptions.push(this.layoutStore.layout.subscribe((value: string) => {\n      value === 'fixed' ? this.renderer2.addClass(this.elementRef.nativeElement, 'fixed') :\n        this.renderer2.removeClass(this.elementRef.nativeElement, 'fixed');\n      value === 'boxed' ? this.renderer2.addClass(this.elementRef.nativeElement, 'layout-boxed') :\n        this.renderer2.removeClass(this.elementRef.nativeElement, 'layout-boxed');\n    }));\n\n    this.subscriptions.push(this.layoutStore.skin.subscribe((value: string) => {\n      if (value) {\n        if (this.skin && this.skin !== value) {\n          this.renderer2.removeClass(this.elementRef.nativeElement, `skin-${this.skin}`);\n        }\n        this.skin = value;\n        this.renderer2.addClass(this.elementRef.nativeElement, `skin-${this.skin}`);\n      }\n    }));\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    this.subscriptions = removeSubscriptions(this.subscriptions);\n    this.listeners = removeListeners(this.listeners);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WrapperComponent } from './wrapper.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [WrapperComponent],\n    declarations: [WrapperComponent]\n})\nexport class WrapperModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { RoutingService } from '../services/routing.service';\n\n@Injectable()\nexport class LayoutService {\n  public isCustomLayout: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  private customLayout: boolean;\n\n\n  /**\n   * @method constructor\n   * @param routingService [description]\n   */\n  constructor(\n    private routingService: RoutingService\n  ) {\n    this.init();\n  }\n\n  /**\n   * [init description]\n   * @method init\n   * @return [description]\n   */\n  private init() {\n    this.routingService.onChange.subscribe((value) => {\n      if (value && value[value.length - 1]) {\n        if (this.customLayout === undefined || this.customLayout !== value[value.length - 1].data['disableLayout']) {\n          this.isCustomLayout.next(!!value[value.length - 1].data['customLayout']);\n        }\n        this.customLayout = value[value.length - 1].data['customLayout'];\n      }\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { LayoutStore } from './layout.store';\nimport { LayoutState } from './layout.state';\n\n/**\n * [InjectionToken description]\n */\nexport const LayoutConfigToken = new InjectionToken('layoutConfig');\n\n/**\n * [layoutStoreFactory description]\n */\nexport function layoutStoreFactory(layoutConfig: LayoutState): LayoutStore {\n  return new LayoutStore(layoutConfig);\n}\n\n/**\n * [layoutProviders description]\n */\nexport function layoutProvider(layoutConfig: LayoutState) {\n  return [{\n      provide: LayoutStore,\n      useFactory: layoutStoreFactory,\n      deps: [LayoutConfigToken]\n    }, {\n      provide: LayoutConfigToken,\n      useValue: layoutConfig\n    }\n  ];\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ContentModule } from './content/content.module';\nimport { FooterModule } from './footer/footer.module';\nimport { HeaderModule } from './header/header.module';\nimport { SidebarLeftModule } from './sidebar-left/sidebar-left.module';\nimport { SidebarRightModule } from './sidebar-right/sidebar-right.module';\nimport { WrapperModule } from './wrapper/wrapper.module';\n\nimport { LayoutService } from './layout.service';\nimport { LayoutState } from './layout.state';\nimport { layoutProvider } from './layout.provider';\n\nimport { RoutingService } from '../services/routing.service';\nimport { WrapperService } from './wrapper/wrapper.service';\nimport { SidebarRightService } from './sidebar-right/sidebar-right.service';\nimport { HeaderService } from './header/header.service';\nimport { FooterService } from './footer/footer.service';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  exports: [ContentModule, FooterModule, HeaderModule, SidebarLeftModule, SidebarRightModule, WrapperModule],\n  providers: [RoutingService, WrapperService, SidebarRightService, HeaderService, FooterService]\n})\nexport class LayoutModule {\n\n  /**\n   * @method constructor\n   * @param parentModule [description]\n   */\n  constructor(@Optional() @SkipSelf() parentModule: LayoutModule) {\n    if (parentModule) {\n      throw new Error('LayoutModule is already loaded. Import it in the AppModule only!');\n    }\n  }\n\n  /**\n   * [forRoot description]\n   * @method forRoot\n   * @param  layoutConfig [description]\n   * @return [description]\n   */\n  static forRoot(layoutConfig: LayoutState): ModuleWithProviders {\n    return {\n      ngModule: LayoutModule,\n      providers: [...layoutProvider(layoutConfig), LayoutService]\n    };\n  }\n}\n\nexport * from './layout.service';\nexport * from './layout.store';\nexport * from './layout.state';\n","export const colorsAliases = [\n  'default',\n  'primary',\n  'danger',\n  'warning',\n  'info',\n  'success'\n];\n\nexport const colors = {\n  'aqua': '#00c0ef',\n  'aqua-active': '#00a7d0',\n  'black': '#111111',\n  'black-active': '#000000',\n  'blue': '#0073b7',\n  'blue-active': '#005384',\n  'fuchsia': '#f012be',\n  'fuchsia-active': '#db0ead',\n  'green': '#00a65a',\n  'green-active': '#008d4c',\n  'gray': '#d2d6de',\n  'gray-active': '#b5bbc8',\n  'gray-light': '#f7f7f7',\n  'light-blue': '#3c8dbc',\n  'light-blue-active': '#357ca5',\n  'lime': '#01ff70',\n  'lime-active': '#00e765',\n  'maroon': '#d81b60',\n  'maroon-active': '#ca195a',\n  'navy': '#001f3f',\n  'navy-active': '#001a35',\n  'olive': '#3d9970',\n  'olive-active': '#368763',\n  'orange': '#ff851b',\n  'orange-active': '#ff7701',\n  'purple': '#605ca8',\n  'purple-active': '#555299',\n  'red': '#dd4b39',\n  'red-active': '#d33724',\n  'teal': '#39cccc',\n  'teal-active': '#30bbbb',\n  'yellow': '#f39c12',\n  'yellow-active': '#db8b0b',\n};\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\n\nimport { colors, colorsAliases } from './color.definition';\n\n/*\n *\n */\n@Injectable()\nexport class ColorService {\n  private currentBackgroundStyle: any;\n  private currentBackgroundClass: any;\n  private currentFontStyle: any;\n  private currentFontClass: any;\n\n  /**\n   * @method constructor\n   * @param renderer2 [description]\n   * @param elementRef [description]\n   */\n  constructor(\n    private renderer2: Renderer2,\n    private elementRef: ElementRef\n  ) {\n    // this.init();\n    // console.log(this);\n  }\n\n  /**\n   * [setBackgroundColor description]\n   * @method setBackgroundColor\n   * @param  color              [description]\n   * @param  condition          [description]\n   * @param  property           [description]\n   * @param  prefix             [description]\n   */\n  public setBackgroundColor(color: string, condition: boolean, property: string, prefix: string): void {\n    if (color && condition) {\n      this.resetBackgroundColor();\n      if (colors[color]) {\n        this.renderer2.addClass(this.elementRef.nativeElement, 'bg-color');\n        this.currentBackgroundStyle = {property: property, color: colors[color]};\n        this.renderer2.setStyle(this.elementRef.nativeElement, property, colors[color]);\n      } else {\n        this.renderer2.removeClass(this.elementRef.nativeElement, 'bg-color');\n        if (color.indexOf('#') === 0 || color.indexOf('rgb') === 0) {\n          this.currentBackgroundStyle = {property: property, color: color};\n          this.renderer2.setStyle(this.elementRef.nativeElement, property, color);\n        } else if (colorsAliases.indexOf(color) !== -1) {\n          this.currentBackgroundClass = prefix ? `${prefix}-${color}` : color;\n          this.renderer2.addClass(this.elementRef.nativeElement, this.currentBackgroundClass);\n        }\n      }\n    }\n  }\n\n  /**\n   * [resetBackgroundColor description]\n   * @method resetBackgroundColor\n   */\n  public resetBackgroundColor(): void {\n    if (this.currentBackgroundStyle) {\n      this.renderer2.removeStyle(this.elementRef.nativeElement, this.currentBackgroundStyle.property, this.currentBackgroundStyle.color);\n    } else if (this.currentBackgroundClass) {\n      this.renderer2.removeClass(this.elementRef.nativeElement, this.currentBackgroundClass);\n    }\n  }\n\n  /**\n   * [setFontColor description]\n   * @method setFontColor\n   * @param  color        [description]\n   */\n  public setFontColor(color: string): void {\n    if (color) {\n      this.resetFontColor();\n      if (color.startsWith('#') || color.startsWith('rgb')) {\n        this.currentFontStyle = color;\n        this.renderer2.setStyle(this.elementRef.nativeElement, 'color', color);\n      } else {\n        this.currentFontClass = `text-${color}`;\n        this.renderer2.addClass(this.elementRef.nativeElement, this.currentFontClass);\n      }\n    }\n  }\n\n  /**\n   * [resetFontColor description]\n   * @method resetFontColor\n   * @return [description]\n   */\n  public resetFontColor() {\n    if (this.currentFontStyle) {\n      this.renderer2.removeStyle(this.elementRef.nativeElement, 'color', this.currentFontStyle);\n    } else if (this.currentFontClass) {\n      this.renderer2.removeClass(this.elementRef.nativeElement, this.currentFontClass);\n    }\n  }\n}\n","import { Directive, Input, Renderer2, ElementRef } from '@angular/core';\n\nimport { ColorService } from './color.service';\n\n@Directive({\n  selector: '[mkColor]',\n  providers: [ColorService]\n})\nexport class BackgroundColorDirective {\n  /**\n   * @method constructor\n   * @param elementRef   [description]\n   * @param renderer2    [description]\n   * @param colorService [description]\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private renderer2: Renderer2,\n    private colorService: ColorService\n  ) {}\n\n  @Input('mkColorCondition') condition = true;\n  @Input('mkColorPrefix') prefix: string;\n  @Input('mkColorProperty') property: string;\n  @Input('mkColor') set color(color: string) {\n    this.colorService.setBackgroundColor(color, this.condition, this.property, this.prefix);\n  }\n}\n\n@Directive({\n  selector: '[mkFontColor]',\n  providers: [ColorService]\n})\nexport class ColorDirective {\n  /**\n   * @method constructor\n   * @param elementRef   [description]\n   * @param renderer2    [description]\n   * @param colorService [description]\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private renderer2: Renderer2,\n    private colorService: ColorService\n  ) {}\n\n  @Input('mkFontColor') set color(color: string) {\n    this.colorService.setFontColor(color);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { BackgroundColorDirective, ColorDirective } from './color.directive';\n\n@NgModule({\n    exports: [BackgroundColorDirective, ColorDirective],\n    declarations: [BackgroundColorDirective, ColorDirective]\n})\nexport class ColorModule {}\n","import { Directive, Input, ElementRef } from '@angular/core';\n\n/*\n *\n */\n@Directive({\n  selector: '[mkAccordionToggle]'\n})\nexport class AccordionToggleDirective {\n  @Input('mkAccordionToggle') accordionComponent;\n\n  /**\n   * @method constructor\n   * @param elementRef [description]\n   */\n  constructor(\n    public elementRef: ElementRef\n  ) {}\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\n\nimport { AnimationEvent } from '../animations/animations.interface';\n\nimport { AccordionToggleDirective } from './accordion.directive';\n\nimport { removeListeners, removeSubscriptions } from '../helpers';\nimport { Subscription } from 'rxjs';\n\n/*\n *\n */\n@Component({\n  selector: 'mk-accordion-header',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\n})\nexport class AccordionHeaderComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n\n/*\n *\n */\n@Component({\n  selector: 'mk-accordion-content',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\n})\nexport class AccordionContentComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n\n/*\n *\n */\n@Component({\n  selector: 'mk-accordion',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'\n})\nexport class AccordionComponent implements OnInit {\n  public contentTemplateRef: TemplateRef<AccordionContentComponent>;\n  public headerStyleColor: string;\n  public isCollapsing: boolean;\n  public isCollapsed: boolean;\n  public index: number;\n\n  @Input() public borderColor: string;\n  @Input() public contentColor: string;\n  @Input() public contentStyleClass = 'box-body';\n  @Input() public header: string;\n  @Input() public headerColor: string;\n  @Input() public headerColorHover: string;\n  @Input() public headerStyleClass = 'box-header with-border';\n\n  @ContentChild(AccordionHeaderComponent) public accordionHeaderComponent: AccordionHeaderComponent;\n  @ContentChild(AccordionContentComponent) public accordionContentComponent: AccordionContentComponent;\n\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this.headerStyleColor = this.headerColor;\n\n    if (!this.header && !this.accordionHeaderComponent) {\n      throw new Error('Attribute \"header\" OR Component \"mk-+accordion-header\" is required for component \"mk-+accordion\"');\n    }\n\n    if (this.accordionContentComponent) {\n      this.contentTemplateRef = this.accordionContentComponent.templateRef;\n    } else {\n      this.contentTemplateRef = this.templateRef;\n    }\n  }\n}\n\n\n/*\n *\n */\n@Component({\n  selector: 'mk-accordion-group',\n  template: `<div [ngClass]=\"styleClass\">\n  <div *ngFor=\"let accordion of accordionComponents\" class=\"panel box\" [mkColor]=\"accordion.borderColor\" mkColorProperty=\"border-top-color\" mkColorPrefix=\"box\">\n    <div [ngClass]=\"accordion.headerStyleClass\" [class.no-border]=\"accordion.isCollapsed && !accordion.isCollapsing\">\n      <h4 class=\"box-title\">\n        <a [mkAccordionToggle]=\"accordion\" href=\"#\" [mkFontColor]=\"accordion.headerStyleColor\" [class.collapsed]=\"accordion.isCollapsed\">\n          {{accordion.header}}\n          <ng-template *ngIf=\"!accordion.header\" [ngTemplateOutlet]=\"accordion.accordionHeaderComponent?.templateRef\"></ng-template>\n        </a>\n      </h4>\n    </div>\n    <div class=\"panel-collapse\" [collapseAnimation]=\"accordion.isCollapsed\" (collapseAnimation.start)=\"collapseStart($event, accordion)\" (collapseAnimation.done)=\"collapseDone($event, accordion)\">\n      <div [ngClass]=\"accordion.contentStyleClass\" [mkFontColor]=\"accordion.contentColor\">\n        <ng-template [ngTemplateOutlet]=\"accordion.contentTemplateRef\"></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n`\n})\nexport class AccordionGroupComponent implements AfterContentInit, AfterViewInit, OnChanges, OnDestroy {\n  private activeIndex: any = [0];\n  // @TODO change types for listeners to all files\n  private listeners: Array<Function> = [];\n  // @TODO change types for subscriptions to all files\n  private subscriptions: Array<Subscription> = [];\n\n\n  @Input('activeIndex') set _activeIndex(value) {\n    this.activeIndex = value instanceof Array ? value : [value];\n  }\n  @Input() public isMultiple: boolean;\n  @Input() public styleClass = 'box-group';\n\n  @Output() public onCollapseStart = new EventEmitter();\n  @Output() public onCollapseDone = new EventEmitter();\n\n  @ContentChildren(AccordionComponent) public accordionComponents: QueryList<AccordionComponent>;\n\n  @ViewChildren(AccordionToggleDirective) private accordionToggleDirectives: QueryList<AccordionToggleDirective>;\n\n  /**\n   * @method constructor\n   * @param changeDetectorRef [description]\n   * @param ngZone            [description]\n   * @param renderer2         [description]\n   */\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private renderer2: Renderer2\n  ) {}\n\n  /**\n   * [headerMouseLeave description]\n   * @method headerMouseLeave\n   * @param accordion [description]\n   */\n  public static headerMouseLeave(accordion: AccordionComponent): void {\n    accordion.headerStyleColor = accordion.headerColor;\n  }\n\n  /**\n   * [headerMouseEnter description]\n   * @method headerMouseEnter\n   * @param accordion [description]\n   */\n  public static headerMouseEnter(accordion: AccordionComponent): void {\n    if (accordion.headerColorHover) {\n      accordion.headerStyleColor = accordion.headerColorHover;\n    }\n  }\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterContentInit() {\n    this.setAccordionsIndex();\n    this.updateAccordionIsCollapsed();\n\n    this.subscriptions.push(this.accordionComponents.changes.subscribe(() => {\n      this.setAccordionsIndex();\n    }));\n  }\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    this.setAccordionsToggle();\n\n    this.subscriptions.push(this.accordionToggleDirectives.changes.subscribe(() => {\n      this.setAccordionsToggle();\n    }));\n  }\n\n  /**\n   * [ngOnChanges description]\n   * @method ngOnChanges\n   * @param changes [description]\n   * @return [description]\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes._activeIndex.firstChange === false) {\n      this.updateAccordionIsCollapsed();\n    }\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    removeListeners(this.listeners);\n    removeSubscriptions(this.subscriptions);\n  }\n\n  /**\n   * [toggleAccordion description]\n   * @method toggleAccordion\n   * @param event       [description]\n   * @param toggleIndex [description]\n   */\n  public toggleAccordion(event: Event, toggleIndex: number): void {\n    event.preventDefault();\n\n    const indexOf = this.activeIndex['indexOf'](toggleIndex);\n    if (indexOf === -1) {\n      if (this.isMultiple) {\n        this.activeIndex.push(toggleIndex);\n      } else {\n        this.activeIndex = [toggleIndex];\n      }\n    } else {\n      if (this.isMultiple) {\n        this.activeIndex.splice(indexOf, 1);\n      } else {\n        this.activeIndex = [];\n      }\n    }\n    this.updateAccordionIsCollapsed();\n  }\n\n  /**\n   * [collapseStart description]\n   * @method collapseStart\n   * @param event [description]\n   * @param accordion [description]\n   */\n  public collapseStart(event: AnimationEvent, accordion: AccordionComponent): void {\n    accordion.isCollapsing = true;\n    this.onCollapseStart.emit({animationEvent: event, index: accordion.index});\n  }\n\n  /**\n   * [collapseDone description]\n   * @method collapseDone\n   * @param event [description]\n   * @param accordion [description]\n   */\n  public collapseDone(event: AnimationEvent, accordion: AccordionComponent): void {\n    accordion.isCollapsing = false;\n    this.onCollapseDone.emit({animationEvent: event, index: accordion.index});\n  }\n\n  /**\n   * [setAccordionsIndex description]\n   * @method setAccordionsIndex\n   */\n  private setAccordionsIndex(): void {\n    this.accordionComponents.forEach((accordion: AccordionComponent, index: number) => {\n      accordion.index = index;\n    });\n  }\n\n  /**\n   * [setAccordionsToggle description]\n   * @method setAccordionsToggle\n   */\n  private setAccordionsToggle(): void {\n    this.listeners = removeListeners(this.listeners);\n\n    this.ngZone.runOutsideAngular(() => {\n      this.accordionToggleDirectives.forEach((accordionToggle: AccordionToggleDirective) => {\n        this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'click', (event) => {\n          this.toggleAccordion(event, accordionToggle.accordionComponent.index);\n          this.changeDetectorRef.detectChanges();\n        }));\n        this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseenter', () => {\n          AccordionGroupComponent.headerMouseEnter(accordionToggle.accordionComponent);\n          this.changeDetectorRef.detectChanges();\n        }));\n        this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseleave', () => {\n          AccordionGroupComponent.headerMouseLeave(accordionToggle.accordionComponent);\n          this.changeDetectorRef.detectChanges();\n        }));\n      });\n    });\n  }\n\n  /**\n   * [updateAccordionIsCollapsed description]\n   * @method updateAccordionIsCollapsed\n   */\n  private updateAccordionIsCollapsed(): void {\n    this.accordionComponents.forEach((accordion: AccordionComponent, index: number) => {\n      accordion.isCollapsed = this.activeIndex.indexOf(index) === -1;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnimationsModule } from '../animations/animations.module';\nimport { ColorModule } from '../color/color.module';\n\nimport { AccordionHeaderComponent, AccordionContentComponent, AccordionComponent, AccordionGroupComponent } from './accordion.component';\nimport { AccordionToggleDirective } from './accordion.directive';\n\n@NgModule({\n    imports: [CommonModule, AnimationsModule, ColorModule],\n    exports: [AccordionHeaderComponent, AccordionContentComponent, AccordionComponent, AccordionGroupComponent],\n    declarations: [AccordionToggleDirective, AccordionHeaderComponent,\n                    AccordionContentComponent, AccordionComponent, AccordionGroupComponent]\n})\nexport class AccordionModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n  ViewRef\n} from '@angular/core';\n\nimport {AnimationEvent} from '../animations/animations.interface';\n\nimport {removeListeners} from '../helpers';\n\n/*\n *\n */\n@Component({\n  selector: 'mk-alert',\n  template: `<div *ngIf=\"!removed\" [collapseAnimation]=\"remove\" (collapseAnimation.start)=\"collapseStart($event)\" (collapseAnimation.done)=\"collapseDone($event)\">\n  <div [mkColor]=\"backgroundColor\" mkColorProperty=\"background-color\" [mkColorPrefix]=\"type\" [mkFontColor]=\"color\" [ngClass]=\"[styleClass, dismissibleClass, type]\">\n    <button *ngIf=\"isDismissible\" type=\"button\" class=\"close\" #removeButtonElement>&times;</button>\n    <ng-content></ng-content>\n  </div>\n</div>\n`,\n  styles: [`.callout-dismissable,.callout-dismissible{padding-right:35px}.callout-dismissable .close,.callout-dismissible .close{position:relative;top:-2px;right:-21px;color:inherit}.callout .close{color:#000;opacity:.2}.callout .icon{margin-right:10px}`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent implements AfterViewInit, OnDestroy {\n  public dismissibleClass = 'alert-dismissible';\n  public isDismissible = true;\n  public remove = false;\n  public removed: boolean;\n  public type = 'alert';\n\n  private listeners = [];\n\n  @Input() public backgroundColor = 'danger';\n  @Input() public set callout(value: boolean) {\n    this.type = value ? 'callout' : 'alert';\n  }\n  @Input() public color: string;\n  @Input() public dismissOnTimeout: number;\n  @Input('isDismissible') public set _isDismissible(value: boolean) {\n    this.isDismissible = value;\n    if (value) {\n      this.dismissibleClass = `${this.type}-dismissible`;\n    } else {\n      this.dismissibleClass = '';\n    }\n  }\n  @Input() public styleClass = '';\n\n  @Output() public onCollapseStart = new EventEmitter();\n  @Output() public onCollapseDone = new EventEmitter();\n\n  @ViewChild('removeButtonElement') private removeButtonElement: ElementRef;\n  @ViewChild('containerElementRef', { read: ViewContainerRef }) private containerElementRef: ViewContainerRef;\n\n  /**\n   * @method constructor\n   * @param  changeDetectorRef [description]\n   * @param  ngZone            [description]\n   * @param  renderer2         [description]\n   * @param  viewContainerRef  [description]\n   */\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private renderer2: Renderer2,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  /**\n   * @method ngOnInit\n   */\n  ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.dismissOnTimeout) {\n        setTimeout(() => {\n          if (!(this.changeDetectorRef as ViewRef).destroyed) {\n            this.remove = true;\n            this.changeDetectorRef.detectChanges();\n          }\n        }, this.dismissOnTimeout);\n      }\n      if (this.removeButtonElement) {\n        this.listeners.push(this.renderer2.listen(this.removeButtonElement.nativeElement, 'click', () => {\n          this.remove = true;\n          this.changeDetectorRef.detectChanges();\n        }));\n      }\n    });\n  }\n\n  /**\n   * @method ngOnDesroy\n   */\n  ngOnDestroy() {\n    removeListeners(this.listeners);\n  }\n\n  /**\n   * [collapseStart description]\n   * @method collapseStart\n   * @param event [description]\n   */\n  public collapseStart(event: AnimationEvent): void {\n    this.onCollapseStart.emit(event);\n  }\n\n  /**\n   * [collapseDone description]\n   * @method collapseDone\n   * @param event [description]\n   */\n  public collapseDone(event: AnimationEvent): void {\n    if (event.toState === '1') {\n      this.listeners = removeListeners(this.listeners);\n      this.removed = true;\n      this.viewContainerRef.clear();\n      this.changeDetectorRef.detectChanges();\n    }\n    this.onCollapseDone.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnimationsModule } from '../animations/animations.module';\nimport { ColorModule } from '../color/color.module';\n\nimport { AlertComponent } from './alert.component';\n\n\n@NgModule({\n    imports: [CommonModule, AnimationsModule, ColorModule],\n    exports: [AlertComponent],\n    declarations: [AlertComponent]\n})\nexport class AlertModule {}\n","import { Directive } from '@angular/core';\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-content'\n})\nexport class BoxContentDirective {}\n\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-footer'\n})\nexport class BoxFooterDirective {}\n\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-tools'\n})\nexport class BoxToolsDirective {}\n\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-header'\n})\nexport class BoxHeaderDirective {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\n\nimport {AnimationEvent} from '../animations/animations.interface';\n\nimport {BoxContentDirective, BoxFooterDirective, BoxHeaderDirective, BoxToolsDirective} from './box.directive';\n\nimport {removeListeners} from '../helpers';\n\n/*\n *\n */\n@Component({\n  selector: 'mk-box',\n  template: `<div *ngIf=\"!removed\" [mkColor]=\"boxColor\" mkColorProperty=\"border-color\" mkColorPrefix=\"box\" [ngClass]=\"styleClass\" [class.collapsed-box]=\"isCollapsed && !isCollaping\" [class.box-solid]=\"isSolid\" [collapseAnimation]=\"remove\" (collapseAnimation.done)=\"removedDone($event)\">\n  <div *ngIf=\"header || boxHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkColor]=\"boxColor\" [mkColorCondition]=\"isSolid\" mkColorProperty=\"background-color\" [class.with-border]=\"headerBorder\">\n    <h3 class=\"box-title\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-header\"></ng-content>\n    </h3>\n    <div class=\"box-tools pull-right\">\n      <ng-content select=\"mk-box-tools\"></ng-content>\n      <button *ngIf=\"isCollapsable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #toggleButtonElement>\n        <i class=\"fa\" [ngClass]=\"{'fa-plus': isCollapsed, 'fa-minus': !isCollapsed}\"></i>\n      </button>\n      <button *ngIf=\"isRemovable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #removeButtonElement>\n        <i class=\"fa fa-times\"></i>\n      </button>\n    </div>\n  </div>\n  <div [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\" [collapseAnimation]=\"isCollapsed\" (collapseAnimation.start)=\"collapseStart($event)\" (collapseAnimation.done)=\"collapseDone($event)\">\n    <div class=\"box-body\">\n      <ng-container *ngIf=\"boxHeaderDirective || boxContentDirective || boxFooterDirective || boxToolsDirective; else noDirective\">\n        <ng-content select=\"mk-box-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </div>\n    <div *ngIf=\"footer || boxFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n      {{footer}}\n      <ng-content select=\"mk-box-footer\"></ng-content>\n    </div>\n  </div>\n  <div *ngIf=\"isLoading\" class=\"overlay\">\n    <i [ngClass]=\"loadingStyleClass\" [mkFontColor]=\"loadingColor\"></i>\n  </div>\n</div>\n`,\n  styles: [`.box.collapsed-box .box-body,.box.collapsed-box .box-footer{display:inherit}.box-solid{border:1px solid}.box-body{background-color:#fff}.box.box-solid.bg-color>.box-header{color:#fff}`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BoxComponent implements AfterViewInit, OnDestroy {\n  public isCollaping: boolean;\n  public remove = false;\n  public removed: boolean;\n  private listeners = [];\n\n  @Input() public boxColor = 'default';\n  @Input() public buttonsStyleClass = 'btn btn-box-tool';\n  @Input() public contentStyleClass = 'box-content-wrapper';\n  @Input() public contentColor: string;\n  @Input() public footer: string;\n  @Input() public footerColor: string;\n  @Input() public footerStyleClass = 'box-footer';\n  @Input() public header: string;\n  @Input() public headerBorder = true;\n  @Input() public headerColor: string;\n  @Input() public headerStyleClass = 'box-header';\n  @Input() public isCollapsable = true;\n  @Input() public isCollapsed = false;\n  @Input() public isLoading: boolean;\n  @Input() public isRemovable = true;\n  @Input() public isSolid = false;\n  @Input() public loadingColor: string;\n  @Input() public loadingStyleClass = 'fa fa-refresh fa-spin';\n  @Input() public styleClass = 'box';\n\n  @Output() public onCollapseDone = new EventEmitter();\n  @Output() public onCollapseStart = new EventEmitter();\n\n  @ContentChild(BoxHeaderDirective) public boxHeaderDirective: BoxHeaderDirective;\n  @ContentChild(BoxFooterDirective) public boxFooterDirective: BoxFooterDirective;\n  @ContentChild(BoxContentDirective) public boxContentDirective: BoxContentDirective;\n  @ContentChild(BoxToolsDirective) public boxToolsDirective: BoxToolsDirective;\n\n  @ViewChild('toggleButtonElement') private toggleButtonElement;\n  @ViewChild('removeButtonElement') private removeButtonElement;\n\n  /**\n   * @method constructor\n   * @param changeDetectorRef [description]\n   * @param ngZone            [description]\n   * @param renderer2         [description]\n   */\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private renderer2: Renderer2\n  ) {}\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.toggleButtonElement) {\n        this.listeners.push(this.renderer2.listen(this.toggleButtonElement.nativeElement, 'click', () => {\n          this.isCollapsed = !this.isCollapsed;\n          this.changeDetectorRef.detectChanges();\n        }));\n      }\n      if (this.removeButtonElement) {\n        this.listeners.push(this.renderer2.listen(this.removeButtonElement.nativeElement, 'click', () => {\n          this.remove = true;\n          this.changeDetectorRef.detectChanges();\n        }));\n      }\n    });\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    removeListeners(this.listeners);\n  }\n\n  /**\n   * [removedDone description]\n   * @method removedDone\n   * @param event [description]\n   */\n  public removedDone(event): void {\n    if (event.toState === '1') {\n      this.removed = true;\n    }\n  }\n\n  /**\n   * [collapseStart description]\n   * @method collapseStart\n   * @param event [description]\n   */\n  public collapseStart(event: AnimationEvent): void {\n    if (event.fromState !== 'void') {\n      this.isCollaping = true;\n      this.onCollapseStart.emit(event);\n    }\n  }\n\n  /**\n   * [collapseDone description]\n   * @method collapseDone\n   * @param event [description]\n   */\n  public collapseDone(event: AnimationEvent): void {\n    if (event.fromState !== 'void') {\n      this.isCollaping = false;\n      this.onCollapseDone.emit(event);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnimationsModule } from '../animations/animations.module';\nimport { ColorModule } from '../color/color.module';\n\nimport { BoxHeaderDirective, BoxContentDirective, BoxFooterDirective, BoxToolsDirective } from './box.directive';\nimport { BoxComponent } from './box.component';\n\n\n@NgModule({\n    imports: [CommonModule,  AnimationsModule, ColorModule],\n    exports: [BoxComponent, BoxHeaderDirective, BoxContentDirective, BoxFooterDirective, BoxToolsDirective],\n    declarations: [BoxComponent, BoxHeaderDirective, BoxContentDirective, BoxFooterDirective, BoxToolsDirective]\n})\nexport class BoxModule {}\n","import { Directive } from '@angular/core';\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-info-content'\n})\nexport class BoxInfoContentDirective {}\n\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-info-footer'\n})\nexport class BoxInfoFooterDirective {}\n\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-info-header'\n})\nexport class BoxInfoHeaderDirective {}\n","import { Component, OnInit, Input, ContentChild } from '@angular/core';\nimport { BoxInfoContentDirective, BoxInfoFooterDirective, BoxInfoHeaderDirective } from './box-info.directive';\n\n/*\n *\n */\n@Component({\n  selector: 'mk-box-info',\n  styles: [`.info-box.bg-color>.info-box-content{color:#fff}`],\n  template: `<div [ngClass]=\"styleClass\" [mkColor]=\"backgroundColor\" mkColorProperty=\"background-color\">\n  <span class=\"info-box-icon\" [mkColor]=\"iconBackgroundColor\" mkColorProperty=\"background-color\">\n    <i [ngClass]=\"iconStyleClass\" [mkFontColor]=\"iconColor\"></i>\n  </span>\n  <div class=\"info-box-content\">\n    <span *ngIf=\"header || boxInfoHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-header\"></ng-content>\n    </span>\n    <span [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\">\n      <ng-container *ngIf=\"boxInfoHeaderDirective || boxInfoContentDirective || boxInfoFooterDirective; else noDirective\">\n        <ng-content select=\"mk-box-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </span>\n    <div *ngIf=\"progressWidth\" class=\"progress\">\n      <div class=\"progress-bar\" [mkColor]=\"progressBarBg\" mkColorProperty=\"background-color\" [style.width.%]=\"progressWidth\"></div>\n    </div>\n    <span *ngIf=\"footer || boxInfoFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n      {{footer}}\n      <ng-content select=\"mk-box-footer\"></ng-content>\n    </span>\n  </div>\n</div>\n`\n})\nexport class BoxInfoComponent implements OnInit {\n  public progressBarBg: string;\n\n  @Input() public backgroundColor: string;\n  @Input() public contentStyleClass = 'info-box-number';\n  @Input() public contentColor: string;\n  @Input() public footer: string;\n  @Input() public footerColor: string;\n  @Input() public footerStyleClass = 'progress-description';\n  @Input() public header: string;\n  @Input() public headerColor: string;\n  @Input() public headerStyleClass = 'info-box-text';\n  @Input() public iconBackgroundColor: string;\n  @Input() public iconColor = '#fff';\n  @Input() public iconStyleClass = 'ion ion-bag';\n  @Input() public progressWidth: number;\n  @Input() public styleClass = 'info-box';\n\n  @ContentChild(BoxInfoHeaderDirective) public boxInfoHeaderDirective: BoxInfoHeaderDirective;\n  @ContentChild(BoxInfoFooterDirective) public boxInfoFooterDirective: BoxInfoFooterDirective;\n  @ContentChild(BoxInfoContentDirective) public boxInfoContentDirective: BoxInfoContentDirective;\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    if (!this.backgroundColor) {\n      this.progressBarBg = this.iconBackgroundColor;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ColorModule } from '../color/color.module';\n\nimport { BoxInfoHeaderDirective, BoxInfoContentDirective, BoxInfoFooterDirective } from './box-info.directive';\nimport { BoxInfoComponent } from './box-info.component';\n\n\n@NgModule({\n    imports: [CommonModule, ColorModule],\n    exports: [BoxInfoComponent, BoxInfoHeaderDirective, BoxInfoContentDirective, BoxInfoFooterDirective],\n    declarations: [BoxInfoComponent, BoxInfoHeaderDirective, BoxInfoContentDirective, BoxInfoFooterDirective]\n})\nexport class BoxInfoModule {}\n","import { Directive } from '@angular/core';\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-small-footer'\n})\nexport class BoxSmallFooterDirective {}\n\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-small-header'\n})\nexport class BoxSmallHeaderDirective {}\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-box-small-content'\n})\nexport class BoxSmallContentDirective {}\n","import { Component, Input, ContentChild } from '@angular/core';\n\nimport { BoxSmallContentDirective, BoxSmallFooterDirective, BoxSmallHeaderDirective } from './box-small.directive';\n\n/*\n *\n */\n@Component({\n  selector: 'mk-box-small',\n  template: `<div [ngClass]=\"styleClass\" [mkColor]=\"backgroundColor\" mkColorProperty=\"background-color\">\n  <div class=\"inner\">\n    <h3 *ngIf=\"header || boxSmallHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-small-header\"></ng-content>\n    </h3>\n    <p [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\">\n      <ng-container *ngIf=\"boxSmallHeaderDirective || boxSmallContentDirective || boxSmallFooterDirective; else noDirective\">\n        <ng-content select=\"mk-box-small-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </p>\n  </div>\n  <div *ngIf=\"iconStyleClass\" class=\"icon\">\n    <i [ngClass]=\"iconStyleClass\" [mkFontColor]=\"iconColor\"></i>\n  </div>\n  <span *ngIf=\"footer || boxSmallFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n    {{footer}}\n    <ng-content select=\"mk-box-small-footer\"></ng-content>\n  </span>\n</div>\n`,\n  styles: [`.small-box.bg-color{color:#fff}/deep/ .small-box-footer:hover{cursor:pointer}/deep/ .small-box-footer a{color:rgba(255,255,255,.8)}/deep/ .small-box-footer:hover a{color:#fff}`]\n})\nexport class BoxSmallComponent {\n  @Input() public backgroundColor: string;\n  @Input() public contentColor: string;\n  @Input() public contentStyleClass = 'small-box-content';\n  @Input() public footer: string;\n  @Input() public footerColor: string;\n  @Input() public footerStyleClass = 'small-box-footer';\n  @Input() public header: string;\n  @Input() public headerColor: string;\n  @Input() public headerStyleClass = 'small-box-header';\n  @Input() public iconColor: string;\n  @Input() public iconStyleClass = 'ion ion-bag';\n  @Input() public styleClass = 'small-box';\n\n  @ContentChild(BoxSmallHeaderDirective) public boxSmallHeaderDirective: BoxSmallHeaderDirective;\n  @ContentChild(BoxSmallFooterDirective) public boxSmallFooterDirective: BoxSmallFooterDirective;\n  @ContentChild(BoxSmallContentDirective) public boxSmallContentDirective: BoxSmallContentDirective;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ColorModule } from '../color/color.module';\n\nimport { BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective } from './box-small.directive';\nimport { BoxSmallComponent } from './box-small.component';\n\n@NgModule({\n    imports: [CommonModule, ColorModule],\n    exports: [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective],\n    declarations: [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective]\n})\nexport class BoxSmallModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport {AnimationEvent} from '../animations/animations.interface';\n\nimport {removeListeners} from '../helpers';\n\n/*\n *\n */\n@Component({\n  selector: 'mk-dropdown-toggle',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DropdownToggleComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n  @ContentChild('toggleElement') public toggleElement: ElementRef;\n}\n\n\n/*\n *\n */\n@Component({\n  selector: 'mk-dropdown-menu',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DropdownMenuComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n\n/*\n *\n */\n@Component({\n  selector: 'mk-dropdown, [mk-dropdown]',\n  template: `<ng-template #innerTemplate>\n  <ng-container *ngIf=\"this.dropdownToggleComponent && this.dropdownToggleComponent.toggleElement; else noToggleElement\" [ngTemplateOutlet]=\"dropdownToggleComponent.templateRef\"></ng-container>\n  <ng-template #noToggleElement>\n    <button *ngIf=\"toggleText || dropdownToggleComponent\" [mkColor]=\"buttonBackgroudColor\" mkColorProperty=\"background-color\" mkColorPrefix=\"btn\" [ngClass]=\"buttonStyleClass\" #toggleElement>\n      {{toggleText}}\n      <ng-container [ngTemplateOutlet]=\"dropdownToggleComponent?.templateRef\"></ng-container>\n    </button>\n  </ng-template>\n  <ul [ngClass]=\"contentStyleClass\" [collapseAnimation]=\"isCollapsed\" (collapseAnimation.start)=\"collapseStart($event)\" (collapseAnimation.done)=\"collapseDone($event)\">\n    <ng-container *ngIf=\"dropdownMenuComponent; else noDropdownMenuComponent\" [ngTemplateOutlet]=\"dropdownMenuComponent.templateRef\"></ng-container>\n    <ng-template #noDropdownMenuComponent>\n      <ng-content></ng-content>\n    </ng-template>\n  </ul>\n</ng-template>\n\n<div *ngIf=\"isWrapper; else noWrapper\" [ngClass]=\"styleClass\">\n  <ng-container *ngTemplateOutlet=\"innerTemplate\"></ng-container>\n</div>\n\n<ng-template #noWrapper>\n  <ng-container *ngTemplateOutlet=\"innerTemplate\"></ng-container>\n</ng-template>\n`,\n  styles: [`.dropdown-menu{display:block}.dropdown-menu.collapsing:not(.un-collapse){transition-property:height,padding-top,padding-bottom;padding-top:0;padding-bottom:0}`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DropdownComponent implements AfterViewInit, OnDestroy {\n  private documentClickListener: Function;\n  private listeners = [];\n\n  @Input() public buttonStyleClass = 'btn dropdown-toggle';\n  @Input() public buttonBackgroudColor = 'default';\n  @Input() public contentStyleClass = 'dropdown-menu';\n  @Input() public isCollapsed = true;\n  @Input() public isWrapper = true;\n  @Input() public styleClass = 'dropdown';\n  @Input() public toggleElement: Element;\n  @Input() public toggleText: string;\n\n  @Output() public onCollapseStart = new EventEmitter();\n  @Output() public onCollapseDone = new EventEmitter();\n\n  @ContentChild(DropdownToggleComponent) public dropdownToggleComponent: DropdownToggleComponent;\n  @ContentChild(DropdownMenuComponent) public dropdownMenuComponent: DropdownMenuComponent;\n\n  @ViewChild('toggleElement') private defaultToggleElement: ElementRef;\n\n  /**\n   * @method constructor\n   * @param changeDetectorRef [description]\n   * @param elementRef [description]\n   * @param ngZone [description]\n   * @param renderer2 [description]\n   */\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private ngZone: NgZone,\n    private renderer2: Renderer2\n  ) {}\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    const toggleNativeElement = this.dropdownToggleComponent && this.dropdownToggleComponent.toggleElement ?\n      this.dropdownToggleComponent.toggleElement.nativeElement : this.toggleElement ?\n        this.toggleElement : this.defaultToggleElement ?\n          this.defaultToggleElement.nativeElement : null;\n    if (toggleNativeElement) {\n      this.ngZone.runOutsideAngular(() => {\n        this.listeners.push(this.renderer2.listen(toggleNativeElement, 'click', (event: Event) => {\n          this.toggleDropdown(event);\n          this.changeDetectorRef.detectChanges();\n        }));\n      });\n    }\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    this.unBindDocumentClickListener();\n    removeListeners(this.listeners);\n  }\n\n  /**\n   * [toggle description]\n   * @method toggle\n   * @param event [description]\n   */\n  public toggleDropdown(event: Event): void {\n    event.preventDefault();\n    this.isCollapsed = !this.isCollapsed;\n    if (!this.isCollapsed) {\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout (() => {\n          this.bindDocumentClickListener();\n        });\n      });\n    } else {\n      this.unBindDocumentClickListener();\n    }\n  }\n\n  /**\n   * [collapseStart description]\n   * @method collapseStart\n   * @param event [description]\n   */\n  public collapseStart(event: AnimationEvent): void {\n    this.onCollapseStart.emit(event);\n  }\n\n  /**\n   * [collapseDone description]\n   * @method collapseDone\n   * @param event [description]\n   */\n  public collapseDone(event: AnimationEvent): void {\n    this.onCollapseStart.emit(event);\n  }\n\n  /**\n   * [bindDocumentClickListener description]\n   * @method bindDocumentClickListener\n   */\n  private bindDocumentClickListener(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.documentClickListener = this.renderer2.listen('document', 'click', () => {\n        if (!this.isCollapsed) {\n          this.isCollapsed = true;\n          this.unBindDocumentClickListener();\n          this.changeDetectorRef.detectChanges();\n        }\n      });\n    });\n  }\n\n  /**\n   * [unBindDocumentClickListener description]\n   * @method unBindDocumentClickListener\n   */\n  private unBindDocumentClickListener(): void {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnimationsModule } from '../animations/animations.module';\nimport { ColorModule } from '../color/color.module';\n\nimport { DropdownComponent, DropdownToggleComponent, DropdownMenuComponent } from './dropdown.component';\n\n@NgModule({\n    imports: [CommonModule, AnimationsModule, ColorModule],\n    exports: [DropdownComponent, DropdownToggleComponent, DropdownMenuComponent],\n    declarations: [DropdownComponent, DropdownToggleComponent, DropdownMenuComponent]\n})\nexport class DropdownModule {}\n","import { Directive } from '@angular/core';\n\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-input-group-label'\n})\nexport class InputGroupLabelDirective {}\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-input-group-addon-left'\n})\nexport class InputGroupAddonLeftDirective {}\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-input-group-addon-right'\n})\nexport class InputGroupAddonRightDirective {}\n\n/*\n *\n */\n@Directive({\n  /* tslint:disable-next-line:directive-selector */\n  selector: 'mk-input-group-content'\n})\nexport class InputGroupContentDirective {}\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\n\n/*\n *\n */\n@Injectable()\nexport class ClassService {\n  private currentClasses: Array<string> = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer2: Renderer2\n  ) {}\n\n\n  public applyClasses(cssClasses: string | Array<string>): void {\n    if (typeof cssClasses === 'string') {\n      cssClasses = cssClasses.split(' ');\n    }\n\n    // Remove only classes that are not in cssClasses\n    const classesToRemove = this.currentClasses.filter(x => cssClasses.indexOf(x) === -1);\n    classesToRemove.forEach(cssClasse => {\n      if (cssClasse) {\n        this.renderer2.removeClass(this.elementRef.nativeElement, cssClasse);\n      }\n    });\n\n    // Add only classes that are not in currentClasses\n    const classesToAdd = cssClasses.filter(x => this.currentClasses.indexOf(x) === -1);\n    classesToAdd.forEach(cssClasse => {\n      if (cssClasse) {\n        this.renderer2.addClass(this.elementRef.nativeElement, cssClasse);\n      }\n    });\n\n    // Update current classes for futur updates\n    this.currentClasses = [... cssClasses];\n  }\n}\n","import { Directive, Input, Renderer2, ElementRef, OnInit, HostListener } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { ColorService } from '../../color/color.service';\nimport { ClassService } from '../../services/class.service';\n\n// @TODO onFocus Color\n\n@Directive({\n  selector: '[mkInputText]',\n  providers: [ColorService, ClassService]\n})\nexport class InputTextDirective implements OnInit {\n  private defaultClass = 'form-control';\n  private isSetClass: boolean;\n  private _onKeyUp = new Subject<NgControl>();\n\n  public onKeyup: Observable<NgControl> = this._onKeyUp.asObservable();\n\n  @Input() set borderColor(color: string) {\n    this.colorService.setBackgroundColor(color, true, 'border-color', null);\n  }\n  @Input() set class(className: string) {\n    this.isSetClass = true;\n    this.classService.applyClasses(className);\n  }\n  @Input() set color(color: string) {\n    this.colorService.setFontColor(color);\n  }\n\n  /**\n   * @method constructor\n   * @param  elementRef   [description]\n   * @param  renderer2    [description]\n   * @param  ngControl    [description]\n   * @param  colorService [description]\n   * @param  classService [description]\n   */\n  constructor(\n    public elementRef: ElementRef,\n    public renderer2: Renderer2,\n    private ngControl: NgControl,\n    private colorService: ColorService,\n    private classService: ClassService\n  ) {}\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    if (!this.isSetClass) {\n      this.classService.applyClasses(this.defaultClass);\n    }\n  }\n\n  @HostListener('keyup') keyUpListener() {\n    this._onKeyUp.next(this.ngControl);\n  }\n}\n","import { AfterContentInit, Component, ContentChild, Input, OnDestroy } from '@angular/core';\n\nimport { removeSubscriptions } from '../../helpers';\n\nimport {\n  InputGroupAddonLeftDirective,\n  InputGroupAddonRightDirective,\n  InputGroupContentDirective,\n  InputGroupLabelDirective\n} from './input-group.directive';\n\nimport { InputTextDirective } from '../input-text/input-text.directive';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n\n/*\n *\n */\n@Component({\n  selector: 'mk-input-group',\n  template: `<div [ngClass]=\"wrapperClasses\" [mkColor]=\"currentColor || inputColor\" mkColorPrefix=\"has\">\n  <label *ngIf=\"label || inputGroupLabelDirective\">\n    {{label}}\n    <ng-content select=\"mk-input-group-label\"></ng-content>\n  </label>\n  <div *ngIf=\"addonLeft || inputGroupAddonLeftDirective || addonRight || inputGroupAddonRightDirective; else noAddon\" class=\"input-group\">\n    <span *ngIf=\"addonLeft || inputGroupAddonLeftDirective\" class=\"input-group-addon\">\n      {{addonLeft}}\n      <ng-content select=\"mk-input-group-addon-left\"></ng-content>\n    </span>\n    <ng-content select=\"mk-input-group-content\"></ng-content>\n    <span *ngIf=\"addonRight || inputGroupAddonRightDirective\" class=\"input-group-addon\">\n      {{addonRight}}\n      <ng-content select=\"mk-input-group-addon-right\"></ng-content>\n    </span>\n  </div>\n  <ng-template #noAddon><ng-content select=\"mk-input-group-content\"></ng-content></ng-template>\n</div>\n`\n})\nexport class InputGroupComponent implements AfterContentInit, OnDestroy {\n  private subscriptions: Array<Subscription> = [];\n\n  public currentColor: string;\n  public currentFontColor: string;\n\n  @Input() addonLeft: string;\n  @Input() addonRight: string;\n  @Input() inputColor = 'default';\n  @Input() inputFontColor: string;\n  @Input() inputErrorColor = 'danger';\n  @Input() inputErrorFontColor: string;\n  @Input() inputValidColor = 'success';\n  @Input() inputValidFontColor: string;\n  @Input() label: string;\n  @Input() wrapperClasses = 'form-group';\n\n  @ContentChild(InputGroupLabelDirective) public inputGroupLabelDirective: InputGroupLabelDirective;\n  @ContentChild(InputGroupAddonLeftDirective) public inputGroupAddonLeftDirective: InputGroupAddonLeftDirective;\n  @ContentChild(InputGroupAddonRightDirective) public inputGroupAddonRightDirective: InputGroupAddonRightDirective;\n  @ContentChild(InputGroupContentDirective) public inputGroupContentDirective: InputGroupContentDirective;\n  @ContentChild(InputTextDirective) public inputTextDirective: InputTextDirective;\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.inputTextDirective.onKeyup.subscribe((value: NgControl) => {\n      if (value.invalid) {\n        this.currentColor = this.inputErrorColor;\n        this.currentFontColor = this.inputErrorFontColor;\n      } else if (!value.invalid) {\n        this.currentColor = this.inputValidColor;\n        this.currentFontColor = this.inputValidFontColor;\n      } else {\n        this.currentColor = this.inputColor;\n        this.currentFontColor = this.inputFontColor;\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    removeSubscriptions(this.subscriptions);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\nimport {ColorModule} from '../../color/color.module';\n\nimport {InputGroupComponent} from './input-group.component';\nimport {\n  InputGroupAddonLeftDirective,\n  InputGroupAddonRightDirective,\n  InputGroupContentDirective,\n  InputGroupLabelDirective\n} from './input-group.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ColorModule,\n    FormsModule\n  ],\n  exports: [InputGroupComponent, InputGroupLabelDirective, InputGroupAddonLeftDirective,\n    InputGroupAddonRightDirective, InputGroupContentDirective],\n  declarations: [InputGroupComponent, InputGroupLabelDirective, InputGroupAddonLeftDirective,\n    InputGroupAddonRightDirective, InputGroupContentDirective]\n})\nexport class InputGroupModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { ColorModule } from '../../color/color.module';\n\nimport { InputTextDirective } from './input-text.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ColorModule,\n    FormsModule\n  ],\n  exports: [InputTextDirective],\n  declarations: [InputTextDirective]\n})\nexport class InputTextModule {}\n","import { Directive, Input, ElementRef } from '@angular/core';\n\n/*\n *\n */\n@Directive({\n  selector: '[mkTabToggle]'\n})\nexport class TabToggleDirective {\n  @Input('mkTabToggle') tabComponent;\n\n  /**\n   * @method constructor\n   * @param elementRef [description]\n   */\n  constructor(\n    public elementRef: ElementRef\n  ) {}\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChange,\n  TemplateRef,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\n\nimport { TabToggleDirective } from './tabs.directive';\n\nimport { removeListeners, removeSubscriptions } from '../helpers';\n\n// @TODO Vertical tabs\n\n/*\n *\n */\n@Component({\n  selector: 'mk-tab-header',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabHeaderComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n\n/*\n *\n */\n@Component({\n  selector: 'mk-tab-content',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabContentComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n/*\n *\n */\n@Component({\n  selector: 'mk-tab',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabComponent implements OnInit {\n  public index: number;\n  public isActive = false;\n\n  private contentTemplateRef: TemplateRef<any>;\n\n  @Input() public header: string;\n  @Input() public isDisabled: boolean;\n  @Input() public tabColor: string;\n\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n\n  @ContentChild(TabHeaderComponent) public tabHeaderComponent: TabHeaderComponent;\n  @ContentChild(TabContentComponent) public tabContentComponent: TabContentComponent;\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    if (this.tabContentComponent) {\n      this.contentTemplateRef = this.tabContentComponent.templateRef;\n    } else {\n      this.contentTemplateRef = this.templateRef;\n    }\n  }\n}\n\n/*\n *\n */\n@Component({\n  selector: 'mk-tabs-header',\n  template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsHeaderComponent {\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n}\n\n/*\n *\n */\n@Component({\n  selector: 'mk-tabs',\n  template: `<div [ngClass]=\"styleClass\">\n  <ul [ngClass]=\"navStyleClass\" [class.pull-right]=\"header || tabsHeaderComponent\">\n    <li *ngFor=\"let tab of tabs\" [class.active]=\"tab.isActive\" [mkColor]=\"tab.tabColor || tabsColor\" mkColorProperty=\"border-top-color\">\n      <a *ngIf=\"!tab.isDisabled\" [mkTabToggle]=\"tab\" href=\"#\">\n        {{tab.header}}\n        <ng-template *ngIf=\"!tab.header\" [ngTemplateOutlet]=\"tab.tabHeaderComponent?.templateRef\"></ng-template>\n      </a>\n      <ng-template [ngIf]=\"tab.isDisabled\">\n        {{tab.header}}\n        <ng-template *ngIf=\"!tab.header\" [ngTemplateOutlet]=\"tab.tabHeaderComponent.templateRef\"></ng-template>\n      </ng-template>\n    </li>\n    <li *ngIf=\"tabsHeaderComponent || header\" [ngClass]=\"headerStyleClass\">\n      {{header}}\n      <ng-template *ngIf=\"!header\" [ngTemplateOutlet]=\"tabsHeaderComponent.templateRef\"></ng-template>\n    </li>\n  </ul>\n  <div [ngClass]=\"contentStyleClass\">\n    <div *ngFor=\"let tab of tabs\" class=\"tab-pane\" [class.active]=\"tab.isActive\">\n      <ng-template [ngTemplateOutlet]=\"tab.contentTemplateRef\"></ng-template>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.nav-tabs-custom>.nav-tabs>li{border-top-width:0}.nav-tabs-custom>.nav-tabs>li.active{border-top-width:3px}`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsComponent implements AfterContentInit, AfterViewInit, OnChanges, OnDestroy {\n  private activatedTabIndex: number;\n  private listeners = [];\n  private subscriptions = [];\n\n  @Input() public set activeTabIndex(index: number) {\n    this.activatedTabIndex = index;\n    this.changeDetectorRef.detectChanges();\n  }\n  @Input() public header: string;\n  @Input() public headerStyleClass = 'header pull-left';\n  @Input() public navStyleClass = 'nav nav-tabs';\n  @Input() public contentStyleClass = 'tab-content';\n  @Input() public styleClass = 'nav-tabs-custom';\n  @Input() public tabsColor: string;\n\n  @Output() public onClose = new EventEmitter();\n  @Output() public onOpen = new EventEmitter();\n\n  @ContentChild(TabsHeaderComponent) public tabsHeaderComponent: TabsHeaderComponent;\n\n  @ContentChildren(TabComponent) public tabs: QueryList<TabComponent>;\n\n  @ViewChildren(TabToggleDirective) public tabToggleDirectives: QueryList<TabToggleDirective>;\n\n  /**\n   * @method constructor\n   * @param changeDetectorRef [description]\n   * @param ngZone            [description]\n   * @param renderer2         [description]\n   */\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private renderer2: Renderer2\n  ) {}\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterContentInit() {\n    // Set tab index on load.\n    this.setTabIndex();\n\n    // Update tab index if tabs is updated.\n    this.subscriptions.push(this.tabs.changes.subscribe(() => {\n      this.setTabIndex();\n    }));\n\n    // Open tab on load.\n    this.openTabIndex();\n  }\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    // Set tab toggles on load.\n    this.setTabsToggle();\n\n    // Update tab toggles if tabs is updated.\n    this.subscriptions.push(this.tabToggleDirectives.changes.subscribe(() => {\n      this.setTabsToggle();\n    }));\n  }\n\n  /**\n   * @method ngOnChanges\n   * @param changes [description]\n   */\n  ngOnChanges(changes: {[propKey: string]: SimpleChange}) {\n    if (changes.activeTabIndex) {\n      this.openTabIndex();\n    }\n  }\n\n  /**\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    removeListeners(this.listeners);\n    removeSubscriptions(this.subscriptions);\n  }\n\n  /**\n   * [toggleTab description]\n   * @method toggleTab\n   */\n  public openTabIndex(): void {\n    if (this.tabs) {\n      this.tabs.forEach((tab: TabComponent) => {\n        if (this.activatedTabIndex === tab.index || (this.activatedTabIndex === undefined && tab.index === 0)) {\n          tab.isActive = true;\n          this.onOpen.emit({index: tab.index});\n          this.changeDetectorRef.detectChanges();\n        } else if (tab.isActive) {\n          tab.isActive = false;\n          this.onClose.emit({index: tab.index});\n          this.changeDetectorRef.detectChanges();\n        }\n      });\n    }\n  }\n\n  /**\n   * [openTab description]\n   * @method openTab\n   * @param event     [description]\n   * @param tabToOpen [description]\n   */\n  public openTab(event: Event, tabToOpen: TabComponent): void {\n    event.preventDefault();\n    tabToOpen.isActive = true;\n    this.onOpen.emit({event, index: tabToOpen.index});\n    this.tabs.forEach((tab: TabComponent) => {\n      if (tab.isActive && tabToOpen !== tab) {\n        tab.isActive = false;\n        this.onClose.emit({event, index: tab.index});\n      }\n    });\n  }\n\n  /**\n   * [setTabIndex description]\n   * @method setTabIndex\n   */\n  private setTabIndex(): void {\n    this.tabs.forEach((tab: TabComponent, index: number) => {\n      tab.index = index;\n    });\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * [setTabsToggle description]\n   * @method setTabsToggle\n   */\n  private setTabsToggle(): void {\n    this.listeners = removeListeners(this.listeners);\n    this.ngZone.runOutsideAngular(() => {\n      this.tabToggleDirectives.forEach((tabToggle: TabToggleDirective) => {\n        this.listeners.push(this.renderer2.listen(tabToggle.elementRef.nativeElement, 'click', (event) => {\n          this.openTab(event, tabToggle.tabComponent);\n          this.changeDetectorRef.detectChanges();\n        }));\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ColorModule } from '../color/color.module';\n\nimport { TabToggleDirective } from './tabs.directive';\nimport { TabsComponent, TabsHeaderComponent, TabComponent, TabHeaderComponent, TabContentComponent } from './tabs.component';\n\n@NgModule({\n    imports: [CommonModule, ColorModule],\n    exports: [TabsComponent, TabsHeaderComponent, TabComponent, TabHeaderComponent, TabContentComponent],\n    declarations: [TabToggleDirective, TabsComponent, TabsHeaderComponent, TabComponent, TabHeaderComponent, TabContentComponent]\n})\nexport class TabsModule {}\n"]}