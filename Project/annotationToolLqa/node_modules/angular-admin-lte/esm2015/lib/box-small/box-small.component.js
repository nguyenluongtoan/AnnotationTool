/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, ContentChild } from '@angular/core';
import { BoxSmallContentDirective, BoxSmallFooterDirective, BoxSmallHeaderDirective } from './box-small.directive';
export class BoxSmallComponent {
    constructor() {
        this.contentStyleClass = 'small-box-content';
        this.footerStyleClass = 'small-box-footer';
        this.headerStyleClass = 'small-box-header';
        this.iconStyleClass = 'ion ion-bag';
        this.styleClass = 'small-box';
    }
}
BoxSmallComponent.decorators = [
    { type: Component, args: [{
                selector: 'mk-box-small',
                template: `<div [ngClass]="styleClass" [mkColor]="backgroundColor" mkColorProperty="background-color">
  <div class="inner">
    <h3 *ngIf="header || boxSmallHeaderDirective" [ngClass]="headerStyleClass" [mkFontColor]="headerColor">
      {{header}}
      <ng-content select="mk-box-small-header"></ng-content>
    </h3>
    <p [ngClass]="contentStyleClass" [mkFontColor]="contentColor">
      <ng-container *ngIf="boxSmallHeaderDirective || boxSmallContentDirective || boxSmallFooterDirective; else noDirective">
        <ng-content select="mk-box-small-content"></ng-content>
      </ng-container>
      <ng-template #noDirective>
        <ng-content></ng-content>
      </ng-template>
    </p>
  </div>
  <div *ngIf="iconStyleClass" class="icon">
    <i [ngClass]="iconStyleClass" [mkFontColor]="iconColor"></i>
  </div>
  <span *ngIf="footer || boxSmallFooterDirective" [ngClass]="footerStyleClass" [mkFontColor]="footerColor">
    {{footer}}
    <ng-content select="mk-box-small-footer"></ng-content>
  </span>
</div>
`,
                styles: [`.small-box.bg-color{color:#fff}/deep/ .small-box-footer:hover{cursor:pointer}/deep/ .small-box-footer a{color:rgba(255,255,255,.8)}/deep/ .small-box-footer:hover a{color:#fff}`]
            },] },
];
BoxSmallComponent.propDecorators = {
    backgroundColor: [{ type: Input }],
    contentColor: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    footer: [{ type: Input }],
    footerColor: [{ type: Input }],
    footerStyleClass: [{ type: Input }],
    header: [{ type: Input }],
    headerColor: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    iconColor: [{ type: Input }],
    iconStyleClass: [{ type: Input }],
    styleClass: [{ type: Input }],
    boxSmallHeaderDirective: [{ type: ContentChild, args: [BoxSmallHeaderDirective,] }],
    boxSmallFooterDirective: [{ type: ContentChild, args: [BoxSmallFooterDirective,] }],
    boxSmallContentDirective: [{ type: ContentChild, args: [BoxSmallContentDirective,] }]
};
if (false) {
    /** @type {?} */
    BoxSmallComponent.prototype.backgroundColor;
    /** @type {?} */
    BoxSmallComponent.prototype.contentColor;
    /** @type {?} */
    BoxSmallComponent.prototype.contentStyleClass;
    /** @type {?} */
    BoxSmallComponent.prototype.footer;
    /** @type {?} */
    BoxSmallComponent.prototype.footerColor;
    /** @type {?} */
    BoxSmallComponent.prototype.footerStyleClass;
    /** @type {?} */
    BoxSmallComponent.prototype.header;
    /** @type {?} */
    BoxSmallComponent.prototype.headerColor;
    /** @type {?} */
    BoxSmallComponent.prototype.headerStyleClass;
    /** @type {?} */
    BoxSmallComponent.prototype.iconColor;
    /** @type {?} */
    BoxSmallComponent.prototype.iconStyleClass;
    /** @type {?} */
    BoxSmallComponent.prototype.styleClass;
    /** @type {?} */
    BoxSmallComponent.prototype.boxSmallHeaderDirective;
    /** @type {?} */
    BoxSmallComponent.prototype.boxSmallFooterDirective;
    /** @type {?} */
    BoxSmallComponent.prototype.boxSmallContentDirective;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94LXNtYWxsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYWRtaW4tbHRlLyIsInNvdXJjZXMiOlsibGliL2JveC1zbWFsbC9ib3gtc21hbGwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0QsT0FBTyxFQUFFLHdCQUF3QixFQUFFLHVCQUF1QixFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFpQ25ILE1BQU07O2lDQUdnQyxtQkFBbUI7Z0NBR3BCLGtCQUFrQjtnQ0FHbEIsa0JBQWtCOzhCQUVwQixhQUFhOzBCQUNqQixXQUFXOzs7O1lBeEN6QyxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0F1Qlg7Z0JBQ0MsTUFBTSxFQUFFLENBQUMsaUxBQWlMLENBQUM7YUFDNUw7Ozs4QkFFRSxLQUFLOzJCQUNMLEtBQUs7Z0NBQ0wsS0FBSztxQkFDTCxLQUFLOzBCQUNMLEtBQUs7K0JBQ0wsS0FBSztxQkFDTCxLQUFLOzBCQUNMLEtBQUs7K0JBQ0wsS0FBSzt3QkFDTCxLQUFLOzZCQUNMLEtBQUs7eUJBQ0wsS0FBSztzQ0FFTCxZQUFZLFNBQUMsdUJBQXVCO3NDQUNwQyxZQUFZLFNBQUMsdUJBQXVCO3VDQUNwQyxZQUFZLFNBQUMsd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgQ29udGVudENoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEJveFNtYWxsQ29udGVudERpcmVjdGl2ZSwgQm94U21hbGxGb290ZXJEaXJlY3RpdmUsIEJveFNtYWxsSGVhZGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9ib3gtc21hbGwuZGlyZWN0aXZlJztcblxuLypcbiAqXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21rLWJveC1zbWFsbCcsXG4gIHRlbXBsYXRlOiBgPGRpdiBbbmdDbGFzc109XCJzdHlsZUNsYXNzXCIgW21rQ29sb3JdPVwiYmFja2dyb3VuZENvbG9yXCIgbWtDb2xvclByb3BlcnR5PVwiYmFja2dyb3VuZC1jb2xvclwiPlxuICA8ZGl2IGNsYXNzPVwiaW5uZXJcIj5cbiAgICA8aDMgKm5nSWY9XCJoZWFkZXIgfHwgYm94U21hbGxIZWFkZXJEaXJlY3RpdmVcIiBbbmdDbGFzc109XCJoZWFkZXJTdHlsZUNsYXNzXCIgW21rRm9udENvbG9yXT1cImhlYWRlckNvbG9yXCI+XG4gICAgICB7e2hlYWRlcn19XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJtay1ib3gtc21hbGwtaGVhZGVyXCI+PC9uZy1jb250ZW50PlxuICAgIDwvaDM+XG4gICAgPHAgW25nQ2xhc3NdPVwiY29udGVudFN0eWxlQ2xhc3NcIiBbbWtGb250Q29sb3JdPVwiY29udGVudENvbG9yXCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiYm94U21hbGxIZWFkZXJEaXJlY3RpdmUgfHwgYm94U21hbGxDb250ZW50RGlyZWN0aXZlIHx8IGJveFNtYWxsRm9vdGVyRGlyZWN0aXZlOyBlbHNlIG5vRGlyZWN0aXZlXCI+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIm1rLWJveC1zbWFsbC1jb250ZW50XCI+PC9uZy1jb250ZW50PlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8bmctdGVtcGxhdGUgI25vRGlyZWN0aXZlPlxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICA8L25nLXRlbXBsYXRlPlxuICAgIDwvcD5cbiAgPC9kaXY+XG4gIDxkaXYgKm5nSWY9XCJpY29uU3R5bGVDbGFzc1wiIGNsYXNzPVwiaWNvblwiPlxuICAgIDxpIFtuZ0NsYXNzXT1cImljb25TdHlsZUNsYXNzXCIgW21rRm9udENvbG9yXT1cImljb25Db2xvclwiPjwvaT5cbiAgPC9kaXY+XG4gIDxzcGFuICpuZ0lmPVwiZm9vdGVyIHx8IGJveFNtYWxsRm9vdGVyRGlyZWN0aXZlXCIgW25nQ2xhc3NdPVwiZm9vdGVyU3R5bGVDbGFzc1wiIFtta0ZvbnRDb2xvcl09XCJmb290ZXJDb2xvclwiPlxuICAgIHt7Zm9vdGVyfX1cbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJtay1ib3gtc21hbGwtZm9vdGVyXCI+PC9uZy1jb250ZW50PlxuICA8L3NwYW4+XG48L2Rpdj5cbmAsXG4gIHN0eWxlczogW2Auc21hbGwtYm94LmJnLWNvbG9ye2NvbG9yOiNmZmZ9L2RlZXAvIC5zbWFsbC1ib3gtZm9vdGVyOmhvdmVye2N1cnNvcjpwb2ludGVyfS9kZWVwLyAuc21hbGwtYm94LWZvb3RlciBhe2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjgpfS9kZWVwLyAuc21hbGwtYm94LWZvb3Rlcjpob3ZlciBhe2NvbG9yOiNmZmZ9YF1cbn0pXG5leHBvcnQgY2xhc3MgQm94U21hbGxDb21wb25lbnQge1xuICBASW5wdXQoKSBwdWJsaWMgYmFja2dyb3VuZENvbG9yOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBjb250ZW50Q29sb3I6IHN0cmluZztcbiAgQElucHV0KCkgcHVibGljIGNvbnRlbnRTdHlsZUNsYXNzID0gJ3NtYWxsLWJveC1jb250ZW50JztcbiAgQElucHV0KCkgcHVibGljIGZvb3Rlcjogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgZm9vdGVyQ29sb3I6IHN0cmluZztcbiAgQElucHV0KCkgcHVibGljIGZvb3RlclN0eWxlQ2xhc3MgPSAnc21hbGwtYm94LWZvb3Rlcic7XG4gIEBJbnB1dCgpIHB1YmxpYyBoZWFkZXI6IHN0cmluZztcbiAgQElucHV0KCkgcHVibGljIGhlYWRlckNvbG9yOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBoZWFkZXJTdHlsZUNsYXNzID0gJ3NtYWxsLWJveC1oZWFkZXInO1xuICBASW5wdXQoKSBwdWJsaWMgaWNvbkNvbG9yOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBpY29uU3R5bGVDbGFzcyA9ICdpb24gaW9uLWJhZyc7XG4gIEBJbnB1dCgpIHB1YmxpYyBzdHlsZUNsYXNzID0gJ3NtYWxsLWJveCc7XG5cbiAgQENvbnRlbnRDaGlsZChCb3hTbWFsbEhlYWRlckRpcmVjdGl2ZSkgcHVibGljIGJveFNtYWxsSGVhZGVyRGlyZWN0aXZlOiBCb3hTbWFsbEhlYWRlckRpcmVjdGl2ZTtcbiAgQENvbnRlbnRDaGlsZChCb3hTbWFsbEZvb3RlckRpcmVjdGl2ZSkgcHVibGljIGJveFNtYWxsRm9vdGVyRGlyZWN0aXZlOiBCb3hTbWFsbEZvb3RlckRpcmVjdGl2ZTtcbiAgQENvbnRlbnRDaGlsZChCb3hTbWFsbENvbnRlbnREaXJlY3RpdmUpIHB1YmxpYyBib3hTbWFsbENvbnRlbnREaXJlY3RpdmU6IEJveFNtYWxsQ29udGVudERpcmVjdGl2ZTtcbn1cbiJdfQ==